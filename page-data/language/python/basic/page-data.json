{"componentChunkName":"component---src-templates-docs-js","path":"/language/python/basic","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"127c2ba1-5ecc-5fe6-a5e2-27d85ddf7bdf","title":"Basic","slug":"/language/python/basic"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Basic\",\n  \"metaTitle\": \"Basic\",\n  \"metaDescription\": \"This is the meta description\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"list comprehension\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"list([append\\uC5D0 \\uB123\\uC744\\uAC12 for i in range(\\uBC18\\uBCF5\\uD69F\\uC218)])\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"## \\nhash_table = list([0 for i in range(10)])\\nprint(hash_table) # [0, 0, 0, 0, 0, 0, 0, 0, 0, 0] <-- \\uD574\\uC2DC \\uD14C\\uC774\\uBE14\\uC5D0\\uC11C \\uC2AC\\uB86F\\uC744 \\uB9CC\\uB4E0\\uAC83 0\\uBC88 1\\uBC88 2\\uBC88 \\uB4F1 \\uD574\\uC2DC \\uC8FC\\uC18C\\uB97C \\uAC00\\uC9C0\\uACE0 \\uC788\\uACE0 0\\uC774\\uB77C\\uB294 \\uD574\\uC2DC \\uAC12\\uC774 \\uC788\\uB294 \\uD574\\uC2DC \\uD14C\\uC774\\uBE14\\uC744 \\uB9CC\\uB4E0\\uAC83\\n\\n# \\uC704\\uC758 \\uB0B4\\uC6A9\\uC740 \\uC544\\uB798\\uC640 \\uAC19\\uB2E4\\nhash_table2 = []\\nfor i in range(10):\\n    hash_table2.append(0)\\n\\nprint(hash_table2)\\n\")), mdx(\"h2\", null, \"ord(): ASC||(\\uC544\\uC2A4\\uD0A4 \\uCF54\\uB4DC)\\uB97C \\uB9AC\\uD134\\uD568\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"data1 = 'Jack'\\n\\nprint(ord(data1[1])) # 97\\n\")), mdx(\"h2\", null, \"hash(): \\uC5B4\\uB5A4 \\uAC12\\uC774\\uB4E0 \\uD574\\uC2F1\\uD574\\uC11C \\uB9AC\\uD134\\uD558\\uB294 \\uD568\\uC218\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\\uC2E4\\uC81C\\uB85C\\uB294 \\uC798 \\uC548\\uC4F0\\uC774\\uBA70, \\uD604\\uC5C5\\uC5D0\\uC11C\\uB294 \\uD574\\uC2F1\\uD568\\uC218 \\uC9C1\\uC811 \\uAD6C\\uD604\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"hash('Dave')\\n# -6037821185857213912\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#list-comprehension","title":"list comprehension"},{"url":"#ord-asc아스키-코드를-리턴함","title":"ord(): ASC||(아스키 코드)를 리턴함"},{"url":"#hash-어떤-값이든-해싱해서-리턴하는-함수","title":"hash(): 어떤 값이든 해싱해서 리턴하는 함수"}]},"parent":{"__typename":"File","relativePath":"language/python/basic.md"},"frontmatter":{"metaTitle":"Basic","metaDescription":"This is the meta description"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/framework/prisma","title":"Prisma"}}},{"node":{"fields":{"slug":"/datastructure&algorithm","title":"자료구조 & 알고리즘(Datastructure & Algorithm)"}}},{"node":{"fields":{"slug":"/framework","title":"프레임워크(Framework)"}}},{"node":{"fields":{"slug":"/git","title":"깃(Git)"}}},{"node":{"fields":{"slug":"/","title":"SuHyeon's TechBlog"}}},{"node":{"fields":{"slug":"/infra","title":"인프라(Infra)"}}},{"node":{"fields":{"slug":"/library","title":"라이브러리(Library)"}}},{"node":{"fields":{"slug":"/language","title":"언어(Language)"}}},{"node":{"fields":{"slug":"/tdd","title":"테스트 주도 개발(TDD)"}}},{"node":{"fields":{"slug":"/terminology","title":"용어정리(terminology)"}}},{"node":{"fields":{"slug":"/terminology/web","title":"Web"}}},{"node":{"fields":{"slug":"/tdd/2.mocha","title":"Mocha Framework"}}},{"node":{"fields":{"slug":"/tdd/3.chai","title":"Chai Library"}}},{"node":{"fields":{"slug":"/tdd/1.unit-test","title":"유닛 테스트(Unit Test)"}}},{"node":{"fields":{"slug":"/library/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/library/graphql/ApolloGraphQLserver","title":"ApolloGraphQLserver"}}},{"node":{"fields":{"slug":"/library/graphql/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/language/javascript","title":"Javascript"}}},{"node":{"fields":{"slug":"/language/python","title":"Python"}}},{"node":{"fields":{"slug":"/language/python/basic","title":"Basic"}}},{"node":{"fields":{"slug":"/language/typescript","title":"Typescript"}}},{"node":{"fields":{"slug":"/library/nexusjs","title":"Nexus.JS"}}},{"node":{"fields":{"slug":"/language/javascript/class","title":"Class"}}},{"node":{"fields":{"slug":"/language/javascript/executionContext","title":"Execution Context(실행 컨텍스트)"}}},{"node":{"fields":{"slug":"/language/javascript/scope_this","title":"스코프 & 함수 호출 방식에 의해 결정되는 this"}}},{"node":{"fields":{"slug":"/infra/1.BasicTheory","title":"Basic Theory"}}},{"node":{"fields":{"slug":"/infra/2.aws","title":"aws"}}},{"node":{"fields":{"slug":"/infra/3.docker","title":"Docker"}}},{"node":{"fields":{"slug":"/infra/3.docker/docker","title":"Docker"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerawsdeploy","title":"Docker AWS EC2 Deploy"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerbasic","title":"Docker Basic"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Basic","title":"AWS-Basic"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-EC2","title":"AWS-EC2"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-RDS","title":"AWS-RDS"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-S3","title":"AWS-S3"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Route53","title":"AWS-Route 53"}}},{"node":{"fields":{"slug":"/git/changing-default-branch","title":"Changing the Default Branch"}}},{"node":{"fields":{"slug":"/git/configuring-protected-branches","title":"Configure Branch Protection Rule"}}},{"node":{"fields":{"slug":"/git/basic-git-command","title":"Basic git command"}}},{"node":{"fields":{"slug":"/git/gitforksync","title":"git fork & sync"}}},{"node":{"fields":{"slug":"/git/rebase","title":"Rebase"}}},{"node":{"fields":{"slug":"/framework/prisma/NoticePrisma","title":"Notice Prisma"}}},{"node":{"fields":{"slug":"/framework/electron","title":"일렉트론 학습"}}},{"node":{"fields":{"slug":"/framework/prisma/prisma2","title":"Prisma 2"}}},{"node":{"fields":{"slug":"/framework/electron/electronbasic","title":"Electron Basic"}}},{"node":{"fields":{"slug":"/framework/NextJs","title":"Next Js"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/10.SpaceComplexity","title":"공간 복잡도(Space Complexity)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/11.BubbleSort","title":"버블 정렬(Bubble Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/12.InsertionSort","title":"삽입 정렬(Insertion Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/13.SelectionSort","title":"선택 정렬(Selection Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/14.RecursiveCall","title":"재귀 용법(Recursive Call)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/15.DynamicProgramming","title":"동적 계획법과 분할 정복(Dynamic Programming & Divide and conquer"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/16.QuickSort","title":"퀵 정렬(Quick Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/17.MergeSort","title":"병렬 정렬(Merge Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/18.SequentialSearch","title":"순차 탐색(Sequential Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/2.array","title":"배열(Array)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/19.BinarySearch","title":"탐색 알고리즘(Binary Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/20.Graph","title":"그래프(Graph)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/21.Depth-FirstSearch","title":"깊이 우선 탐색(Depth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/22.Breadth-FirstSearch","title":"너비 우선 탐색(Breadth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/23.GreedyAlgorithm","title":"탐욕 알고리즘(Greedy Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/25.MinimumSpanningTree","title":"최소 신장 트리(Minimum Spanning Tree)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/24.DijkstraAlgorithm","title":"다익스트라 알고리즘(Dijkstra Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/26.BackTracking","title":"백트래킹(BackTracking)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/3.queue","title":"큐(Queue)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/4.stack","title":"스택(Stack)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/5.linkedlist","title":"링크드리스트(LinkedList)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/6.TimeComplexity","title":"시간 복잡도(Time Complexity)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/8.Tree","title":"트리(Tree)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/9.Heap","title":"힙(Heap)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/7.HashTable","title":"해쉬 테이블(HashTable)"}}},{"node":{"fields":{"slug":"/language/javascript/closure","title":"Closure"}}}]}},"pageContext":{"id":"127c2ba1-5ecc-5fe6-a5e2-27d85ddf7bdf"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}