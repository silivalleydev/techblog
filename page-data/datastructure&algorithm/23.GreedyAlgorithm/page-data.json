{"componentChunkName":"component---src-templates-docs-js","path":"/datastructure&algorithm/23.GreedyAlgorithm","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"75bc822d-9fdd-5cf5-b5e8-d4f2376d6437","title":"탐욕 알고리즘(Greedy Algorithm)","slug":"/datastructure&algorithm/23.GreedyAlgorithm"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"탐욕 알고리즘(Greedy Algorithm)\",\n  \"metaTitle\": \"탐욕 알고리즘(Greedy Algorithm)\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"1. \\uD0D0\\uC695 \\uC54C\\uACE0\\uB9AC\\uC998 \\uC774\\uB780?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Greedy algorithm \\uB610\\uB294 \\uD0D0\\uC695 \\uC54C\\uACE0\\uB9AC\\uC998 \\uC774\\uB77C\\uACE0 \\uBD88\\uB9AC\\uC6C0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCD5C\\uC801\\uC758 \\uD574\\uC5D0 \\uAC00\\uAE4C\\uC6B4 \\uAC12\\uC744 \\uAD6C\\uD558\\uAE30 \\uC704\\uD574 \\uC0AC\\uC6A9\\uB428\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC5EC\\uB7EC \\uACBD\\uC6B0 \\uC911 \\uD558\\uB098\\uB97C \\uACB0\\uC815\\uD574\\uC57C\\uD560 \\uB54C\\uB9C8\\uB2E4, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\\uB9E4\\uC21C\\uAC04 \\uCD5C\\uC801\\uC774\\uB77C\\uACE0 \\uC0DD\\uAC01\\uB418\\uB294 \\uACBD\\uC6B0\\uB97C \\uC120\\uD0DD\"), \"\\uD558\\uB294 \\uBC29\\uC2DD\\uC73C\\uB85C \\uC9C4\\uD589\\uD574\\uC11C, \\uCD5C\\uC885\\uC801\\uC778 \\uAC12\\uC744 \\uAD6C\\uD558\\uB294 \\uBC29\\uC2DD\")), mdx(\"h3\", null, \"2. \\uD0D0\\uC695 \\uC54C\\uACE0\\uB9AC\\uC998 \\uC608\"), mdx(\"h3\", null, \"\\uBB38\\uC81C1: \\uB3D9\\uC804 \\uBB38\\uC81C\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC9C0\\uBD88\\uD574\\uC57C \\uD558\\uB294 \\uAC12\\uC774 4720\\uC6D0 \\uC77C \\uB54C 1\\uC6D0 50\\uC6D0 100\\uC6D0, 500\\uC6D0 \\uB3D9\\uC804\\uC73C\\uB85C \\uB3D9\\uC804\\uC758 \\uC218\\uAC00 \\uAC00\\uC7A5 \\uC801\\uAC8C \\uC9C0\\uBD88\\uD558\\uC2DC\\uC624.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC00\\uC7A5 \\uD070 \\uB3D9\\uC804\\uBD80\\uD130 \\uCD5C\\uB300\\uD55C \\uC9C0\\uBD88\\uD574\\uC57C \\uD558\\uB294 \\uAC12\\uC744 \\uCC44\\uC6B0\\uB294 \\uBC29\\uC2DD\\uC73C\\uB85C \\uAD6C\\uD604 \\uAC00\\uB2A5\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD0D0\\uC695 \\uC54C\\uACE0\\uB9AC\\uC998\\uC73C\\uB85C \\uB9E4\\uC21C\\uAC04 \\uCD5C\\uC801\\uC774\\uB77C\\uACE0 \\uC0DD\\uAC01\\uB418\\uB294 \\uACBD\\uC6B0\\uB97C \\uC120\\uD0DD\\uD558\\uBA74 \\uB428\")))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"coin_list = [1, 100, 50, 500]\\nprint (coin_list)\\ncoin_list.sort(reverse=True)\\nprint (coin_list)\\n\\n[1, 100, 50, 500]\\n[500, 100, 50, 1]\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"coin_list = [500, 100, 50, 1]\\n\\ndef min_coin_count(value, coin_list):\\n    total_coin_count = 0\\n    details = list()\\n    coin_list.sort(reverse=True)\\n    for coin in coin_list:\\n        coin_num = value // coin\\n        total_coin_count += coin_num\\n        value -= coin_num * coin\\n        details.append([coin, coin_num])\\n    return total_coin_count, details\\n\\nmin_coin_count(4720, coin_list)\\n\\n(31, [[500, 9], [100, 2], [50, 0], [1, 20]])\\n\")), mdx(\"h3\", null, \"\\uBB38\\uC81C2: \\uBD80\\uBD84 \\uBC30\\uB0AD \\uBB38\\uC81C (Fractional Knapsack Problem)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBB34\\uAC8C \\uC81C\\uD55C\\uC774 k\\uC778 \\uBC30\\uB0AD\\uC5D0 \\uCD5C\\uB300 \\uAC00\\uCE58\\uB97C \\uAC00\\uC9C0\\uB3C4\\uB85D \\uBB3C\\uAC74\\uC744 \\uB123\\uB294 \\uBB38\\uC81C\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"- \\uAC01 \\uBB3C\\uAC74\\uC740 \\uBB34\\uAC8C(w)\\uC640 \\uAC00\\uCE58(v)\\uB85C \\uD45C\\uD604\\uB420 \\uC218 \\uC788\\uC74C\\n- \\uBB3C\\uAC74\\uC740 \\uCABC\\uAC24 \\uC218 \\uC788\\uC73C\\uBBC0\\uB85C \\uBB3C\\uAC74\\uC758 \\uC77C\\uBD80\\uBD84\\uC774 \\uBC30\\uB0AD\\uC5D0 \\uB123\\uC5B4\\uC9C8 \\uC218 \\uC788\\uC74C, \\uADF8\\uB798\\uC11C Fractional Knapsack Problem \\uC73C\\uB85C \\uBD80\\uB984\\n  - Fractional Knapsack Problem \\uC758 \\uBC18\\uB300\\uB85C \\uBB3C\\uAC74\\uC744 \\uCABC\\uAC1C\\uC11C \\uB123\\uC744 \\uC218 \\uC5C6\\uB294 \\uBC30\\uB0AD \\uBB38\\uC81C\\uB3C4 \\uC874\\uC7AC\\uD568 (0/1 Knapsack Problem \\uC73C\\uB85C \\uBD80\\uB984)\\n\")), mdx(\"img\", _extends({\n    parentName: \"li\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/knapsack.png\",\n    \"alt\": \"dc\"\n  })))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"data_list = [(10, 10), (15, 12), (20, 10), (25, 8), (30, 5)]\\n\\ndef get_max_value(data_list, capacity):\\n    data_list = sorted(data_list, key=lambda x: x[1] / x[0], reverse=True)\\n    total_value = 0\\n    details = list()\\n    \\n    for data in data_list:\\n        if capacity - data[0] >= 0:\\n            capacity -= data[0]\\n            total_value += data[1]\\n            details.append([data[0], data[1], 1])\\n        else:\\n            fraction = capacity / data[0]\\n            total_value += data[1] * fraction\\n            details.append([data[0], data[1], fraction])\\n            break\\n    return total_value, details\\n\\nget_max_value(data_list, 30)\\n\\n(24.5, [[10, 10, 1], [15, 12, 1], [20, 10, 0.25]])\\n\")), mdx(\"h3\", null, \"3. \\uD0D0\\uC695 \\uC54C\\uACE0\\uB9AC\\uC998\\uC758 \\uD55C\\uACC4\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD0D0\\uC695 \\uC54C\\uACE0\\uB9AC\\uC998\\uC740 \\uADFC\\uC0AC\\uCE58 \\uCD94\\uC815\\uC5D0 \\uD65C\\uC6A9\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC18\\uB4DC\\uC2DC \\uCD5C\\uC801\\uC758 \\uD574\\uB97C \\uAD6C\\uD560 \\uC218 \\uC788\\uB294 \\uAC83\\uC740 \\uC544\\uB2C8\\uAE30 \\uB54C\\uBB38\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCD5C\\uC801\\uC758 \\uD574\\uC5D0 \\uAC00\\uAE4C\\uC6B4 \\uAC12\\uC744 \\uAD6C\\uD558\\uB294 \\uBC29\\uBC95 \\uC911\\uC758 \\uD558\\uB098\\uC784\")), mdx(\"h3\", null, \"\\uC608\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/greedy.png\",\n    \"alt\": \"cds\"\n  }))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"'\\uC2DC\\uC791' \\uB178\\uB4DC\\uC5D0\\uC11C \\uC2DC\\uC791\\uD574\\uC11C \\uAC00\\uC7A5 \\uC791\\uC740 \\uAC12\\uC744 \\uCC3E\\uC544 leaf node \\uAE4C\\uC9C0 \\uAC00\\uB294 \\uACBD\\uB85C\\uB97C \\uCC3E\\uC744 \\uC2DC\\uC5D0\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Greedy \\uC54C\\uACE0\\uB9AC\\uC998 \\uC801\\uC6A9\\uC2DC \\uC2DC\\uC791 -> 7 -> 12 \\uB97C \\uC120\\uD0DD\\uD558\\uAC8C \\uB418\\uBBC0\\uB85C 7 + 12 = 19 \\uAC00 \\uB428 \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD558\\uC9C0\\uB9CC \\uC2E4\\uC81C \\uAC00\\uC7A5 \\uC791\\uC740 \\uAC12\\uC740 \\uC2DC\\uC791 -> 10 -> 5 \\uC774\\uBA70, 10 + 5 = 15 \\uAC00 \\uB2F5\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#1-탐욕-알고리즘-이란","title":"1. 탐욕 알고리즘 이란?"},{"url":"#2-탐욕-알고리즘-예","title":"2. 탐욕 알고리즘 예"},{"url":"#문제1-동전-문제","title":"문제1: 동전 문제"},{"url":"#문제2-부분-배낭-문제-fractional-knapsack-problem","title":"문제2: 부분 배낭 문제 (Fractional Knapsack Problem)"},{"url":"#3-탐욕-알고리즘의-한계","title":"3. 탐욕 알고리즘의 한계"},{"url":"#예","title":"예"}]},"parent":{"__typename":"File","relativePath":"datastructure&algorithm/23.GreedyAlgorithm.md"},"frontmatter":{"metaTitle":"탐욕 알고리즘(Greedy Algorithm)","metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/framework/prisma","title":"Prisma"}}},{"node":{"fields":{"slug":"/datastructure&algorithm","title":"자료구조 & 알고리즘(Datastructure & Algorithm)"}}},{"node":{"fields":{"slug":"/framework","title":"프레임워크(Framework)"}}},{"node":{"fields":{"slug":"/git","title":"깃(Git)"}}},{"node":{"fields":{"slug":"/","title":"SuHyeon's TechBlog"}}},{"node":{"fields":{"slug":"/infra","title":"인프라(Infra)"}}},{"node":{"fields":{"slug":"/library","title":"라이브러리(Library)"}}},{"node":{"fields":{"slug":"/language","title":"언어(Language)"}}},{"node":{"fields":{"slug":"/tdd","title":"테스트 주도 개발(TDD)"}}},{"node":{"fields":{"slug":"/terminology","title":"용어정리(terminology)"}}},{"node":{"fields":{"slug":"/terminology/web","title":"Web"}}},{"node":{"fields":{"slug":"/tdd/2.mocha","title":"Mocha Framework"}}},{"node":{"fields":{"slug":"/tdd/3.chai","title":"Chai Library"}}},{"node":{"fields":{"slug":"/tdd/1.unit-test","title":"유닛 테스트(Unit Test)"}}},{"node":{"fields":{"slug":"/library/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/library/graphql/ApolloGraphQLserver","title":"ApolloGraphQLserver"}}},{"node":{"fields":{"slug":"/library/graphql/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/language/javascript","title":"Javascript"}}},{"node":{"fields":{"slug":"/language/python","title":"Python"}}},{"node":{"fields":{"slug":"/language/python/basic","title":"Basic"}}},{"node":{"fields":{"slug":"/language/typescript","title":"Typescript"}}},{"node":{"fields":{"slug":"/library/nexusjs","title":"Nexus.JS"}}},{"node":{"fields":{"slug":"/language/javascript/class","title":"Class"}}},{"node":{"fields":{"slug":"/language/javascript/executionContext","title":"Execution Context(실행 컨텍스트)"}}},{"node":{"fields":{"slug":"/language/javascript/scope_this","title":"스코프 & 함수 호출 방식에 의해 결정되는 this"}}},{"node":{"fields":{"slug":"/infra/1.BasicTheory","title":"Basic Theory"}}},{"node":{"fields":{"slug":"/infra/2.aws","title":"aws"}}},{"node":{"fields":{"slug":"/infra/3.docker","title":"Docker"}}},{"node":{"fields":{"slug":"/infra/3.docker/docker","title":"Docker"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerawsdeploy","title":"Docker AWS EC2 Deploy"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerbasic","title":"Docker Basic"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Basic","title":"AWS-Basic"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-EC2","title":"AWS-EC2"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-RDS","title":"AWS-RDS"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-S3","title":"AWS-S3"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Route53","title":"AWS-Route 53"}}},{"node":{"fields":{"slug":"/git/changing-default-branch","title":"Changing the Default Branch"}}},{"node":{"fields":{"slug":"/git/configuring-protected-branches","title":"Configure Branch Protection Rule"}}},{"node":{"fields":{"slug":"/git/basic-git-command","title":"Basic git command"}}},{"node":{"fields":{"slug":"/git/gitforksync","title":"git fork & sync"}}},{"node":{"fields":{"slug":"/git/rebase","title":"Rebase"}}},{"node":{"fields":{"slug":"/framework/prisma/NoticePrisma","title":"Notice Prisma"}}},{"node":{"fields":{"slug":"/framework/electron","title":"일렉트론 학습"}}},{"node":{"fields":{"slug":"/framework/prisma/prisma2","title":"Prisma 2"}}},{"node":{"fields":{"slug":"/framework/electron/electronbasic","title":"Electron Basic"}}},{"node":{"fields":{"slug":"/framework/NextJs","title":"Next Js"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/10.SpaceComplexity","title":"공간 복잡도(Space Complexity)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/11.BubbleSort","title":"버블 정렬(Bubble Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/12.InsertionSort","title":"삽입 정렬(Insertion Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/13.SelectionSort","title":"선택 정렬(Selection Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/14.RecursiveCall","title":"재귀 용법(Recursive Call)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/15.DynamicProgramming","title":"동적 계획법과 분할 정복(Dynamic Programming & Divide and conquer"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/16.QuickSort","title":"퀵 정렬(Quick Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/17.MergeSort","title":"병렬 정렬(Merge Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/18.SequentialSearch","title":"순차 탐색(Sequential Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/2.array","title":"배열(Array)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/19.BinarySearch","title":"탐색 알고리즘(Binary Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/20.Graph","title":"그래프(Graph)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/21.Depth-FirstSearch","title":"깊이 우선 탐색(Depth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/22.Breadth-FirstSearch","title":"너비 우선 탐색(Breadth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/23.GreedyAlgorithm","title":"탐욕 알고리즘(Greedy Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/25.MinimumSpanningTree","title":"최소 신장 트리(Minimum Spanning Tree)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/24.DijkstraAlgorithm","title":"다익스트라 알고리즘(Dijkstra Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/26.BackTracking","title":"백트래킹(BackTracking)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/3.queue","title":"큐(Queue)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/4.stack","title":"스택(Stack)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/5.linkedlist","title":"링크드리스트(LinkedList)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/6.TimeComplexity","title":"시간 복잡도(Time Complexity)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/8.Tree","title":"트리(Tree)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/9.Heap","title":"힙(Heap)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/7.HashTable","title":"해쉬 테이블(HashTable)"}}}]}},"pageContext":{"id":"75bc822d-9fdd-5cf5-b5e8-d4f2376d6437"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}