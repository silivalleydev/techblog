{"componentChunkName":"component---src-templates-docs-js","path":"/datastructure&algorithm/14.RecursiveCall","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"c1ecd01d-caad-527e-8afd-e1bcf8d90b9b","title":"재귀 용법(Recursive Call)","slug":"/datastructure&algorithm/14.RecursiveCall"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"재귀 용법(Recursive Call)\",\n  \"metaTitle\": \"재귀 용법(Recursive Call)\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\uC7AC\\uADC0 \\uC6A9\\uBC95 (recursive call, \\uC7AC\\uADC0 \\uD638\\uCD9C)\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uACE0\\uAE09 \\uC815\\uB82C \\uC54C\\uACE0\\uB9AC\\uC998\\uC5E5\\uC11C \\uC7AC\\uADC0 \\uC6A9\\uBC95\\uC744 \\uC0AC\\uC6A9\\uD558\\uBBC0\\uB85C, \\uACE0\\uAE09 \\uC815\\uB82C \\uC54C\\uACE0\\uB9AC\\uC998\\uC744 \\uC775\\uD788\\uAE30 \\uC804\\uC5D0 \\uC7AC\\uADC0 \\uC6A9\\uBC95\\uC744 \\uBA3C\\uC800 \\uC775\\uD788\\uAE30\\uB85C \\uD569\\uB2C8\\uB2E4.\")), mdx(\"h3\", null, \"1. \\uC7AC\\uADC0 \\uC6A9\\uBC95 (recursive call, \\uC7AC\\uADC0 \\uD638\\uCD9C)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD568\\uC218 \\uC548\\uC5D0\\uC11C \\uB3D9\\uC77C\\uD55C \\uD568\\uC218\\uB97C \\uD638\\uCD9C\\uD558\\uB294 \\uD615\\uD0DC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC5EC\\uB7EC \\uC54C\\uACE0\\uB9AC\\uC998 \\uC791\\uC131\\uC2DC \\uC0AC\\uC6A9\\uB418\\uBBC0\\uB85C, \\uC775\\uC219\\uD574\\uC838\\uC57C \\uD568\")), mdx(\"h3\", null, \"2. \\uC7AC\\uADC0 \\uC6A9\\uBC95 \\uC774\\uD574\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC608\\uC81C\\uB97C \\uD480\\uC5B4\\uBCF4\\uBA70, \\uC7AC\\uADC0 \\uC6A9\\uBC95\\uC744 \\uC774\\uD574\\uD574\\uBCF4\\uAE30\")), mdx(\"h3\", null, \"\\uC608\\uC81C\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD329\\uD1A0\\uB9AC\\uC5BC\\uC744 \\uAD6C\\uD558\\uB294 \\uC54C\\uACE0\\uB9AC\\uC998\\uC744 Recursive Call \\uC744 \\uD65C\\uC6A9\\uD574\\uC11C \\uC54C\\uACE0\\uB9AC\\uC998 \\uC791\\uC131\\uD558\\uAE30\")), mdx(\"h3\", null, \"\\uC608\\uC81C - \\uBD84\\uC11D\\uD558\\uAE30\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC04\\uB2E8\\uD55C \\uACBD\\uC6B0\\uBD80\\uD130 \\uC0DD\\uAC01\\uD574\\uBCF4\\uAE30\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"2! = 1 X 2\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"3! = 1 X 2 X 3\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"4! = 1 X 2 X 3 X 4 = 4 X 3!\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uADDC\\uCE59\\uC774 \\uBCF4\\uC784: n! = n X (n - 1)!\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uD568\\uC218\\uB97C \\uD558\\uB098 \\uB9CC\\uB4E0\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uD568\\uC218(n) \\uC740 n > 1 \\uC774\\uBA74 return n X \\uD568\\uC218(n - 1)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uD568\\uC218(n) \\uC740 n = 1 \\uC774\\uBA74 return n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC80\\uC99D (\\uCF54\\uB4DC\\uB85C \\uAC80\\uC99D\\uD558\\uC9C0 \\uC54A\\uACE0, \\uC9C1\\uC811 \\uAC04\\uB2E8\\uD55C \\uACBD\\uC6B0\\uBD80\\uD130 \\uB300\\uC785\\uD574\\uC11C \\uAC80\\uC99D\\uD574\\uC57C \\uD568)\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uBA3C\\uC800 2! \\uBD80\\uD130 \")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD568\\uC218(2) \\uC774\\uBA74, 2 > 1 \\uC774\\uBBC0\\uB85C 2 X \\uD568\\uC218(1)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD568\\uC218(1) \\uC740 1 \\uC774\\uBBC0\\uB85C, return 2 X 1 = 2 \\uB9DE\\uB2E4!\")))), mdx(\"ol\", _extends({\n    parentName: \"li\"\n  }, {\n    \"start\": 2\n  }), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uBA3C\\uC800 3! \\uBD80\\uD130 \")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD568\\uC218(3) \\uC774\\uBA74, 3 > 1 \\uC774\\uBBC0\\uB85C 3 X \\uD568\\uC218(2)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD568\\uC218(2) \\uB294 \\uACB0\\uAD6D 1\\uBC88\\uC5D0 \\uC758\\uD574 2! \\uC774\\uBBC0\\uB85C, return 2 X 1 = 2 \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"3 X \\uD568\\uC218(2) = 3 X 2 = 3 X 2 X 1 = 6 \\uB9DE\\uB2E4!\")))), mdx(\"ol\", _extends({\n    parentName: \"li\"\n  }, {\n    \"start\": 3\n  }), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uBA3C\\uC800 4! \\uBD80\\uD130 \")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD568\\uC218(4) \\uC774\\uBA74, 4 > 1 \\uC774\\uBBC0\\uB85C 4 X \\uD568\\uC218(3)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD568\\uC218(3) \\uC740 \\uACB0\\uAD6D 2\\uBC88\\uC5D0 \\uC758\\uD574 3 X 2 X 1 = 6 \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"4 X \\uD568\\uC218(3) = 4 X 6 = 24 \\uB9DE\\uB2E4! \")))))), mdx(\"h3\", null, \"\\uC608\\uC81C - \\uCF54\\uB4DC \\uB808\\uBCA8\\uB85C \\uC801\\uC5B4\\uBCF4\\uAE30\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"def factorial(num):\\n    if num > 1:\\n        return num * factorial(num - 1)\\n    else:\\n        return num\\n\\nfor num in range(10):\\n    print (factorial(num))\\n\\n0\\n1\\n2\\n6\\n24\\n120\\n720\\n5040\\n40320\\n362880\\n\")), mdx(\"h3\", null, \"\\uC608\\uC81C - \\uC2DC\\uAC04 \\uBCF5\\uC7A1\\uB3C4\\uC640 \\uACF5\\uAC04 \\uBCF5\\uC7A1\\uB3C4\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"factorial(n) \\uC740 n - 1 \\uBC88\\uC758 factorial() \\uD568\\uC218\\uB97C \\uD638\\uCD9C\\uD574\\uC11C, \\uACF1\\uC148\\uC744 \\uD568 \"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC77C\\uC885\\uC758 n-1\\uBC88 \\uBC18\\uBCF5\\uBB38\\uC744 \\uD638\\uCD9C\\uD55C \\uAC83\\uACFC \\uB3D9\\uC77C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"factorial() \\uD568\\uC218\\uB97C \\uD638\\uCD9C\\uD560 \\uB54C\\uB9C8\\uB2E4, \\uC9C0\\uC5ED\\uBCC0\\uC218 n \\uC774 \\uC0DD\\uC131\\uB428\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC2DC\\uAC04 \\uBCF5\\uC7A1\\uB3C4/\\uACF5\\uAC04 \\uBCF5\\uC7A1\\uB3C4\\uB294 O(n-1) \\uC774\\uBBC0\\uB85C \\uACB0\\uAD6D, \\uB458 \\uB2E4 O(n)\"))), mdx(\"h3\", null, \"3. \\uC7AC\\uADC0 \\uD638\\uCD9C\\uC758 \\uC77C\\uBC18\\uC801\\uC778 \\uD615\\uD0DC\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"# \\uC77C\\uBC18\\uC801\\uC778 \\uD615\\uD0DC1\\ndef function(\\uC785\\uB825):\\n    if \\uC785\\uB825 > \\uC77C\\uC815\\uAC12: # \\uC785\\uB825\\uC774 \\uC77C\\uC815 \\uAC12 \\uC774\\uC0C1\\uC774\\uBA74\\n        return function(\\uC785\\uB825 - 1) # \\uC785\\uB825\\uBCF4\\uB2E4 \\uC791\\uC740 \\uAC12\\n    else:\\n        return \\uC77C\\uC815\\uAC12, \\uC785\\uB825\\uAC12, \\uB610\\uB294 \\uD2B9\\uC815\\uAC12 # \\uC7AC\\uADC0 \\uD638\\uCD9C \\uC885\\uB8CC\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"# \\uC77C\\uBC18\\uC801\\uC778 \\uD615\\uD0DC2\\ndef function(\\uC785\\uB825):\\n    if \\uC785\\uB825 <= \\uC77C\\uC815\\uAC12:              # \\uC785\\uB825\\uC774 \\uC77C\\uC815 \\uAC12\\uBCF4\\uB2E4 \\uC791\\uC73C\\uBA74\\n        return \\uC77C\\uC815\\uAC12, \\uC785\\uB825\\uAC12, \\uB610\\uB294 \\uD2B9\\uC815\\uAC12              # \\uC7AC\\uADC0 \\uD638\\uCD9C \\uC885\\uB8CC\\n    function(\\uC785\\uB825\\uBCF4\\uB2E4 \\uC791\\uC740 \\uAC12)\\n    return \\uACB0\\uACFC\\uAC12\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"def factorial(num):\\n    if num <= 1:\\n        return num\\n    \\n    return num * factorial(num - 1)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"for num in range(10):\\n    print (factorial(num))\\n\\n0\\n1\\n2\\n6\\n24\\n120\\n720\\n5040\\n40320\\n362880\\n\")), mdx(\"h3\", null, \"\\uC7AC\\uADC0 \\uD638\\uCD9C\\uC740 \\uC2A4\\uD0DD\\uC758 \\uC804\\uD615\\uC801\\uC778 \\uC608\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD568\\uC218\\uB294 \\uB0B4\\uBD80\\uC801\\uC624\\uB974 \\uC2A4\\uD0DD\\uCC98\\uB7FC \\uAD00\\uB9AC\\uB41C\\uB2E4.\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/recursivecall.png\",\n    \"alt\": \"cds\"\n  }))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uCC38\\uACE0: \\uD30C\\uC774\\uC36C\\uC5D0\\uC11C \\uC7AC\\uADC0 \\uD568\\uC218\\uB294 \\uAE4A\\uC774\\uAC00(\\uD55C\\uBC88\\uC5D0 \\uD638\\uCD9C\\uB418\\uB294...) 1000\\uD68C \\uC774\\uD558\\uAC00 \\uB418\\uC5B4\\uC57C \\uD568\")), mdx(\"h3\", null, \"4. \\uC7AC\\uADC0 \\uC6A9\\uBC95\\uC744 \\uD65C\\uC6A9\\uD55C \\uD504\\uB85C\\uADF8\\uB798\\uBC0D \\uC5F0\\uC2B5\"), mdx(\"h4\", null, \"\\uD504\\uB85C\\uADF8\\uB798\\uBC0D \\uC5F0\\uC2B5\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB2E4\\uC74C \\uD568\\uC218\\uB97C \\uC7AC\\uADC0 \\uD568\\uC218\\uB97C \\uD65C\\uC6A9\\uD574\\uC11C \\uC644\\uC131\\uD574\\uC11C 1\\uBD80\\uD130 num\\uAE4C\\uC9C0\\uC758 \\uACF1\\uC774 \\uCD9C\\uB825\\uB418\\uAC8C \\uB9CC\\uB4DC\\uC138\\uC694\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"def muliple(data):\\n    if data <= 1:\\n        return data\\n    \\n    return \\n    \\nmultiple(10)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"def multiple(num):\\n    return_value = 1\\n    for index in range(1, num + 1):\\n        return_value = return_value * index\\n    return return_value\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"def multiple(num):\\n    if num <= 1:\\n        return num\\n    return num * multiple(num - 1)\\n\\nmultiple(10)\\n\\n3628800\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC22B\\uC790\\uAC00 \\uB4E4\\uC5B4 \\uC788\\uB294 \\uB9AC\\uC2A4\\uD2B8\\uAC00 \\uC8FC\\uC5B4\\uC84C\\uC744 \\uB54C, \\uB9AC\\uC2A4\\uD2B8\\uC758 \\uD569\\uC744 \\uB9AC\\uD134\\uD558\\uB294 \\uD568\\uC218\\uB97C \\uB9CC\\uB4DC\\uC138\\uC694\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCC38\\uACE0: \\uC784\\uC758 \\uAC12\\uC73C\\uB85C \\uB9AC\\uC2A4\\uD2B8 \\uB9CC\\uB4E4\\uAE30 random.sample(0 ~ 99\\uAE4C\\uC9C0 \\uC911\\uC5D0\\uC11C, \\uC784\\uC758\\uB85C 10\\uAC1C\\uB97C \\uB9CC\\uB4E4\\uC5B4\\uC11C 10\\uAC1C \\uAC12\\uC744 \\uAC00\\uC9C0\\uB294 \\uB9AC\\uC2A4\\uD2B8 \\uBCC0\\uC218 \\uB9CC\\uB4E4\\uAE30\")))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"import random \\ndata = random.sample(range(100), 10)\\ndata\\n\\n[72, 50, 8, 38, 77, 32, 90, 48, 74, 79]\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC22B\\uC790\\uAC00 \\uB4E4\\uC5B4 \\uC788\\uB294 \\uB9AC\\uC2A4\\uD2B8\\uAC00 \\uC8FC\\uC5B4\\uC84C\\uC744 \\uB54C, \\uB9AC\\uC2A4\\uD2B8\\uC758 \\uD569\\uC744 \\uB9AC\\uD134\\uD558\\uB294 \\uD568\\uC218\\uB97C \\uB9CC\\uB4DC\\uC138\\uC694 (\\uC7AC\\uADC0\\uD568\\uC218\\uB97C \\uC368\\uBCF4\\uC138\\uC694)\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"def sum_list(data):\\n    if len(data) <= 1:\\n        return data[0]\\n    return data[0] + sum_list(data[1:])\\n\\nsum_list(data)\\n\\n568\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD68C\\uBB38(palindrome)\\uC740 \\uC21C\\uC11C\\uB97C \\uAC70\\uAFB8\\uB85C \\uC77D\\uC5B4\\uB3C4 \\uC81C\\uB300\\uB85C \\uC77D\\uC740 \\uAC83\\uACFC \\uAC19\\uC740 \\uB2E8\\uC5B4\\uC640 \\uBB38\\uC7A5\\uC744 \\uC758\\uBBF8\\uD568\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"\\uD68C\\uBB38\\uC744 \\uD310\\uBCC4\\uD560 \\uC218 \\uC788\\uB294 \\uD568\\uC218\\uB97C \\uB9AC\\uC2A4\\uD2B8 \\uC2AC\\uB77C\\uC774\\uC2F1\\uC744 \\uD65C\\uC6A9\\uD574\\uC11C \\uB9CC\\uB4DC\\uC138\\uC694\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/palindrome.png\",\n    \"alt\": \"dsc\"\n  }))), mdx(\"p\", null, \"\\uCC38\\uACE0 - \\uB9AC\\uC2A4\\uD2B8 \\uC2AC\\uB77C\\uC774\\uC2F1\\nstring = 'Dave'\\nstring\", \"[-1]\", \" --> e\\nstring\", \"[0]\", \" --> D\\nstring\", \"[1:-1]\", \" --> av\\nstring\", \"[:-1]\", \" --> Dav\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD68C\\uBB38(palindrome)\\uC740 \\uC21C\\uC11C\\uB97C \\uAC70\\uAFB8\\uB85C \\uC77D\\uC5B4\\uB3C4 \\uC81C\\uB300\\uB85C \\uC77D\\uC740 \\uAC83\\uACFC \\uAC19\\uC740 \\uB2E8\\uC5B4\\uC640 \\uBB38\\uC7A5\\uC744 \\uC758\\uBBF8\\uD568\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"\\uD68C\\uBB38\\uC744 \\uD310\\uBCC4\\uD560 \\uC218 \\uC788\\uB294 \\uD568\\uC218\\uB97C \\uC7AC\\uADC0\\uD568\\uC218\\uB97C \\uD65C\\uC6A9\\uD574\\uC11C \\uB9CC\\uB4E4\\uC5B4\\uBD05\\uB2C8\\uB2E4.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"def palindrome(string):\\n    if len(strung) <= 1:\\n        return True\\n    \\n    if string[0] == string[-1]:\\n        return palindrome(string[1:-1])\\n    else:\\n        return False\\n\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uC815\\uC218 n\\uC5D0 \\uB300\\uD574\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"n\\uC774 \\uD640\\uC218\\uC774\\uBA74 3 X n + 1 \\uC744 \\uD558\\uACE0,\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"n\\uC774 \\uC9DD\\uC218\\uC774\\uBA74 n \\uC744 2\\uB85C \\uB098\\uB215\\uB2C8\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uC774\\uB807\\uAC8C \\uACC4\\uC18D \\uC9C4\\uD589\\uD574\\uC11C n \\uC774 \\uACB0\\uAD6D 1\\uC774 \\uB420 \\uB54C\\uAE4C\\uC9C0 2\\uC640 3\\uC758 \\uACFC\\uC815\\uC744 \\uBC18\\uBCF5\\uD569\\uB2C8\\uB2E4.\")), mdx(\"p\", null, \"\\uC608\\uB97C \\uB4E4\\uC5B4 n\\uC5D0 3\\uC744 \\uB123\\uC73C\\uBA74,  \"), mdx(\"p\", null, \"3\\n10\\n5\\n16\\n8\\n4\\n2\\n1\\n\\uC774 \\uB429\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uC774\\uB807\\uAC8C \\uC815\\uC218 n\\uC744 \\uC785\\uB825\\uBC1B\\uC544, \\uC704 \\uC54C\\uACE0\\uB9AC\\uC998\\uC5D0 \\uC758\\uD574 1\\uC774 \\uB418\\uB294 \\uACFC\\uC815\\uC744 \\uBAA8\\uB450 \\uCD9C\\uB825\\uD558\\uB294 \\uD568\\uC218\\uB97C \\uC791\\uC131\\uD558\\uC138\\uC694.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"def func(n):\\n    print (n)\\n    if n == 1:\\n        return n\\n    \\n    if n % 2 == 1:\\n        return (func((3 * n) + 1))\\n    else:\\n        return (func(int(n / 2)))\\n        \\nfunc(3)\\n\\n3\\n10\\n5\\n16\\n8\\n4\\n2\\n1\\n1\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBB38\\uC81C: \\uC815\\uC218 4\\uB97C 1, 2, 3\\uC758 \\uC870\\uD569\\uC73C\\uB85C \\uB098\\uD0C0\\uB0B4\\uB294 \\uBC29\\uBC95\\uC740 \\uB2E4\\uC74C\\uACFC \\uAC19\\uC774 \\uCD1D 7\\uAC00\\uC9C0\\uAC00 \\uC788\\uC74C\\n1+1+1+1\\n1+1+2\\n1+2+1\\n2+1+1\\n2+2\\n1+3\\n3+1\\n\\uC815\\uC218 n\\uC774 \\uC785\\uB825\\uC73C\\uB85C \\uC8FC\\uC5B4\\uC84C\\uC744 \\uB54C, n\\uC744 1, 2, 3\\uC758 \\uD569\\uC73C\\uB85C \\uB098\\uD0C0\\uB0BC \\uC218 \\uC788\\uB294 \\uBC29\\uBC95\\uC758 \\uC218\\uB97C \\uAD6C\\uD558\\uC2DC\\uC624\")), mdx(\"p\", null, \"\\uD78C\\uD2B8: \\uC815\\uC218 n\\uC744 \\uB9CC\\uB4E4 \\uC218 \\uC788\\uB294 \\uACBD\\uC6B0\\uC758 \\uC218\\uB97C \\uB9AC\\uD134\\uD558\\uB294 \\uD568\\uC218\\uB97C f(n) \\uC774\\uB77C\\uACE0 \\uD558\\uBA74,\\nf(n)\\uC740 f(n-1) + f(n-2) + f(n-3) \\uACFC \\uB3D9\\uC77C\\uD558\\uB2E4\\uB294 \\uD328\\uD134 \\uCC3E\\uAE30\"), mdx(\"h3\", null, \"\\uBB38\\uC81C \\uBD84\\uC11D\\uC744 \\uC5F0\\uC2B5\\uC7A5\\uC5D0 \\uC791\\uC131\\uD574 \\uBCF8 \\uC608\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/algopractice.jpg\",\n    \"alt\": \"dsc\"\n  }))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"def func(data):\\n    if data == 1:\\n        return 1\\n    elif data == 2:\\n        return 2\\n    elif data == 3:\\n        return 4\\n    \\n    return func(data -1) + func(data - 2) + func(data - 3)\\n\\nfunc(5)\\n13\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#재귀-용법-recursive-call-재귀-호출","title":"재귀 용법 (recursive call, 재귀 호출)","items":[{"url":"#1-재귀-용법-recursive-call-재귀-호출","title":"1. 재귀 용법 (recursive call, 재귀 호출)"},{"url":"#2-재귀-용법-이해","title":"2. 재귀 용법 이해"},{"url":"#예제","title":"예제"},{"url":"#예제---분석하기","title":"예제 - 분석하기"},{"url":"#예제---코드-레벨로-적어보기","title":"예제 - 코드 레벨로 적어보기"},{"url":"#예제---시간-복잡도와-공간-복잡도","title":"예제 - 시간 복잡도와 공간 복잡도"},{"url":"#3-재귀-호출의-일반적인-형태","title":"3. 재귀 호출의 일반적인 형태"},{"url":"#재귀-호출은-스택의-전형적인-예","title":"재귀 호출은 스택의 전형적인 예"},{"url":"#4-재귀-용법을-활용한-프로그래밍-연습","title":"4. 재귀 용법을 활용한 프로그래밍 연습","items":[{"url":"#프로그래밍-연습","title":"프로그래밍 연습"}]},{"url":"#문제-분석을-연습장에-작성해-본-예","title":"문제 분석을 연습장에 작성해 본 예"}]}]},"parent":{"relativePath":"datastructure&algorithm/14.RecursiveCall.md"},"frontmatter":{"metaTitle":"재귀 용법(Recursive Call)","metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/framework/prisma","title":"Prisma"}}},{"node":{"fields":{"slug":"/git","title":"깃(Git)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm","title":"자료구조 & 알고리즘(Datastructure & Algorithm)"}}},{"node":{"fields":{"slug":"/","title":"SuHyeon's TechBlog"}}},{"node":{"fields":{"slug":"/infra","title":"인프라(Infra)"}}},{"node":{"fields":{"slug":"/library","title":"라이브러리(Library)"}}},{"node":{"fields":{"slug":"/tdd","title":"테스트 주도 개발(TDD)"}}},{"node":{"fields":{"slug":"/framework","title":"프레임워크(Framework)"}}},{"node":{"fields":{"slug":"/language","title":"언어(Language)"}}},{"node":{"fields":{"slug":"/tdd/1.unit-test","title":"유닛 테스트(Unit Test)"}}},{"node":{"fields":{"slug":"/tdd/2.mocha","title":"Mocha Framework"}}},{"node":{"fields":{"slug":"/tdd/3.chai","title":"Chai Library"}}},{"node":{"fields":{"slug":"/terminology","title":"용어정리(terminology)"}}},{"node":{"fields":{"slug":"/terminology/web","title":"Web"}}},{"node":{"fields":{"slug":"/library/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/library/nexusjs","title":"Nexus.JS"}}},{"node":{"fields":{"slug":"/language/javascript","title":"Javascript"}}},{"node":{"fields":{"slug":"/language/typescript","title":"Typescript"}}},{"node":{"fields":{"slug":"/language/python","title":"Python"}}},{"node":{"fields":{"slug":"/infra/2.aws","title":"aws"}}},{"node":{"fields":{"slug":"/infra/1.BasicTheory","title":"Basic Theory"}}},{"node":{"fields":{"slug":"/infra/3.docker","title":"Docker"}}},{"node":{"fields":{"slug":"/git/changing-default-branch","title":"Changing the Default Branch"}}},{"node":{"fields":{"slug":"/git/basic-git-command","title":"Basic git command"}}},{"node":{"fields":{"slug":"/git/configuring-protected-branches","title":"Configure Branch Protection Rule"}}},{"node":{"fields":{"slug":"/git/gitforksync","title":"git fork & sync"}}},{"node":{"fields":{"slug":"/git/rebase","title":"Rebase"}}},{"node":{"fields":{"slug":"/library/graphql/ApolloGraphQLserver","title":"ApolloGraphQLserver"}}},{"node":{"fields":{"slug":"/library/graphql/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/language/python/basic","title":"Basic"}}},{"node":{"fields":{"slug":"/language/javascript/class","title":"Class"}}},{"node":{"fields":{"slug":"/infra/3.docker/docker","title":"Docker"}}},{"node":{"fields":{"slug":"/language/javascript/executionContext copy","title":"Execution Context(실행 컨텍스트)"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerbasic","title":"Docker Basic"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerawsdeploy","title":"Docker AWS EC2 Deploy"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Basic","title":"AWS-Basic"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-RDS","title":"AWS-RDS"}}},{"node":{"fields":{"slug":"/language/javascript/scope_this","title":"스코프 & 함수 호출 방식에 의해 결정되는 this"}}},{"node":{"fields":{"slug":"/framework/NextJs","title":"Next Js"}}},{"node":{"fields":{"slug":"/framework/electron","title":"일렉트론 학습"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-EC2","title":"AWS-EC2"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-S3","title":"AWS-S3"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Route53","title":"AWS-Route 53"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/10.SpaceComplexity","title":"공간 복잡도(Space Complexity)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/11.BubbleSort","title":"버블 정렬(Bubble Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/12.InsertionSort","title":"삽입 정렬(Insertion Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/13.SelectionSort","title":"선택 정렬(Selection Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/14.RecursiveCall","title":"재귀 용법(Recursive Call)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/15.DynamicProgramming","title":"동적 계획법과 분할 정복(Dynamic Programming & Divide and conquer"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/16.QuickSort","title":"퀵 정렬(Quick Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/17.MergeSort","title":"병렬 정렬(Merge Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/18.SequentialSearch","title":"순차 탐색(Sequential Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/19.BinarySearch","title":"탐색 알고리즘(Binary Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/2.array","title":"배열(Array)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/20.Graph","title":"그래프(Graph)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/21.Depth-FirstSearch","title":"깊이 우선 탐색(Depth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/22.Breadth-FirstSearch","title":"너비 우선 탐색(Breadth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/23.GreedyAlgorithm","title":"탐욕 알고리즘(Greedy Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/24.DijkstraAlgorithm","title":"다익스트라 알고리즘(Dijkstra Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/3.queue","title":"큐(Queue)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/25.MinimumSpanningTree","title":"최소 신장 트리(Minimum Spanning Tree)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/26.BackTracking","title":"백트래킹(BackTracking)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/4.stack","title":"스택(Stack)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/5.linkedlist","title":"링크드리스트(LinkedList)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/6.TimeComplexity","title":"시간 복잡도(Time Complexity)"}}},{"node":{"fields":{"slug":"/framework/prisma/NoticePrisma","title":"Notice Prisma"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/7.HashTable","title":"해쉬 테이블(HashTable)"}}},{"node":{"fields":{"slug":"/framework/electron/electronbasic","title":"Electron Basic"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/9.Heap","title":"힙(Heap)"}}},{"node":{"fields":{"slug":"/framework/prisma/prisma2","title":"Prisma 2"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/8.Tree","title":"트리(Tree)"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"c1ecd01d-caad-527e-8afd-e1bcf8d90b9b"}}}