{"componentChunkName":"component---src-templates-docs-js","path":"/datastructure&algorithm/24.DijkstraAlgorithm","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"283a1f28-db4a-5575-88b2-2092478ef8d3","title":"다익스트라 알고리즘(Dijkstra Algorithm)","slug":"/datastructure&algorithm/24.DijkstraAlgorithm"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"다익스트라 알고리즘(Dijkstra Algorithm)\",\n  \"metaTitle\": \"다익스트라 알고리즘(Dijkstra Algorithm)\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\uCD5C\\uB2E8 \\uACBD\\uB85C \\uC54C\\uACE0\\uB9AC\\uC998\\uC758 \\uC774\\uD574\"), mdx(\"h3\", null, \"1. \\uCD5C\\uB2E8 \\uACBD\\uB85C \\uBB38\\uC81C\\uB780?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCD5C\\uB2E8 \\uACBD\\uB85C \\uBB38\\uC81C\\uB780 \\uB450 \\uB178\\uB4DC\\uB97C \\uC787\\uB294 \\uAC00\\uC7A5 \\uC9E7\\uC740 \\uACBD\\uB85C\\uB97C \\uCC3E\\uB294 \\uBB38\\uC81C\\uC784\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC00\\uC911\\uCE58 \\uADF8\\uB798\\uD504 (Weighted Graph) \\uC5D0\\uC11C \\uAC04\\uC120 (Edge)\\uC758 \\uAC00\\uC911\\uCE58 \\uD569\\uC774 \\uCD5C\\uC18C\\uAC00 \\uB418\\uB3C4\\uB85D \\uD558\\uB294 \\uACBD\\uB85C\\uB97C \\uCC3E\\uB294 \\uAC83\\uC774 \\uBAA9\\uC801\")), mdx(\"h3\", null, \"\\uCD5C\\uB2E8 \\uACBD\\uB85C \\uBB38\\uC81C \\uC885\\uB958\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uB2E8\\uC77C \\uCD9C\\uBC1C \\uBC0F \\uB2E8\\uC77C \\uB3C4\\uCC29 (single-source and single-destination shortest path problem) \\uCD5C\\uB2E8 \\uACBD\\uB85C \\uBB38\\uC81C\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uADF8\\uB798\\uD504 \\uB0B4\\uC758 \\uD2B9\\uC815 \\uB178\\uB4DC u \\uC5D0\\uC11C \\uCD9C\\uBC1C, \\uB610\\uB2E4\\uB978 \\uD2B9\\uC815 \\uB178\\uB4DC v \\uC5D0 \\uB3C4\\uCC29\\uD558\\uB294 \\uAC00\\uC7A5 \\uC9E7\\uC740 \\uACBD\\uB85C\\uB97C \\uCC3E\\uB294 \\uBB38\\uC81C\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uB2E8\\uC77C \\uCD9C\\uBC1C (single-source shortest path problem) \\uCD5C\\uB2E8 \\uACBD\\uB85C \\uBB38\\uC81C\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uADF8\\uB798\\uD504 \\uB0B4\\uC758 \\uD2B9\\uC815 \\uB178\\uB4DC u \\uC640 \\uADF8\\uB798\\uD504 \\uB0B4 \\uB2E4\\uB978 \\uBAA8\\uB4E0 \\uB178\\uB4DC \\uAC01\\uAC01\\uC758 \\uAC00\\uC7A5 \\uC9E7\\uC740 \\uACBD\\uB85C\\uB97C \\uCC3E\\uB294 \\uBB38\\uC81C\", mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uB530\\uC9C0\\uACE0 \\uBCF4\\uBA74 \\uAD49\\uC7A5\\uD788 \\uD5F7\\uAE54\\uB9B4 \\uC218 \\uC788\\uC73C\\uBBC0\\uB85C \\uBA85\\uD655\\uD788 \\uD558\\uC790\\uBA74,\\n\\uC608\\uB97C \\uB4E4\\uC5B4 A, B, C, D \\uB77C\\uB294 \\uB178\\uB4DC\\uB97C \\uAC00\\uC9C4 \\uADF8\\uB798\\uD504\\uC5D0\\uC11C \\uD2B9\\uC815 \\uB178\\uB4DC\\uB97C A \\uB77C\\uACE0 \\uD55C\\uB2E4\\uBA74,\\nA \\uC678 \\uBAA8\\uB4E0 \\uB178\\uB4DC\\uC778 B, C, D \\uAC01 \\uB178\\uB4DC\\uC640 A \\uAC04\\uC5D0 (\\uC989, A - B, A - C, A - D) \\uAC01\\uAC01 \\uAC00\\uC7A5 \\uC9E7\\uC740 \\uACBD\\uB85C\\uB97C \\uCC3E\\uB294 \\uBB38\\uC81C\\uB97C \\uC758\\uBBF8\\uD568\")))), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uC804\\uCCB4 \\uC30D(all-pair) \\uCD5C\\uB2E8 \\uACBD\\uB85C: \\uADF8\\uB798\\uD504 \\uB0B4\\uC758 \\uBAA8\\uB4E0 \\uB178\\uB4DC \\uC30D (u, v) \\uC5D0 \\uB300\\uD55C \\uCD5C\\uB2E8 \\uACBD\\uB85C\\uB97C \\uCC3E\\uB294 \\uBB38\\uC81C\")), mdx(\"h3\", null, \"2. \\uCD5C\\uB2E8 \\uACBD\\uB85C \\uC54C\\uACE0\\uB9AC\\uC998 - \\uB2E4\\uC775\\uC2A4\\uD2B8\\uB77C \\uC54C\\uACE0\\uB9AC\\uC998\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB2E4\\uC775\\uC2A4\\uD2B8\\uB77C \\uC54C\\uACE0\\uB9AC\\uC998\\uC740 \\uC704\\uC758 \\uCD5C\\uB2E8 \\uACBD\\uB85C \\uBB38\\uC81C \\uC885\\uB958 \\uC911, 2\\uBC88\\uC5D0 \\uD574\\uB2F9\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD558\\uB098\\uC758 \\uC815\\uC810\\uC5D0\\uC11C \\uB2E4\\uB978 \\uBAA8\\uB4E0 \\uC815\\uC810 \\uAC04\\uC758 \\uAC01\\uAC01 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\\uAC00\\uC7A5 \\uC9E7\\uC740 \\uAC70\\uB9AC\"), \"\\uB97C \\uAD6C\\uD558\\uB294 \\uBB38\\uC81C\")))), mdx(\"h3\", null, \"\\uB2E4\\uC775\\uC2A4\\uD2B8\\uB77C \\uC54C\\uACE0\\uB9AC\\uC998 \\uB85C\\uC9C1\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uCCAB \\uC815\\uC810\\uC744 \\uAE30\\uC900\\uC73C\\uB85C \\uC5F0\\uACB0\\uB418\\uC5B4 \\uC788\\uB294 \\uC815\\uC810\\uB4E4\\uC744 \\uCD94\\uAC00\\uD574 \\uAC00\\uBA70, \\uCD5C\\uB2E8 \\uAC70\\uB9AC\\uB97C \\uAC31\\uC2E0\\uD558\\uB294 \\uAE30\\uBC95\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uB2E4\\uC775\\uC2A4\\uD2B8\\uB77C \\uC54C\\uACE0\\uB9AC\\uC998\\uC740 \\uB108\\uBE44\\uC6B0\\uC120\\uD0D0\\uC0C9(BFS)\\uC640 \\uC720\\uC0AC\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCCAB \\uC815\\uC810\\uBD80\\uD130 \\uAC01 \\uB178\\uB4DC\\uAC04\\uC758 \\uAC70\\uB9AC\\uB97C \\uC800\\uC7A5\\uD558\\uB294 \\uBC30\\uC5F4\\uC744 \\uB9CC\\uB4E0 \\uD6C4, \\uCCAB \\uC815\\uC810\\uC758 \\uC778\\uC811 \\uB178\\uB4DC \\uAC04\\uC758 \\uAC70\\uB9AC\\uBD80\\uD130 \\uBA3C\\uC800 \\uACC4\\uC0B0\\uD558\\uBA74\\uC11C, \\uCCAB \\uC815\\uC810\\uBD80\\uD130 \\uD574\\uB2F9 \\uB178\\uB4DC\\uAC04\\uC758 \\uAC00\\uC7A5 \\uC9E7\\uC740 \\uAC70\\uB9AC\\uB97C \\uD574\\uB2F9 \\uBC30\\uC5F4\\uC5D0 \\uC5C5\\uB370\\uC774\\uD2B8\", mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \" \\uB2E4\\uC775\\uC2A4\\uD2B8\\uB77C \\uC54C\\uACE0\\uB9AC\\uC998\\uC758 \\uB2E4\\uC591\\uD55C \\uBCC0\\uD615 \\uB85C\\uC9C1\\uC774 \\uC788\\uC9C0\\uB9CC, \\uAC00\\uC7A5 \\uAC1C\\uC120\\uB41C \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uB97C \\uC0AC\\uC6A9\\uD558\\uB294 \\uBC29\\uC2DD\\uC5D0 \\uC9D1\\uC911\\uD574\\uC11C \\uC124\\uBA85\\uD558\\uAE30\\uB85C \\uD568\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uB97C \\uD65C\\uC6A9\\uD55C \\uB2E4\\uC775\\uC2A4\\uD2B8\\uB77C \\uC54C\\uACE0\\uB9AC\\uC998\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uB294 MinHeap \\uBC29\\uC2DD\\uC744 \\uD65C\\uC6A9\\uD574\\uC11C, \\uD604\\uC7AC \\uAC00\\uC7A5 \\uC9E7\\uC740 \\uAC70\\uB9AC\\uB97C \\uAC00\\uC9C4 \\uB178\\uB4DC \\uC815\\uBCF4\\uB97C \\uBA3C\\uC800 \\uAEBC\\uB0B4\\uAC8C \\uB428\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"1) \\uCCAB \\uC815\\uC810\\uC744 \\uAE30\\uC900\\uC73C\\uB85C \\uBC30\\uC5F4\\uC744 \\uC120\\uC5B8\\uD558\\uC5EC \\uCCAB \\uC815\\uC810\\uC5D0\\uC11C \\uAC01 \\uC815\\uC810\\uAE4C\\uC9C0\\uC758 \\uAC70\\uB9AC\\uB97C \\uC800\\uC7A5\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCD08\\uAE30\\uC5D0\\uB294 \\uCCAB \\uC815\\uC810\\uC758 \\uAC70\\uB9AC\\uB294 0, \\uB098\\uBA38\\uC9C0\\uB294 \\uBB34\\uD55C\\uB300\\uB85C \\uC800\\uC7A5\\uD568 (inf \\uB77C\\uACE0 \\uD45C\\uD604\\uD568)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0 (\\uCCAB \\uC815\\uC810, \\uAC70\\uB9AC 0) \\uB9CC \\uBA3C\\uC800 \\uB123\\uC74C \")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"2) \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0\\uC11C \\uB178\\uB4DC\\uB97C \\uAEBC\\uB0C4\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCC98\\uC74C\\uC5D0\\uB294 \\uCCAB \\uC815\\uC810\\uB9CC \\uC800\\uC7A5\\uB418\\uC5B4 \\uC788\\uC73C\\uBBC0\\uB85C, \\uCCAB \\uC815\\uC810\\uC774 \\uAEBC\\uB0B4\\uC9D0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCCAB \\uC815\\uC810\\uC5D0 \\uC778\\uC811\\uD55C \\uB178\\uB4DC\\uB4E4 \\uAC01\\uAC01\\uC5D0 \\uB300\\uD574, \\uCCAB \\uC815\\uC810\\uC5D0\\uC11C \\uAC01 \\uB178\\uB4DC\\uB85C \\uAC00\\uB294 \\uAC70\\uB9AC\\uC640 \\uD604\\uC7AC \\uBC30\\uC5F4\\uC5D0 \\uC800\\uC7A5\\uB418\\uC5B4 \\uC788\\uB294 \\uCCAB \\uC815\\uC810\\uC5D0\\uC11C \\uAC01 \\uC815\\uC810\\uAE4C\\uC9C0\\uC758 \\uAC70\\uB9AC\\uB97C \\uBE44\\uAD50\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC30\\uC5F4\\uC5D0 \\uC800\\uC7A5\\uB418\\uC5B4 \\uC788\\uB294 \\uAC70\\uB9AC\\uBCF4\\uB2E4, \\uCCAB \\uC815\\uC810\\uC5D0\\uC11C \\uD574\\uB2F9 \\uB178\\uB4DC\\uB85C \\uAC00\\uB294 \\uAC70\\uB9AC\\uAC00 \\uB354 \\uC9E7\\uC744 \\uACBD\\uC6B0, \\uBC30\\uC5F4\\uC5D0 \\uD574\\uB2F9 \\uB178\\uB4DC\\uC758 \\uAC70\\uB9AC\\uB97C \\uC5C5\\uB370\\uC774\\uD2B8\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC30\\uC5F4\\uC5D0 \\uD574\\uB2F9 \\uB178\\uB4DC\\uC758 \\uAC70\\uB9AC\\uAC00 \\uC5C5\\uB370\\uC774\\uD2B8\\uB41C \\uACBD\\uC6B0, \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0 \\uB123\\uB294\\uB2E4.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uACB0\\uACFC\\uC801\\uC73C\\uB85C \\uB108\\uBE44 \\uC6B0\\uC120 \\uD0D0\\uC0C9 \\uBC29\\uC2DD\\uACFC \\uC720\\uC0AC\\uD558\\uAC8C, \\uCCAB \\uC815\\uC810\\uC5D0 \\uC778\\uC811\\uD55C \\uB178\\uB4DC\\uB4E4\\uC744 \\uC21C\\uCC28\\uC801\\uC73C\\uB85C \\uBC29\\uBB38\\uD558\\uAC8C \\uB428\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB9CC\\uC57D \\uBC30\\uC5F4\\uC5D0 \\uAE30\\uB85D\\uB41C \\uD604\\uC7AC\\uAE4C\\uC9C0 \\uBC1C\\uACAC\\uB41C \\uAC00\\uC7A5 \\uC9E7\\uC740 \\uAC70\\uB9AC\\uBCF4\\uB2E4, \\uB354 \\uAE34 \\uAC70\\uB9AC(\\uB8E8\\uD2B8)\\uB97C \\uAC00\\uC9C4 (\\uB178\\uB4DC, \\uAC70\\uB9AC)\\uC758 \\uACBD\\uC6B0\\uC5D0\\uB294 \\uD574\\uB2F9 \\uB178\\uB4DC\\uC640 \\uC778\\uC811\\uD55C \\uB178\\uB4DC\\uAC04\\uC758 \\uAC70\\uB9AC \\uACC4\\uC0B0\\uC744 \\uD558\\uC9C0 \\uC54A\\uC74C\")))), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"3) 2\\uBC88\\uC758 \\uACFC\\uC815\\uC744 \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0 \\uAEBC\\uB0BC \\uB178\\uB4DC\\uAC00 \\uC5C6\\uC744 \\uB54C\\uAE4C\\uC9C0 \\uBC18\\uBCF5\\uD55C\\uB2E4.\"))), mdx(\"h3\", null, \"3. \\uC608\\uC81C\\uB85C \\uC774\\uD574\\uD558\\uB294 \\uB2E4\\uC775\\uC2A4\\uD2B8\\uB77C \\uC54C\\uACE0\\uB9AC\\uC998 (\\uC6B0\\uC120\\uC21C\\uC704 \\uD050 \\uD65C\\uC6A9)\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/dijkstra.png\",\n    \"alt\": \"cds\"\n  }))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1\\uB2E8\\uACC4: \\uCD08\\uAE30\\uD654\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCCAB \\uC815\\uC810\\uC744 \\uAE30\\uC900\\uC73C\\uB85C \\uBC30\\uC5F4\\uC744 \\uC120\\uC5B8\\uD558\\uC5EC \\uCCAB \\uC815\\uC810\\uC5D0\\uC11C \\uAC01 \\uC815\\uC810\\uAE4C\\uC9C0\\uC758 \\uAC70\\uB9AC\\uB97C \\uC800\\uC7A5\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCD08\\uAE30\\uC5D0\\uB294 \\uCCAB \\uC815\\uC810\\uC758 \\uAC70\\uB9AC\\uB294 0, \\uB098\\uBA38\\uC9C0\\uB294 \\uBB34\\uD55C\\uB300\\uB85C \\uC800\\uC7A5\\uD568 (inf \\uB77C\\uACE0 \\uD45C\\uD604\\uD568)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0 (\\uCCAB \\uC815\\uC810, \\uAC70\\uB9AC 0) \\uB9CC \\uBA3C\\uC800 \\uB123\\uC74C \")))), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/dijkstra_initial.png\",\n    \"alt\": \"cs\"\n  }))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"2\\uB2E8\\uACC4: \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0\\uC11C \\uCD94\\uCD9C\\uD55C (A, 0) \", \"[\\uB178\\uB4DC, \\uCCAB \\uB178\\uB4DC\\uC640\\uC758 \\uAC70\\uB9AC]\", \" \\uB97C \\uAE30\\uBC18\\uC73C\\uB85C \\uC778\\uC811\\uD55C \\uB178\\uB4DC\\uC640\\uC758 \\uAC70\\uB9AC \\uACC4\\uC0B0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0\\uC11C \\uB178\\uB4DC\\uB97C \\uAEBC\\uB0C4\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCC98\\uC74C\\uC5D0\\uB294 \\uCCAB \\uC815\\uC810\\uB9CC \\uC800\\uC7A5\\uB418\\uC5B4 \\uC788\\uC73C\\uBBC0\\uB85C, \\uCCAB \\uC815\\uC810\\uC774 \\uAEBC\\uB0B4\\uC9D0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCCAB \\uC815\\uC810\\uC5D0 \\uC778\\uC811\\uD55C \\uB178\\uB4DC\\uB4E4 \\uAC01\\uAC01\\uC5D0 \\uB300\\uD574, \\uCCAB \\uC815\\uC810\\uC5D0\\uC11C \\uAC01 \\uB178\\uB4DC\\uB85C \\uAC00\\uB294 \\uAC70\\uB9AC\\uC640 \\uD604\\uC7AC \\uBC30\\uC5F4\\uC5D0 \\uC800\\uC7A5\\uB418\\uC5B4 \\uC788\\uB294 \\uCCAB \\uC815\\uC810\\uC5D0\\uC11C \\uAC01 \\uC815\\uC810\\uAE4C\\uC9C0\\uC758 \\uAC70\\uB9AC\\uB97C \\uBE44\\uAD50\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC30\\uC5F4\\uC5D0 \\uC800\\uC7A5\\uB418\\uC5B4 \\uC788\\uB294 \\uAC70\\uB9AC\\uBCF4\\uB2E4, \\uCCAB \\uC815\\uC810\\uC5D0\\uC11C \\uD574\\uB2F9 \\uB178\\uB4DC\\uB85C \\uAC00\\uB294 \\uAC70\\uB9AC\\uAC00 \\uB354 \\uC9E7\\uC744 \\uACBD\\uC6B0, \\uBC30\\uC5F4\\uC5D0 \\uD574\\uB2F9 \\uB178\\uB4DC\\uC758 \\uAC70\\uB9AC\\uB97C \\uC5C5\\uB370\\uC774\\uD2B8\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC30\\uC5F4\\uC5D0 \\uD574\\uB2F9 \\uB178\\uB4DC\\uC758 \\uAC70\\uB9AC\\uAC00 \\uC5C5\\uB370\\uC774\\uD2B8\\uB41C \\uACBD\\uC6B0, \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0 \\uB123\\uB294\\uB2E4.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uACB0\\uACFC\\uC801\\uC73C\\uB85C \\uB108\\uBE44 \\uC6B0\\uC120 \\uD0D0\\uC0C9 \\uBC29\\uC2DD\\uACFC \\uC720\\uC0AC\\uD558\\uAC8C, \\uCCAB \\uC815\\uC810\\uC5D0 \\uC778\\uC811\\uD55C \\uB178\\uB4DC\\uB4E4\\uC744 \\uC21C\\uCC28\\uC801\\uC73C\\uB85C \\uBC29\\uBB38\\uD558\\uAC8C \\uB428\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB9CC\\uC57D \\uBC30\\uC5F4\\uC5D0 \\uAE30\\uB85D\\uB41C \\uD604\\uC7AC\\uAE4C\\uC9C0 \\uBC1C\\uACAC\\uB41C \\uAC00\\uC7A5 \\uC9E7\\uC740 \\uAC70\\uB9AC\\uBCF4\\uB2E4, \\uB354 \\uAE34 \\uAC70\\uB9AC(\\uB8E8\\uD2B8)\\uB97C \\uAC00\\uC9C4 (\\uB178\\uB4DC, \\uAC70\\uB9AC)\\uC758 \\uACBD\\uC6B0\\uC5D0\\uB294 \\uD574\\uB2F9 \\uB178\\uB4DC\\uC640 \\uC778\\uC811\\uD55C \\uB178\\uB4DC\\uAC04\\uC758 \\uAC70\\uB9AC \\uACC4\\uC0B0\\uC744 \\uD558\\uC9C0 \\uC54A\\uC74C\")))))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uC774\\uC804 \\uD45C\\uC5D0\\uC11C \\uBCF4\\uB4EF\\uC774, \\uCCAB \\uC815\\uC810 \\uC774\\uC678\\uC5D0 \\uBAA8\\uB450 inf \\uC600\\uC5C8\\uC73C\\uBBC0\\uB85C, \\uCCAB \\uC815\\uC810\\uC5D0 \\uC778\\uC811\\uD55C \\uB178\\uB4DC\\uB4E4\\uC740 \\uBAA8\\uB450 \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0 \\uB4E4\\uC5B4\\uAC00\\uACE0, \\uCCAB \\uC815\\uC810\\uACFC \\uC778\\uC811\\uD55C \\uB178\\uB4DC\\uAC04\\uC758 \\uAC70\\uB9AC\\uAC00 \\uBC30\\uC5F4\\uC5D0 \\uC5C5\\uB370\\uC774\\uD2B8\\uB428\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/dijkstra_1st.png\",\n    \"alt\": \"cds\"\n  }))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"3\\uB2E8\\uACC4: \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0\\uC11C (C, 1) \", \"[\\uB178\\uB4DC, \\uCCAB \\uB178\\uB4DC\\uC640\\uC758 \\uAC70\\uB9AC]\", \" \\uB97C \\uAE30\\uBC18\\uC73C\\uB85C \\uC778\\uC811\\uD55C \\uB178\\uB4DC\\uC640\\uC758 \\uAC70\\uB9AC \\uACC4\\uC0B0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uAC00 MinHeap(\\uCD5C\\uC18C \\uD799) \\uBC29\\uC2DD\\uC774\\uBBC0\\uB85C, \\uC704 \\uD45C\\uC5D0\\uC11C \\uB123\\uC5B4\\uC9C4 (C, 1), (D, 2), (B, 8) \\uC911 (C, 1) \\uC774 \\uBA3C\\uC800 \\uCD94\\uCD9C\\uB428 (pop)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC704 \\uD45C\\uC5D0\\uC11C \\uBCF4\\uB4EF\\uC774 1\\uB2E8\\uACC4\\uAE4C\\uC9C0\\uC758 A - B \\uCD5C\\uB2E8 \\uAC70\\uB9AC\\uB294 8 \\uC778 \\uC0C1\\uD669\\uC784\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A - C \\uAE4C\\uC9C0\\uC758 \\uAC70\\uB9AC\\uB294 1, C \\uC5D0 \\uC778\\uC811\\uD55C B, D\\uC5D0\\uC11C C - B\\uB294 5, \\uC989 A - C - B \\uB294 1 + 5 = 6 \\uC774\\uBBC0\\uB85C, A - B \\uCD5C\\uB2E8 \\uAC70\\uB9AC 8\\uBCF4\\uB2E4 \\uB354 \\uC791\\uC740 \\uAC70\\uB9AC\\uB97C \\uBC1C\\uACAC, \\uC774\\uB97C \\uBC30\\uC5F4\\uC5D0 \\uC5C5\\uB370\\uC774\\uD2B8\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC30\\uC5F4\\uC5D0 \\uC5C5\\uB370\\uC774\\uD2B8\\uD588\\uC73C\\uBBC0\\uB85C B, 6 (\\uC989 A\\uC5D0\\uC11C B\\uAE4C\\uC9C0\\uC758 \\uD604\\uC7AC\\uAE4C\\uC9C0 \\uBC1C\\uACAC\\uD55C \\uCD5C\\uB2E8 \\uAC70\\uB9AC) \\uAC12\\uC774 \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0 \\uB123\\uC5B4\\uC9D0\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"C - D \\uC758 \\uAC70\\uB9AC\\uB294 2, \\uC989 A - C - D \\uB294 1 + 2 = 3 \\uC774\\uBBC0\\uB85C, A - D\\uC758 \\uD604\\uC7AC \\uCD5C\\uB2E8 \\uAC70\\uB9AC\\uC778 2 \\uBCF4\\uB2E4 \\uAE34 \\uAC70\\uB9AC, \\uADF8\\uB798\\uC11C D \\uC758 \\uAC70\\uB9AC\\uB294 \\uC5C5\\uB370\\uC774\\uD2B8\\uB418\\uC9C0 \\uC54A\\uC74C\")))), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/dijkstra_2nd.png\",\n    \"alt\": \"cds\"\n  }))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"4\\uB2E8\\uACC4: \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0\\uC11C (D, 2) \", \"[\\uB178\\uB4DC, \\uCCAB \\uB178\\uB4DC\\uC640\\uC758 \\uAC70\\uB9AC]\", \" \\uB97C \\uAE30\\uBC18\\uC73C\\uB85C \\uC778\\uC811\\uD55C \\uB178\\uB4DC\\uC640\\uC758 \\uAC70\\uB9AC \\uACC4\\uC0B0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC9C0\\uAE08\\uAE4C\\uC9C0 \\uC811\\uADFC\\uD558\\uC9C0 \\uBABB\\uD588\\uB358 E\\uC640 F \\uAC70\\uB9AC\\uAC00 \\uACC4\\uC0B0\\uB428\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A - D \\uAE4C\\uC9C0\\uC758 \\uAC70\\uB9AC\\uC778 2 \\uC5D0 D - E \\uAC00 3 \\uC774\\uBBC0\\uB85C \\uC774\\uB97C \\uB354\\uD574\\uC11C E, 5\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A - D \\uAE4C\\uC9C0\\uC758 \\uAC70\\uB9AC\\uC778 2 \\uC5D0 D - F \\uAC00 5 \\uC774\\uBBC0\\uB85C \\uC774\\uB97C \\uB354\\uD574\\uC11C F, 7\")))), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/dijkstra_3rd.png\",\n    \"alt\": \"cds\"\n  }))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"5\\uB2E8\\uACC4: \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0\\uC11C (E, 5) \", \"[\\uB178\\uB4DC, \\uCCAB \\uB178\\uB4DC\\uC640\\uC758 \\uAC70\\uB9AC]\", \" \\uB97C \\uAE30\\uBC18\\uC73C\\uB85C \\uC778\\uC811\\uD55C \\uB178\\uB4DC\\uC640\\uC758 \\uAC70\\uB9AC \\uACC4\\uC0B0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A - E \\uAC70\\uB9AC\\uAC00 5\\uC778 \\uC0C1\\uD0DC\\uC5D0\\uC11C, E\\uC5D0 \\uC778\\uC811\\uD55C F\\uB97C \\uAC00\\uB294 \\uAC70\\uB9AC\\uB294 1, \\uC989 A - E - F \\uB294 5 + 1 = 6, \\uD604\\uC7AC \\uBC30\\uC5F4\\uC5D0 A - F \\uCD5C\\uB2E8\\uAC70\\uB9AC\\uAC00 7\\uB85C \\uAE30\\uB85D\\uB418\\uC5B4 \\uC788\\uC73C\\uBBC0\\uB85C, F, 6 \\uC73C\\uB85C \\uC5C5\\uB370\\uC774\\uD2B8\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0 F, 6 \\uCD94\\uAC00\")))), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/dijkstra_3-2th.png\",\n    \"alt\": \"sdc\"\n  }))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"6\\uB2E8\\uACC4: \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0\\uC11C (B, 6), (F, 6) \\uB97C \\uC21C\\uCC28\\uC801\\uC73C\\uB85C \\uCD94\\uCD9C\\uD574 \\uAC01 \\uB178\\uB4DC  \\uAE30\\uBC18\\uC73C\\uB85C \\uC778\\uC811\\uD55C \\uB178\\uB4DC\\uC640\\uC758 \\uAC70\\uB9AC \\uACC4\\uC0B0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC608\\uC81C\\uC758 \\uBC29\\uD5A5 \\uADF8\\uB798\\uD504\\uC5D0\\uC11C B \\uB178\\uB4DC\\uB294 \\uB2E4\\uB978 \\uB178\\uB4DC\\uB85C \\uAC00\\uB294 \\uB8E8\\uD2B8\\uAC00 \\uC5C6\\uC74C \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"F \\uB178\\uB4DC\\uB294 A \\uB178\\uB4DC\\uB85C \\uAC00\\uB294 \\uB8E8\\uD2B8\\uAC00 \\uC788\\uC73C\\uB098, \\uD604\\uC7AC A - A \\uAC00 0 \\uC778 \\uBC18\\uBA74\\uC5D0 A - F - A \\uB294 6 + 5 = 11, \\uC989 \\uB354 \\uAE34 \\uAC70\\uB9AC\\uC774\\uBBC0\\uB85C \\uC5C5\\uB370\\uC774\\uD2B8\\uB418\\uC9C0 \\uC54A\\uC74C\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/dijkstra_4th.png\",\n    \"alt\": \"cds\"\n  }))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"6\\uB2E8\\uACC4: \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0\\uC11C (F, 7), (B, 8) \\uB97C \\uC21C\\uCC28\\uC801\\uC73C\\uB85C \\uCD94\\uCD9C\\uD574 \\uAC01 \\uB178\\uB4DC  \\uAE30\\uBC18\\uC73C\\uB85C \\uC778\\uC811\\uD55C \\uB178\\uB4DC\\uC640\\uC758 \\uAC70\\uB9AC \\uACC4\\uC0B0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A - F \\uB85C \\uAC00\\uB294 \\uD558\\uB098\\uC758 \\uB8E8\\uD2B8\\uC758 \\uAC70\\uB9AC\\uAC00 7 \\uC778 \\uC0C1\\uD669\\uC774\\uB098, \\uBC30\\uC5F4\\uC5D0\\uC11C \\uC774\\uBBF8 A - F \\uB85C \\uAC00\\uB294 \\uD604\\uC7AC\\uC758 \\uCD5C\\uB2E8 \\uAC70\\uB9AC\\uAC00 6\\uC778 \\uB8E8\\uD2B8\\uC758 \\uAC12\\uC774 \\uC788\\uB294 \\uC0C1\\uD669\\uC774\\uBBC0\\uB85C, \\uB354 \\uAE34\\uAC70\\uB9AC\\uC778 F, 7 \\uB8E8\\uD2B8 \\uAE30\\uBC18 \\uC778\\uC811 \\uB178\\uB4DC\\uAE4C\\uC9C0\\uC758 \\uAC70\\uB9AC\\uB294 \\uACC4\\uC0B0\\uD560 \\uD544\\uC694\\uAC00 \\uC5C6\\uC74C, \\uADF8\\uB798\\uC11C \\uACC4\\uC0B0\\uC5C6\\uC774 \\uC2A4\\uD0B5\\uD568\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uACC4\\uC0B0\\uD558\\uB354\\uB77C\\uB3C4 A - F \\uAC70\\uB9AC\\uAC00 6\\uC778 \\uB8E8\\uD2B8\\uBCF4\\uB2E4 \\uBB34\\uC870\\uAC74 \\uB354 \\uAE34\\uAC70\\uB9AC\\uAC00 \\uB098\\uC62C \\uC218 \\uBC16\\uC5D0 \\uC5C6\\uC74C\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"B, 8 \\uB3C4 \\uD604\\uC7AC A - B \\uAC70\\uB9AC\\uAC00 6\\uC774\\uBBC0\\uB85C, \\uC778\\uC811 \\uB178\\uB4DC \\uAC70\\uB9AC \\uACC4\\uC0B0\\uC774 \\uD544\\uC694 \\uC5C6\\uC74C. \")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uB97C \\uC0AC\\uC6A9\\uD558\\uBA74 \\uBD88\\uD544\\uC694\\uD55C \\uACC4\\uC0B0 \\uACFC\\uC815\\uC744 \\uC904\\uC77C \\uC218 \\uC788\\uC74C\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/dijkstra_5th.png\",\n    \"alt\": \"cds\"\n  }))), mdx(\"h3\", null, \"\\uC6B0\\uC120\\uC21C\\uC704 \\uD050 \\uC0AC\\uC6A9 \\uC7A5\\uC810\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC9C0\\uAE08\\uAE4C\\uC9C0 \\uBC1C\\uACAC\\uB41C \\uAC00\\uC7A5 \\uC9E7\\uC740 \\uAC70\\uB9AC\\uC758 \\uB178\\uB4DC\\uC5D0 \\uB300\\uD574\\uC11C \\uBA3C\\uC800 \\uACC4\\uC0B0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB354 \\uAE34 \\uAC70\\uB9AC\\uB85C \\uACC4\\uC0B0\\uB41C \\uB8E8\\uD2B8\\uC5D0 \\uB300\\uD574\\uC11C\\uB294 \\uACC4\\uC0B0\\uC744 \\uC2A4\\uD0B5\\uD560 \\uC218 \\uC788\\uC74C\")), mdx(\"h3\", null, \"4. \\uB2E4\\uC775\\uC2A4\\uD2B8\\uB77C \\uC54C\\uACE0\\uB9AC\\uC998 \\uD30C\\uC774\\uC36C \\uAD6C\\uD604 (\\uC6B0\\uC120\\uC21C\\uC704 \\uD050 \\uD65C\\uC6A9\\uAE4C\\uC9C0 \\uD3EC\\uD568)\"), mdx(\"h3\", null, \"\\uCC38\\uACE0: heapq \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC \\uD65C\\uC6A9\\uC744 \\uD1B5\\uD574 \\uC6B0\\uC120\\uC21C\\uC704 \\uD050 \\uC0AC\\uC6A9\\uD558\\uAE30\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB370\\uC774\\uD130\\uAC00 \\uB9AC\\uC2A4\\uD2B8 \\uD615\\uD0DC\\uC77C \\uACBD\\uC6B0, 0\\uBC88 \\uC778\\uB371\\uC2A4\\uB97C \\uC6B0\\uC120\\uC21C\\uC704\\uB85C \\uC778\\uC9C0, \\uC6B0\\uC120\\uC21C\\uC704\\uAC00 \\uB0AE\\uC740 \\uC21C\\uC11C\\uB300\\uB85C pop \\uD560 \\uC218 \\uC788\\uC74C\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"import heapq\\n\\nqueue = []\\n\\nheapq.heappush(queue, [2, 'A'])\\nheapq.heappush(queue, [5, 'B'])\\nheapq.heappush(queue, [1, 'C'])\\nheapq.heappush(queue, [7, 'D'])\\nprint (queue)\\nfor index in range(len(queue)):\\n    print (heapq.heappop(queue))\\n\\n[[1, 'C'], [5, 'B'], [2, 'A'], [7, 'D']]\\n[1, 'C']\\n[2, 'A']\\n[5, 'B']\\n[7, 'D']\\n    \\n\")), mdx(\"h3\", null, \"\\uB2E4\\uC775\\uC2A4\\uD2B8\\uB77C \\uC54C\\uACE0\\uB9AC\\uC998\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD0D0\\uC0C9\\uD560 \\uADF8\\uB798\\uD504\\uC758 \\uC2DC\\uC791 \\uC815\\uC810\\uACFC \\uB2E4\\uB978 \\uC815\\uC810\\uB4E4\\uAC04\\uC758 \\uCD5C\\uB2E8 \\uAC70\\uB9AC \\uAD6C\\uD558\\uAE30\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"mygraph = {\\n    'A': {'B': 8, 'C': 1, 'D': 2},\\n    'B': {},\\n    'C': {'B': 5, 'D': 2},\\n    'D': {'E': 3, 'F': 5},\\n    'E': {'F': 1},\\n    'F': {'A': 5}\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"import heapq\\n\\ndef dijkstra(graph, start):\\n    \\n    distances = {node: float('inf') for node in graph}\\n    distances[start] = 0\\n    queue = []\\n    heapq.heappush(queue, [distances[start], start])\\n    \\n    while queue:\\n        current_distance, current_node = heapq.heappop(queue)\\n        \\n        if distances[current_node] < current_distance:\\n            continue\\n            \\n        for adjacent, weight in graph[current_node].items():\\n            distance = current_distance + weight\\n            \\n            if distance < distances[adjacent]:\\n                distances[adjacent] = distance\\n                heapq.heappush(queue, [distance, adjacent])\\n                \\n    return distances\\n\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/dijkstra.png\",\n    \"alt\": \"xas\"\n  }))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"dijkstra(mygraph, 'A')\\n\\n{'A': 0, 'B': 6, 'C': 1, 'D': 2, 'E': 5, 'F': 6}\\n\")), mdx(\"h3\", null, \"\\uCC38\\uACE0: \\uCD5C\\uB2E8 \\uACBD\\uB85C \\uCD9C\\uB825\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD0D0\\uC0C9\\uD560 \\uADF8\\uB798\\uD504\\uC758 \\uC2DC\\uC791 \\uC815\\uC810\\uACFC \\uB2E4\\uB978 \\uC815\\uC810\\uB4E4\\uAC04\\uC758 \\uCD5C\\uB2E8 \\uAC70\\uB9AC \\uBC0F \\uCD5C\\uB2E8 \\uACBD\\uB85C \\uCD9C\\uB825\\uD558\\uAE30\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"import heapq\\n\\n# \\uD0D0\\uC0C9\\uD560 \\uADF8\\uB798\\uD504\\uC640 \\uC2DC\\uC791 \\uC815\\uC810\\uC744 \\uC778\\uC218\\uB85C \\uC804\\uB2EC\\uBC1B\\uC2B5\\uB2C8\\uB2E4.\\ndef dijkstra(graph, start, end):\\n    # \\uC2DC\\uC791 \\uC815\\uC810\\uC5D0\\uC11C \\uAC01 \\uC815\\uC810\\uAE4C\\uC9C0\\uC758 \\uAC70\\uB9AC\\uB97C \\uC800\\uC7A5\\uD560 \\uB515\\uC154\\uB108\\uB9AC\\uB97C \\uC0DD\\uC131\\uD558\\uACE0, \\uBB34\\uD55C\\uB300(inf)\\uB85C \\uCD08\\uAE30\\uD654\\uD569\\uB2C8\\uB2E4.\\n    distances = {vertex: [float('inf'), start] for vertex in graph}\\n\\n    # \\uADF8\\uB798\\uD504\\uC758 \\uC2DC\\uC791 \\uC815\\uC810\\uC758 \\uAC70\\uB9AC\\uB294 0\\uC73C\\uB85C \\uCD08\\uAE30\\uD654 \\uD574\\uC90C\\n    distances[start] = [0, start]\\n\\n    # \\uBAA8\\uB4E0 \\uC815\\uC810\\uC774 \\uC800\\uC7A5\\uB420 \\uD050\\uB97C \\uC0DD\\uC131\\uD569\\uB2C8\\uB2E4.\\n    queue = []\\n\\n    # \\uADF8\\uB798\\uD504\\uC758 \\uC2DC\\uC791 \\uC815\\uC810\\uACFC \\uC2DC\\uC791 \\uC815\\uC810\\uC758 \\uAC70\\uB9AC(0)\\uC744 \\uCD5C\\uC18C\\uD799\\uC5D0 \\uB123\\uC5B4\\uC90C\\n    heapq.heappush(queue, [distances[start][0], start])\\n\\n    while queue:\\n        \\n        # \\uD050\\uC5D0\\uC11C \\uC815\\uC810\\uC744 \\uD558\\uB098\\uC529 \\uAEBC\\uB0B4 \\uC778\\uC811\\uD55C \\uC815\\uC810\\uB4E4\\uC758 \\uAC00\\uC911\\uCE58\\uB97C \\uBAA8\\uB450 \\uD655\\uC778\\uD558\\uC5EC \\uC5C5\\uB370\\uC774\\uD2B8\\uD569\\uB2C8\\uB2E4.\\n        current_distance, current_vertex = heapq.heappop(queue)\\n        \\n        # \\uB354 \\uC9E7\\uC740 \\uACBD\\uB85C\\uAC00 \\uC788\\uB2E4\\uBA74 \\uBB34\\uC2DC\\uD55C\\uB2E4.\\n        if distances[current_vertex][0] < current_distance:\\n            continue\\n            \\n        for adjacent, weight in graph[current_vertex].items():\\n            distance = current_distance + weight\\n            # \\uB9CC\\uC57D \\uC2DC\\uC791 \\uC815\\uC810\\uC5D0\\uC11C \\uC778\\uC811 \\uC815\\uC810\\uC73C\\uB85C \\uBC14\\uB85C \\uAC00\\uB294 \\uAC83\\uBCF4\\uB2E4 \\uD604\\uC7AC \\uC815\\uC810\\uC744 \\uD1B5\\uD574 \\uAC00\\uB294 \\uAC83\\uC774 \\uB354 \\uAC00\\uAE4C\\uC6B8 \\uACBD\\uC6B0\\uC5D0\\uB294\\n            if distance < distances[adjacent][0]:\\n                # \\uAC70\\uB9AC\\uB97C \\uC5C5\\uB370\\uC774\\uD2B8\\uD569\\uB2C8\\uB2E4.\\n                distances[adjacent] = [distance, current_vertex]\\n                heapq.heappush(queue, [distance, adjacent])\\n    \\n    path = end\\n    path_output = end + '->'\\n    while distances[path][1] != start:\\n        path_output += distances[path][1] + '->'\\n        path = distances[path][1]\\n    path_output += start\\n    print (path_output)\\n    return distances\\n\\n# \\uBC29\\uD5A5 \\uADF8\\uB798\\uD504\\nmygraph = {\\n    'A': {'B': 8, 'C': 1, 'D': 2},\\n    'B': {},\\n    'C': {'B': 5, 'D': 2},\\n    'D': {'E': 3, 'F': 5},\\n    'E': {'F': 1},\\n    'F': {'A': 5}\\n}\\n\\nprint(dijkstra(mygraph, 'A', 'F'))\\n\\n# F->E->D->A\\n{'A': [0, 'A'], 'B': [6, 'C'], 'C': [1, 'A'], 'D': [2, 'A'], 'E': [5, 'D'], 'F': [6, 'E']}\\n\")), mdx(\"h3\", null, \"5. \\uC2DC\\uAC04 \\uBCF5\\uC7A1\\uB3C4\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC704 \\uB2E4\\uC775\\uC2A4\\uD2B8\\uB77C \\uC54C\\uACE0\\uB9AC\\uC998\\uC740 \\uD06C\\uAC8C \\uB2E4\\uC74C \\uB450 \\uAC00\\uC9C0 \\uACFC\\uC815\\uC744 \\uAC70\\uCE68\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uACFC\\uC8151: \\uAC01 \\uB178\\uB4DC\\uB9C8\\uB2E4 \\uC778\\uC811\\uD55C \\uAC04\\uC120\\uB4E4\\uC744 \\uBAA8\\uB450 \\uAC80\\uC0AC\\uD558\\uB294 \\uACFC\\uC815\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uACFC\\uC8152: \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0 \\uB178\\uB4DC/\\uAC70\\uB9AC \\uC815\\uBCF4\\uB97C \\uB123\\uACE0 \\uC0AD\\uC81C(pop)\\uD558\\uB294 \\uACFC\\uC815\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uAC01 \\uACFC\\uC815\\uBCC4 \\uC2DC\\uAC04 \\uBCF5\\uC7A1\\uB3C4\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uACFC\\uC8151: \\uAC01 \\uB178\\uB4DC\\uB294 \\uCD5C\\uB300 \\uD55C \\uBC88\\uC529 \\uBC29\\uBB38\\uD558\\uBBC0\\uB85C (\\uCCAB \\uB178\\uB4DC\\uC640 \\uD574\\uB2F9 \\uB178\\uB4DC\\uAC04\\uC758 \\uAC08 \\uC218 \\uC788\\uB294 \\uB8E8\\uD2B8\\uAC00 \\uC788\\uB294 \\uACBD\\uC6B0\\uB9CC \\uD574\\uB2F9), \\uADF8\\uB798\\uD504\\uC758 \\uBAA8\\uB4E0 \\uAC04\\uC120\\uC740 \\uCD5C\\uB300 \\uD55C \\uBC88\\uC529 \\uAC80\\uC0AC\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC989, \\uAC01 \\uB178\\uB4DC\\uB9C8\\uB2E4 \\uC778\\uC811\\uD55C \\uAC04\\uC120\\uB4E4\\uC744 \\uBAA8\\uB450 \\uAC80\\uC0AC\\uD558\\uB294 \\uACFC\\uC815\\uC740 O(E) \\uC2DC\\uAC04\\uC774 \\uAC78\\uB9BC, E \\uB294 \\uAC04\\uC120(edge)\\uC758 \\uC57D\\uC790\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uACFC\\uC8152: \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0 \\uAC00\\uC7A5 \\uB9CE\\uC740 \\uB178\\uB4DC, \\uAC70\\uB9AC \\uC815\\uBCF4\\uAC00 \\uB4E4\\uC5B4\\uAC00\\uB294 \\uACBD\\uC6B0, \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0 \\uB178\\uB4DC/\\uAC70\\uB9AC \\uC815\\uBCF4\\uB97C \\uB123\\uACE0, \\uC0AD\\uC81C\\uD558\\uB294 \\uACFC\\uC815\\uC774 \\uCD5C\\uC545\\uC758 \\uC2DC\\uAC04\\uC774 \\uAC78\\uB9BC\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0 \\uAC00\\uC7A5 \\uB9CE\\uC740 \\uB178\\uB4DC, \\uAC70\\uB9AC \\uC815\\uBCF4\\uAC00 \\uB4E4\\uC5B4\\uAC00\\uB294 \\uC2DC\\uB098\\uB9AC\\uC624\\uB294 \\uADF8\\uB798\\uD504\\uC758 \\uBAA8\\uB4E0 \\uAC04\\uC120\\uC774 \\uAC80\\uC0AC\\uB420 \\uB54C\\uB9C8\\uB2E4, \\uBC30\\uC5F4\\uC758 \\uCD5C\\uB2E8 \\uAC70\\uB9AC\\uAC00 \\uAC31\\uC2E0\\uB418\\uACE0, \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uC5D0 \\uB178\\uB4DC/\\uAC70\\uB9AC\\uAC00 \\uCD94\\uAC00\\uB418\\uB294 \\uAC83\\uC784\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC774 \\uB54C \\uCD94\\uAC00\\uB294 \\uAC01 \\uAC04\\uC120\\uB9C8\\uB2E4 \\uCD5C\\uB300 \\uD55C \\uBC88 \\uC77C\\uC5B4\\uB0A0 \\uC218 \\uC788\\uC73C\\uBBC0\\uB85C, \\uCD5C\\uB300 O(E)\\uC758 \\uC2DC\\uAC04\\uC774 \\uAC78\\uB9AC\\uACE0, O(E) \\uAC1C\\uC758 \\uB178\\uB4DC/\\uAC70\\uB9AC \\uC815\\uBCF4\\uC5D0 \\uB300\\uD574 \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uB97C \\uC720\\uC9C0\\uD558\\uB294 \\uC791\\uC5C5\\uC740 \", mdx(\"span\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"inlineMath\"\n  }), \"O(log{E})\"), \" \\uAC00 \\uAC78\\uB9BC\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB530\\uB77C\\uC11C \\uD574\\uB2F9 \\uACFC\\uC815\\uC758 \\uC2DC\\uAC04 \\uBCF5\\uC7A1\\uB3C4\\uB294 \", mdx(\"span\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"inlineMath\"\n  }), \"O(Elog{E})\"), \" \")))))))), mdx(\"h3\", null, \"\\uCD1D \\uC2DC\\uAC04 \\uBCF5\\uC7A1\\uB3C4\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uACFC\\uC8151 + \\uACFC\\uC8152 = O(E) + \", mdx(\"span\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"inlineMath\"\n  }), \"O(Elog{E})\"), \"  = \", mdx(\"span\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"inlineMath\"\n  }), \"O(E + Elog{E}) = O(Elog{E})\"))), mdx(\"h3\", null, \"\\uCC38\\uACE0: \\uD799\\uC758 \\uC2DC\\uAC04 \\uBCF5\\uC7A1\\uB3C4\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"depth (\\uD2B8\\uB9AC\\uC758 \\uB192\\uC774) \\uB97C h\\uB77C\\uACE0 \\uD45C\\uAE30\\uD55C\\uB2E4\\uBA74,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"n\\uAC1C\\uC758 \\uB178\\uB4DC\\uB97C \\uAC00\\uC9C0\\uB294 heap \\uC5D0 \\uB370\\uC774\\uD130 \\uC0BD\\uC785 \\uB610\\uB294 \\uC0AD\\uC81C\\uC2DC, \\uCD5C\\uC545\\uC758 \\uACBD\\uC6B0 root \\uB178\\uB4DC\\uC5D0\\uC11C leaf \\uB178\\uB4DC\\uAE4C\\uC9C0 \\uBE44\\uAD50\\uD574\\uC57C \\uD558\\uBBC0\\uB85C  h=log2n  \\uC5D0 \\uAC00\\uAE4C\\uC6B0\\uBBC0\\uB85C, \\uC2DC\\uAC04 \\uBCF5\\uC7A1\\uB3C4\\uB294  O(logn)\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#최단-경로-알고리즘의-이해","title":"최단 경로 알고리즘의 이해","items":[{"url":"#1-최단-경로-문제란","title":"1. 최단 경로 문제란?"},{"url":"#최단-경로-문제-종류","title":"최단 경로 문제 종류"},{"url":"#2-최단-경로-알고리즘---다익스트라-알고리즘","title":"2. 최단 경로 알고리즘 - 다익스트라 알고리즘"},{"url":"#다익스트라-알고리즘-로직","title":"다익스트라 알고리즘 로직"},{"url":"#3-예제로-이해하는-다익스트라-알고리즘-우선순위-큐-활용","title":"3. 예제로 이해하는 다익스트라 알고리즘 (우선순위 큐 활용)"},{"url":"#우선순위-큐-사용-장점","title":"우선순위 큐 사용 장점"},{"url":"#4-다익스트라-알고리즘-파이썬-구현-우선순위-큐-활용까지-포함","title":"4. 다익스트라 알고리즘 파이썬 구현 (우선순위 큐 활용까지 포함)"},{"url":"#참고-heapq-라이브러리-활용을-통해-우선순위-큐-사용하기","title":"참고: heapq 라이브러리 활용을 통해 우선순위 큐 사용하기"},{"url":"#다익스트라-알고리즘","title":"다익스트라 알고리즘"},{"url":"#참고-최단-경로-출력","title":"참고: 최단 경로 출력"},{"url":"#5-시간-복잡도","title":"5. 시간 복잡도"},{"url":"#총-시간-복잡도","title":"총 시간 복잡도"},{"url":"#참고-힙의-시간-복잡도","title":"참고: 힙의 시간 복잡도"}]}]},"parent":{"__typename":"File","relativePath":"datastructure&algorithm/24.DijkstraAlgorithm.md"},"frontmatter":{"metaTitle":"다익스트라 알고리즘(Dijkstra Algorithm)","metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/framework/prisma","title":"Prisma"}}},{"node":{"fields":{"slug":"/datastructure&algorithm","title":"자료구조 & 알고리즘(Datastructure & Algorithm)"}}},{"node":{"fields":{"slug":"/","title":"SuHyeon's TechBlog"}}},{"node":{"fields":{"slug":"/git","title":"깃(Git)"}}},{"node":{"fields":{"slug":"/framework","title":"프레임워크(Framework)"}}},{"node":{"fields":{"slug":"/infra","title":"인프라(Infra)"}}},{"node":{"fields":{"slug":"/library","title":"라이브러리(Library)"}}},{"node":{"fields":{"slug":"/tdd","title":"테스트 주도 개발(TDD)"}}},{"node":{"fields":{"slug":"/tdd/1.unit-test","title":"유닛 테스트(Unit Test)"}}},{"node":{"fields":{"slug":"/language","title":"언어(Language)"}}},{"node":{"fields":{"slug":"/tdd/2.mocha","title":"Mocha Framework"}}},{"node":{"fields":{"slug":"/tdd/3.chai","title":"Chai Library"}}},{"node":{"fields":{"slug":"/terminology/web","title":"Web"}}},{"node":{"fields":{"slug":"/terminology","title":"용어정리(terminology)"}}},{"node":{"fields":{"slug":"/library/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/library/nexusjs","title":"Nexus.JS"}}},{"node":{"fields":{"slug":"/library/graphql/ApolloGraphQLserver","title":"ApolloGraphQLserver"}}},{"node":{"fields":{"slug":"/language/javascript","title":"Javascript"}}},{"node":{"fields":{"slug":"/library/graphql/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/language/python","title":"Python"}}},{"node":{"fields":{"slug":"/language/typescript","title":"Typescript"}}},{"node":{"fields":{"slug":"/language/python/basic","title":"Basic"}}},{"node":{"fields":{"slug":"/language/javascript/executionContext","title":"Execution Context(실행 컨텍스트)"}}},{"node":{"fields":{"slug":"/language/javascript/class","title":"Class"}}},{"node":{"fields":{"slug":"/infra/1.BasicTheory","title":"Basic Theory"}}},{"node":{"fields":{"slug":"/infra/2.aws","title":"aws"}}},{"node":{"fields":{"slug":"/infra/3.docker","title":"Docker"}}},{"node":{"fields":{"slug":"/infra/3.docker/docker","title":"Docker"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerawsdeploy","title":"Docker AWS EC2 Deploy"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Basic","title":"AWS-Basic"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-EC2","title":"AWS-EC2"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerbasic","title":"Docker Basic"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-RDS","title":"AWS-RDS"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Route53","title":"AWS-Route 53"}}},{"node":{"fields":{"slug":"/language/javascript/scope_this","title":"스코프 & 함수 호출 방식에 의해 결정되는 this"}}},{"node":{"fields":{"slug":"/git/basic-git-command","title":"Basic git command"}}},{"node":{"fields":{"slug":"/git/changing-default-branch","title":"Changing the Default Branch"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-S3","title":"AWS-S3"}}},{"node":{"fields":{"slug":"/git/configuring-protected-branches","title":"Configure Branch Protection Rule"}}},{"node":{"fields":{"slug":"/git/rebase","title":"Rebase"}}},{"node":{"fields":{"slug":"/git/gitforksync","title":"git fork & sync"}}},{"node":{"fields":{"slug":"/framework/prisma/NoticePrisma","title":"Notice Prisma"}}},{"node":{"fields":{"slug":"/framework/prisma/prisma2","title":"Prisma 2"}}},{"node":{"fields":{"slug":"/framework/NextJs","title":"Next Js"}}},{"node":{"fields":{"slug":"/framework/electron","title":"일렉트론 학습"}}},{"node":{"fields":{"slug":"/framework/electron/electronbasic","title":"Electron Basic"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/10.SpaceComplexity","title":"공간 복잡도(Space Complexity)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/11.BubbleSort","title":"버블 정렬(Bubble Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/13.SelectionSort","title":"선택 정렬(Selection Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/12.InsertionSort","title":"삽입 정렬(Insertion Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/15.DynamicProgramming","title":"동적 계획법과 분할 정복(Dynamic Programming & Divide and conquer"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/14.RecursiveCall","title":"재귀 용법(Recursive Call)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/16.QuickSort","title":"퀵 정렬(Quick Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/17.MergeSort","title":"병렬 정렬(Merge Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/18.SequentialSearch","title":"순차 탐색(Sequential Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/19.BinarySearch","title":"탐색 알고리즘(Binary Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/2.array","title":"배열(Array)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/22.Breadth-FirstSearch","title":"너비 우선 탐색(Breadth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/21.Depth-FirstSearch","title":"깊이 우선 탐색(Depth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/20.Graph","title":"그래프(Graph)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/23.GreedyAlgorithm","title":"탐욕 알고리즘(Greedy Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/24.DijkstraAlgorithm","title":"다익스트라 알고리즘(Dijkstra Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/26.BackTracking","title":"백트래킹(BackTracking)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/25.MinimumSpanningTree","title":"최소 신장 트리(Minimum Spanning Tree)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/4.stack","title":"스택(Stack)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/5.linkedlist","title":"링크드리스트(LinkedList)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/3.queue","title":"큐(Queue)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/7.HashTable","title":"해쉬 테이블(HashTable)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/6.TimeComplexity","title":"시간 복잡도(Time Complexity)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/8.Tree","title":"트리(Tree)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/9.Heap","title":"힙(Heap)"}}}]}},"pageContext":{"id":"283a1f28-db4a-5575-88b2-2092478ef8d3"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}