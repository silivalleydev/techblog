{"componentChunkName":"component---src-templates-docs-js","path":"/datastructure&algorithm/15.DynamicProgramming","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"5649a7e8-2f39-5610-9411-eec57fa27e20","title":"동적 계획법과 분할 정복(Dynamic Programming & Divide and conquer","slug":"/datastructure&algorithm/15.DynamicProgramming"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"동적 계획법과 분할 정복(Dynamic Programming & Divide and conquer\",\n  \"metaTitle\": \"동적 계획법과 분할 정복(Dynamic Programming & Divide and conquer\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"1. \\uC815\\uC758\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB3D9\\uC801\\uACC4\\uD68D\\uBC95 (DP \\uB77C\\uACE0 \\uB9CE\\uC774 \\uBD80\\uB984)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC785\\uB825 \\uD06C\\uAE30\\uAC00 \\uC791\\uC740 \\uBD80\\uBD84 \\uBB38\\uC81C\\uB4E4\\uC744 \\uD574\\uACB0\\uD55C \\uD6C4, \\uD574\\uB2F9 \\uBD80\\uBD84 \\uBB38\\uC81C\\uC758 \\uD574\\uB97C \\uD65C\\uC6A9\\uD574\\uC11C, \\uBCF4\\uB2E4 \\uD070 \\uD06C\\uAE30\\uC758 \\uBD80\\uBD84 \\uBB38\\uC81C\\uB97C \\uD574\\uACB0, \\uCD5C\\uC885\\uC801\\uC73C\\uB85C \\uC804\\uCCB4 \\uBB38\\uC81C\\uB97C \\uD574\\uACB0\\uD558\\uB294 \\uC54C\\uACE0\\uB9AC\\uC998\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC0C1\\uD5A5\\uC2DD \\uC811\\uADFC\\uBC95\\uC73C\\uB85C, \\uAC00\\uC7A5 \\uCD5C\\uD558\\uC704 \\uD574\\uB2F5\\uC744 \\uAD6C\\uD55C \\uD6C4, \\uC774\\uB97C \\uC800\\uC7A5\\uD558\\uACE0, \\uD574\\uB2F9 \\uACB0\\uACFC\\uAC12\\uC744 \\uC774\\uC6A9\\uD574\\uC11C \\uC0C1\\uC704 \\uBB38\\uC81C\\uB97C \\uD480\\uC5B4\\uAC00\\uB294 \\uBC29\\uC2DD \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Memoization \\uAE30\\uBC95\\uC744 \\uC0AC\\uC6A9\\uD568\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Memoization (\\uBA54\\uBAA8\\uC774\\uC81C\\uC774\\uC158) \\uC774\\uB780: \\uD504\\uB85C\\uADF8\\uB7A8 \\uC2E4\\uD589 \\uC2DC \\uC774\\uC804\\uC5D0 \\uACC4\\uC0B0\\uD55C \\uAC12\\uC744 \\uC800\\uC7A5\\uD558\\uC5EC, \\uB2E4\\uC2DC \\uACC4\\uC0B0\\uD558\\uC9C0 \\uC54A\\uB3C4\\uB85D \\uD558\\uC5EC \\uC804\\uCCB4 \\uC2E4\\uD589 \\uC18D\\uB3C4\\uB97C \\uBE60\\uB974\\uAC8C \\uD558\\uB294 \\uAE30\\uC220\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBB38\\uC81C\\uB97C \\uC798\\uAC8C \\uCABC\\uAC24 \\uB54C, \\uBD80\\uBD84 \\uBB38\\uC81C\\uB294 \\uC911\\uBCF5\\uB418\\uC5B4, \\uC7AC\\uD65C\\uC6A9\\uB428\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC608: \\uD53C\\uBCF4\\uB098\\uCE58 \\uC218\\uC5F4\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBD84\\uD560 \\uC815\\uBCF5\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBB38\\uC81C\\uB97C \\uB098\\uB20C \\uC218 \\uC5C6\\uC744 \\uB54C\\uAE4C\\uC9C0 \\uB098\\uB204\\uC5B4\\uC11C \\uAC01\\uAC01\\uC744 \\uD480\\uBA74\\uC11C \\uB2E4\\uC2DC \\uD569\\uBCD1\\uD558\\uC5EC \\uBB38\\uC81C\\uC758 \\uB2F5\\uC744 \\uC5BB\\uB294 \\uC54C\\uACE0\\uB9AC\\uC998\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD558\\uC591\\uC2DD \\uC811\\uADFC\\uBC95\\uC73C\\uB85C, \\uC0C1\\uC704\\uC758 \\uD574\\uB2F5\\uC744 \\uAD6C\\uD558\\uAE30 \\uC704\\uD574, \\uC544\\uB798\\uB85C \\uB0B4\\uB824\\uAC00\\uBA74\\uC11C \\uD558\\uC704\\uC758 \\uD574\\uB2F5\\uC744 \\uAD6C\\uD558\\uB294 \\uBC29\\uC2DD\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC77C\\uBC18\\uC801\\uC73C\\uB85C \\uC7AC\\uADC0\\uD568\\uC218\\uB85C \\uAD6C\\uD604\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBB38\\uC81C\\uB97C \\uC798\\uAC8C \\uCABC\\uAC24 \\uB54C, \\uBD80\\uBD84 \\uBB38\\uC81C\\uB294 \\uC11C\\uB85C \\uC911\\uBCF5\\uB418\\uC9C0 \\uC54A\\uC74C\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC608: \\uBCD1\\uD569 \\uC815\\uB82C, \\uD035 \\uC815\\uB82C \\uB4F1\")))))), mdx(\"h3\", null, \"2. \\uACF5\\uD1B5\\uC810\\uACFC \\uCC28\\uC774\\uC810\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uACF5\\uD1B5\\uC810\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBB38\\uC81C\\uB97C \\uC798\\uAC8C \\uCABC\\uAC1C\\uC11C, \\uAC00\\uC7A5 \\uC791\\uC740 \\uB2E8\\uC704\\uB85C \\uBD84\\uD560\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCC28\\uC774\\uC810\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB3D9\\uC801 \\uACC4\\uD68D\\uBC95\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBD80\\uBD84 \\uBB38\\uC81C\\uB294 \\uC911\\uBCF5\\uB418\\uC5B4, \\uC0C1\\uC704 \\uBB38\\uC81C \\uD574\\uACB0 \\uC2DC \\uC7AC\\uD65C\\uC6A9\\uB428\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Memoization \\uAE30\\uBC95 \\uC0AC\\uC6A9 (\\uBD80\\uBD84 \\uBB38\\uC81C\\uC758 \\uD574\\uB2F5\\uC744 \\uC800\\uC7A5\\uD574\\uC11C \\uC7AC\\uD65C\\uC6A9\\uD558\\uB294 \\uCD5C\\uC801\\uD654 \\uAE30\\uBC95\\uC73C\\uB85C \\uC0AC\\uC6A9)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBD84\\uD560 \\uC815\\uBCF5\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBD80\\uBD84 \\uBB38\\uC81C\\uB294 \\uC11C\\uB85C \\uC911\\uBCF5\\uB418\\uC9C0 \\uC54A\\uC74C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Memoization \\uAE30\\uBC95 \\uC0AC\\uC6A9 \\uC548\\uD568\")))))), mdx(\"h3\", null, \"3. \\uB3D9\\uC801 \\uACC4\\uD68D\\uBC95 \\uC54C\\uACE0\\uB9AC\\uC998 \\uC774\\uD574\"), mdx(\"h4\", null, \"\\uD504\\uB85C\\uADF8\\uB798\\uBC0D \\uC5F0\\uC2B5\"), mdx(\"p\", null, \"\\uD53C\\uBCF4\\uB098\\uCE58 \\uC218\\uC5F4: n \\uC744 \\uC785\\uB825\\uBC1B\\uC544\\uC11C \\uB2E4\\uC74C\\uACFC \\uAC19\\uC774 \\uACC4\\uC0B0\\uB428\\nn \\uC744 \\uC785\\uB825\\uBC1B\\uC558\\uC744 \\uB54C \\uD53C\\uBCF4\\uB098\\uCE58 \\uC218\\uC5F4\\uB85C \\uACB0\\uACFC\\uAC12\\uC744 \\uCD9C\\uB825\\uD558\\uC138\\uC694\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/Fibonacci.png\",\n    \"alt\": \"dsc\"\n  }))), mdx(\"p\", null, \"\\uD568\\uC218\\uB97C fibonacci \\uB77C\\uACE0 \\uD558\\uBA74,\\nfibonacci(0):0\\nfibonacci(1):1\\nfibonacci(2):1\\nfibonacci(3):2\\nfibonacci(4):3\\nfibonacci(5):5\\nfibonacci(6):8\\nfibonacci(7):13\\nfibonacci(8):21\\nfibonacci(9):34\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/dp.png\",\n    \"alt\": \"dsc\"\n  }))), mdx(\"h3\", null, \"recursive call \\uD65C\\uC6A9\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"def fibo(num):\\n    if num <= 1:\\n        return num\\n    return fibo(num - 1) + fibo(num - 2)\\n\\nfibo(4)\\n3\\n\\n\")), mdx(\"h3\", null, \"\\uB3D9\\uC801 \\uACC4\\uD68D\\uBC95 \\uD65C\\uC6A9\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"def fibo_dp(num):\\n    cache = [ 0 for index in range(num + 1)]\\n    cache[0] = 0\\n    cache[1] = 1\\n    \\n    for index in range(2, num + 1):\\n        cache[index] = cache[index - 1] + cache[index - 2]\\n    return cache[num]\\n\\nfibo(10)\\n\\n55\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#1-정의","title":"1. 정의"},{"url":"#2-공통점과-차이점","title":"2. 공통점과 차이점"},{"url":"#3-동적-계획법-알고리즘-이해","title":"3. 동적 계획법 알고리즘 이해","items":[{"url":"#프로그래밍-연습","title":"프로그래밍 연습"}]},{"url":"#recursive-call-활용","title":"recursive call 활용"},{"url":"#동적-계획법-활용","title":"동적 계획법 활용"}]},"parent":{"relativePath":"datastructure&algorithm/15.DynamicProgramming.md"},"frontmatter":{"metaTitle":"동적 계획법과 분할 정복(Dynamic Programming & Divide and conquer","metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/framework/prisma","title":"Prisma"}}},{"node":{"fields":{"slug":"/git","title":"깃(Git)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm","title":"자료구조 & 알고리즘(Datastructure & Algorithm)"}}},{"node":{"fields":{"slug":"/","title":"SuHyeon's TechBlog"}}},{"node":{"fields":{"slug":"/infra","title":"인프라(Infra)"}}},{"node":{"fields":{"slug":"/library","title":"라이브러리(Library)"}}},{"node":{"fields":{"slug":"/tdd","title":"테스트 주도 개발(TDD)"}}},{"node":{"fields":{"slug":"/framework","title":"프레임워크(Framework)"}}},{"node":{"fields":{"slug":"/language","title":"언어(Language)"}}},{"node":{"fields":{"slug":"/tdd/1.unit-test","title":"유닛 테스트(Unit Test)"}}},{"node":{"fields":{"slug":"/tdd/2.mocha","title":"Mocha Framework"}}},{"node":{"fields":{"slug":"/tdd/3.chai","title":"Chai Library"}}},{"node":{"fields":{"slug":"/terminology","title":"용어정리(terminology)"}}},{"node":{"fields":{"slug":"/terminology/web","title":"Web"}}},{"node":{"fields":{"slug":"/library/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/library/nexusjs","title":"Nexus.JS"}}},{"node":{"fields":{"slug":"/language/javascript","title":"Javascript"}}},{"node":{"fields":{"slug":"/language/typescript","title":"Typescript"}}},{"node":{"fields":{"slug":"/language/python","title":"Python"}}},{"node":{"fields":{"slug":"/infra/2.aws","title":"aws"}}},{"node":{"fields":{"slug":"/infra/1.BasicTheory","title":"Basic Theory"}}},{"node":{"fields":{"slug":"/infra/3.docker","title":"Docker"}}},{"node":{"fields":{"slug":"/git/changing-default-branch","title":"Changing the Default Branch"}}},{"node":{"fields":{"slug":"/git/basic-git-command","title":"Basic git command"}}},{"node":{"fields":{"slug":"/git/configuring-protected-branches","title":"Configure Branch Protection Rule"}}},{"node":{"fields":{"slug":"/git/gitforksync","title":"git fork & sync"}}},{"node":{"fields":{"slug":"/git/rebase","title":"Rebase"}}},{"node":{"fields":{"slug":"/library/graphql/ApolloGraphQLserver","title":"ApolloGraphQLserver"}}},{"node":{"fields":{"slug":"/library/graphql/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/language/python/basic","title":"Basic"}}},{"node":{"fields":{"slug":"/language/javascript/class","title":"Class"}}},{"node":{"fields":{"slug":"/infra/3.docker/docker","title":"Docker"}}},{"node":{"fields":{"slug":"/language/javascript/executionContext copy","title":"Execution Context(실행 컨텍스트)"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerbasic","title":"Docker Basic"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerawsdeploy","title":"Docker AWS EC2 Deploy"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Basic","title":"AWS-Basic"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-RDS","title":"AWS-RDS"}}},{"node":{"fields":{"slug":"/language/javascript/scope_this","title":"스코프 & 함수 호출 방식에 의해 결정되는 this"}}},{"node":{"fields":{"slug":"/framework/NextJs","title":"Next Js"}}},{"node":{"fields":{"slug":"/framework/electron","title":"일렉트론 학습"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-EC2","title":"AWS-EC2"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-S3","title":"AWS-S3"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Route53","title":"AWS-Route 53"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/10.SpaceComplexity","title":"공간 복잡도(Space Complexity)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/11.BubbleSort","title":"버블 정렬(Bubble Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/12.InsertionSort","title":"삽입 정렬(Insertion Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/13.SelectionSort","title":"선택 정렬(Selection Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/14.RecursiveCall","title":"재귀 용법(Recursive Call)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/15.DynamicProgramming","title":"동적 계획법과 분할 정복(Dynamic Programming & Divide and conquer"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/16.QuickSort","title":"퀵 정렬(Quick Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/17.MergeSort","title":"병렬 정렬(Merge Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/18.SequentialSearch","title":"순차 탐색(Sequential Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/19.BinarySearch","title":"탐색 알고리즘(Binary Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/2.array","title":"배열(Array)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/20.Graph","title":"그래프(Graph)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/21.Depth-FirstSearch","title":"깊이 우선 탐색(Depth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/22.Breadth-FirstSearch","title":"너비 우선 탐색(Breadth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/23.GreedyAlgorithm","title":"탐욕 알고리즘(Greedy Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/24.DijkstraAlgorithm","title":"다익스트라 알고리즘(Dijkstra Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/3.queue","title":"큐(Queue)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/25.MinimumSpanningTree","title":"최소 신장 트리(Minimum Spanning Tree)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/26.BackTracking","title":"백트래킹(BackTracking)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/4.stack","title":"스택(Stack)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/5.linkedlist","title":"링크드리스트(LinkedList)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/6.TimeComplexity","title":"시간 복잡도(Time Complexity)"}}},{"node":{"fields":{"slug":"/framework/prisma/NoticePrisma","title":"Notice Prisma"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/7.HashTable","title":"해쉬 테이블(HashTable)"}}},{"node":{"fields":{"slug":"/framework/electron/electronbasic","title":"Electron Basic"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/9.Heap","title":"힙(Heap)"}}},{"node":{"fields":{"slug":"/framework/prisma/prisma2","title":"Prisma 2"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/8.Tree","title":"트리(Tree)"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"5649a7e8-2f39-5610-9411-eec57fa27e20"}}}