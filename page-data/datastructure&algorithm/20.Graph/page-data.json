{"componentChunkName":"component---src-templates-docs-js","path":"/datastructure&algorithm/20.Graph","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"ff08e6f6-331e-52ca-b6f8-9a3fd00abf2f","title":"그래프","slug":"/datastructure&algorithm/20.Graph"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"그래프\",\n  \"metaTitle\": \"그래프\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\uADF8\\uB798\\uD504 \\uC774\\uD574\"), mdx(\"h3\", null, \"1. \\uADF8\\uB798\\uD504 (Graph) \\uB780?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uADF8\\uB798\\uD504\\uB294 \\uC2E4\\uC81C \\uC138\\uACC4\\uC758 \\uD604\\uC0C1\\uC774\\uB098 \\uC0AC\\uBB3C\\uC744 \\uC815\\uC810(Vertex) \\uB610\\uB294 \\uB178\\uB4DC(Node) \\uC640 \\uAC04\\uC120(Edge)\\uB85C \\uD45C\\uD604\\uD558\\uAE30 \\uC704\\uD574 \\uC0AC\\uC6A9\")), mdx(\"h4\", null, \"\\uC608\\uC81C \\uC9D1\\uC5D0\\uC11C \\uD68C\\uC0AC\\uB85C \\uAC00\\uB294 \\uACBD\\uB85C\\uB97C \\uADF8\\uB798\\uD504\\uB85C \\uD45C\\uD604\\uD55C \\uC608\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/graph.png\",\n    \"alt\": \"ㅊㅇㄴ\"\n  }))), mdx(\"h3\", null, \"2. \\uADF8\\uB798\\uD504 (Graph) \\uAD00\\uB828 \\uC6A9\\uC5B4\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uB178\\uB4DC (Node): \\uC704\\uCE58\\uB97C \\uB9D0\\uD568, \\uC815\\uC810(Vertex)\\uB77C\\uACE0\\uB3C4 \\uD568\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uAC04\\uC120 (Edge): \\uC704\\uCE58 \\uAC04\\uC758 \\uAD00\\uACC4\\uB97C \\uD45C\\uC2DC\\uD55C \\uC120\\uC73C\\uB85C \\uB178\\uB4DC\\uB97C \\uC5F0\\uACB0\\uD55C \\uC120\\uC774\\uB77C\\uACE0 \\uBCF4\\uBA74 \\uB428 (link \\uB610\\uB294 branch \\uB77C\\uACE0\\uB3C4 \\uD568)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC778\\uC811 \\uC815\\uC810 (Adjacent Vertex) : \\uAC04\\uC120\\uC73C\\uB85C \\uC9C1\\uC811 \\uC5F0\\uACB0\\uB41C \\uC815\\uC810(\\uB610\\uB294 \\uB178\\uB4DC)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uCC38\\uACE0 \\uC6A9\\uC5B4\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC815\\uC810\\uC758 \\uCC28\\uC218 (Degree): \\uBB34\\uBC29\\uD5A5 \\uADF8\\uB798\\uD504\\uC5D0\\uC11C \\uD558\\uB098\\uC758 \\uC815\\uC810\\uC5D0 \\uC778\\uC811\\uD55C \\uC815\\uC810\\uC758 \\uC218\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC9C4\\uC785 \\uCC28\\uC218 (In-Degree): \\uBC29\\uD5A5 \\uADF8\\uB798\\uD504\\uC5D0\\uC11C \\uC678\\uBD80\\uC5D0\\uC11C \\uC624\\uB294 \\uAC04\\uC120\\uC758 \\uC218\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC9C4\\uCD9C \\uCC28\\uC218 (Out-Degree): \\uBC29\\uD5A5 \\uADF8\\uB798\\uD504\\uC5D0\\uC11C \\uC678\\uBD80\\uB85C \\uD5A5\\uD558\\uB294 \\uAC04\\uC120\\uC758 \\uC218\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uACBD\\uB85C \\uAE38\\uC774 (Path Length): \\uACBD\\uB85C\\uB97C \\uAD6C\\uC131\\uD558\\uAE30 \\uC704\\uD574 \\uC0AC\\uC6A9\\uB41C \\uAC04\\uC120\\uC758 \\uC218\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB2E8\\uC21C \\uACBD\\uB85C (Simple Path): \\uCC98\\uC74C \\uC815\\uC810\\uACFC \\uB05D \\uC815\\uC810\\uC744 \\uC81C\\uC678\\uD558\\uACE0 \\uC911\\uBCF5\\uB41C \\uC815\\uC810\\uC774 \\uC5C6\\uB294 \\uACBD\\uB85C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC0AC\\uC774\\uD074 (Cycle): \\uB2E8\\uC21C \\uACBD\\uB85C\\uC758 \\uC2DC\\uC791 \\uC815\\uC810\\uACFC \\uC885\\uB8CC \\uC815\\uC810\\uC774 \\uB3D9\\uC77C\\uD55C \\uACBD\\uC6B0\")))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uB2E8\\uC21C \\uACBD\\uB85C (A - B - C)\\n\", mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/simplepath.png\",\n    \"alt\": \"sdc\"\n  })))), mdx(\"h3\", null, \"3. \\uADF8\\uB798\\uD504 (Graph) \\uC885\\uB958\"), mdx(\"h4\", null, \"\\uBB34\\uBC29\\uD5A5 \\uADF8\\uB798\\uD504 (Undirected Graph)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC29\\uD5A5\\uC774 \\uC5C6\\uB294 \\uADF8\\uB798\\uD504\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC04\\uC120\\uC744 \\uD1B5\\uD574, \\uB178\\uB4DC\\uB294 \\uC591\\uBC29\\uD5A5\\uC73C\\uB85C \\uAC08 \\uC218 \\uC788\\uC74C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBCF4\\uD1B5 \\uB178\\uB4DC A, B\\uAC00 \\uC5F0\\uACB0\\uB418\\uC5B4 \\uC788\\uC744 \\uACBD\\uC6B0, (A, B) \\uB610\\uB294 (B, A) \\uB85C \\uD45C\\uAE30\\n\", mdx(\"img\", _extends({\n    parentName: \"li\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/undirectedgraph.png\",\n    \"alt\": \"cds\"\n  })))), mdx(\"h4\", null, \"\\uBC29\\uD5A5 \\uADF8\\uB798\\uD504 (Directed Graph)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC04\\uC120\\uC5D0 \\uBC29\\uD5A5\\uC774 \\uC788\\uB294 \\uADF8\\uB798\\uD504\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBCF4\\uD1B5 \\uB178\\uB4DC A, B\\uAC00 A -> B \\uB85C \\uAC00\\uB294 \\uAC04\\uC120\\uC73C\\uB85C \\uC5F0\\uACB0\\uB418\\uC5B4 \\uC788\\uC744 \\uACBD\\uC6B0, <A, B> \\uB85C \\uD45C\\uAE30 (<B, A> \\uB294 B -> A \\uB85C \\uAC00\\uB294 \\uAC04\\uC120\\uC774 \\uC788\\uB294 \\uACBD\\uC6B0\\uC774\\uBBC0\\uB85C <A, B> \\uC640 \\uB2E4\\uB984)\\n\", mdx(\"img\", _extends({\n    parentName: \"li\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/directedgraph.png\",\n    \"alt\": \"dsc\"\n  })))), mdx(\"h4\", null, \"\\uAC00\\uC911\\uCE58 \\uADF8\\uB798\\uD504 (Weighted Graph) \\uB610\\uB294 \\uB124\\uD2B8\\uC6CC\\uD06C (Network)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC04\\uC120\\uC5D0 \\uBE44\\uC6A9 \\uB610\\uB294 \\uAC00\\uC911\\uCE58\\uAC00 \\uD560\\uB2F9\\uB41C \\uADF8\\uB798\\uD504\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/weightedgraph.png\",\n    \"alt\": \"cds\"\n  }))), mdx(\"h4\", null, \"\\uC5F0\\uACB0 \\uADF8\\uB798\\uD504 (Connected Graph) \\uC640 \\uBE44\\uC5F0\\uACB0 \\uADF8\\uB798\\uD504 (Disconnected Graph)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC5F0\\uACB0 \\uADF8\\uB798\\uD504 (Connected Graph)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBB34\\uBC29\\uD5A5 \\uADF8\\uB798\\uD504\\uC5D0 \\uC788\\uB294 \\uBAA8\\uB4E0 \\uB178\\uB4DC\\uC5D0 \\uB300\\uD574 \\uD56D\\uC0C1 \\uACBD\\uB85C\\uAC00 \\uC874\\uC7AC\\uD558\\uB294 \\uACBD\\uC6B0\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBE44\\uC5F0\\uACB0 \\uADF8\\uB798\\uD504 (Disconnected Graph)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBB34\\uBC29\\uD5A5 \\uADF8\\uB798\\uD504\\uC5D0\\uC11C \\uD2B9\\uC815 \\uB178\\uB4DC\\uC5D0 \\uB300\\uD574 \\uACBD\\uB85C\\uAC00 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uB294 \\uACBD\\uC6B0\")))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uBE44\\uC5F0\\uACB0 \\uADF8\\uB798\\uD504 \\uC608\\n\", mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/disconnectedgraph.png\",\n    \"alt\": \"scd\"\n  })))), mdx(\"h4\", null, \"\\uC0AC\\uC774\\uD074 (Cycle) \\uACFC \\uBE44\\uC21C\\uD658 \\uADF8\\uB798\\uD504 (Acyclic Graph)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC0AC\\uC774\\uD074 (Cycle)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB2E8\\uC21C \\uACBD\\uB85C\\uC758 \\uC2DC\\uC791 \\uB178\\uB4DC\\uC640 \\uC885\\uB8CC \\uB178\\uB4DC\\uAC00 \\uB3D9\\uC77C\\uD55C \\uACBD\\uC6B0\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBE44\\uC21C\\uD658 \\uADF8\\uB798\\uD504 (Acyclic Graph)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC0AC\\uC774\\uD074\\uC774 \\uC5C6\\uB294 \\uADF8\\uB798\\uD504\")))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uBE44\\uC21C\\uD658 \\uADF8\\uB798\\uD504 \\uC608\\n\", mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/acyclicgraph.png\",\n    \"alt\": \"cds\"\n  })))), mdx(\"h4\", null, \"\\uC644\\uC804 \\uADF8\\uB798\\uD504 (Complete Graph)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uADF8\\uB798\\uD504\\uC758 \\uBAA8\\uB4E0 \\uB178\\uB4DC\\uAC00 \\uC11C\\uB85C \\uC5F0\\uACB0\\uB418\\uC5B4 \\uC788\\uB294 \\uADF8\\uB798\\uD504\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uC644\\uC804 \\uADF8\\uB798\\uD504 \\uC608\\n\", mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/completegraph.png\",\n    \"alt\": \"cds\"\n  })))), mdx(\"h3\", null, \"3. \\uADF8\\uB798\\uD504\\uC640 \\uD2B8\\uB9AC\\uC758 \\uCC28\\uC774\"), mdx(\"p\", null, \"\\uD2B8\\uB9AC\\uB294 \\uADF8\\uB798\\uD504 \\uC911\\uC5D0 \\uC18D\\uD55C \\uD2B9\\uBCC4\\uD55C \\uC885\\uB958\\uB77C\\uACE0 \\uBCFC \\uC218 \\uC788\\uC74C\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\uADF8\\uB798\\uD504\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\uD2B8\\uB9AC\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\uC815\\uC758\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\uB178\\uB4DC\\uC640 \\uB178\\uB4DC\\uB97C \\uC5F0\\uACB0\\uD558\\uB294 \\uAC04\\uC120\\uC73C\\uB85C \\uD45C\\uD604\\uB418\\uB294 \\uC790\\uB8CC \\uAD6C\\uC870\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\uADF8\\uB798\\uD504\\uC758 \\uD55C \\uC885\\uB958, \\uBC29\\uD5A5\\uC131\\uC774 \\uC788\\uB294 \\uBE44\\uC21C\\uD658\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\uBC29\\uD5A5\\uC131\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\uBC29\\uD5A5 \\uADF8\\uB798\\uD504, \\uBB34\\uBC29\\uD5A5 \\uADF8\\uB798\\uD504 \\uB458\\uB2E4 \\uC874\\uC7AC\\uD568\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\uBC29\\uD5A5 \\uADF8\\uB798\\uD504\\uB9CC \\uC874\\uC7AC\\uD568\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\uC0AC\\uC774\\uD074\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\uC0AC\\uC774\\uD074 \\uAC00\\uB2A5\\uD568, \\uC21C\\uD658 \\uBC0F \\uBE44\\uC21C\\uD658 \\uADF8\\uB798\\uD504 \\uBAA8\\uB450 \\uC874\\uC7AC\\uD568\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\uBE44\\uC21C\\uD658 \\uADF8\\uB798\\uD504\\uB85C \\uC0AC\\uC774\\uD074\\uC774 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uC74C\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\uB8E8\\uD2B8 \\uB178\\uB4DC\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\uB8E8\\uD2B8 \\uB178\\uB4DC \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uC74C\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\uB8E8\\uD2B8 \\uB178\\uB4DC \\uC874\\uC7AC\\uD568\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\uBD80\\uBAA8/\\uC790\\uC2DD \\uAD00\\uACC4\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\uBD80\\uBAA8 \\uC790\\uC2DD \\uAC1C\\uB150\\uC774 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uC74C\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"\\uBD80\\uBAA8 \\uC790\\uC2DD \\uAD00\\uACC4\\uAC00 \\uC874\\uC7AC\\uD568\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#그래프-이해","title":"그래프 이해","items":[{"url":"#1-그래프-graph-란","title":"1. 그래프 (Graph) 란?","items":[{"url":"#예제-집에서-회사로-가는-경로를-그래프로-표현한-예","title":"예제 집에서 회사로 가는 경로를 그래프로 표현한 예"}]},{"url":"#2-그래프-graph-관련-용어","title":"2. 그래프 (Graph) 관련 용어"},{"url":"#3-그래프-graph-종류","title":"3. 그래프 (Graph) 종류","items":[{"url":"#무방향-그래프-undirected-graph","title":"무방향 그래프 (Undirected Graph)"},{"url":"#방향-그래프-directed-graph","title":"방향 그래프 (Directed Graph)"},{"url":"#가중치-그래프-weighted-graph-또는-네트워크-network","title":"가중치 그래프 (Weighted Graph) 또는 네트워크 (Network)"},{"url":"#연결-그래프-connected-graph-와-비연결-그래프-disconnected-graph","title":"연결 그래프 (Connected Graph) 와 비연결 그래프 (Disconnected Graph)"},{"url":"#사이클-cycle-과-비순환-그래프-acyclic-graph","title":"사이클 (Cycle) 과 비순환 그래프 (Acyclic Graph)"},{"url":"#완전-그래프-complete-graph","title":"완전 그래프 (Complete Graph)"}]},{"url":"#3-그래프와-트리의-차이","title":"3. 그래프와 트리의 차이"}]}]},"parent":{"relativePath":"datastructure&algorithm/20.Graph.md"},"frontmatter":{"metaTitle":"그래프","metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/framework/prisma","title":"Prisma"}}},{"node":{"fields":{"slug":"/datastructure&algorithm","title":"자료구조 & 알고리즘"}}},{"node":{"fields":{"slug":"/framework","title":"프레임워크"}}},{"node":{"fields":{"slug":"/","title":"SuHyeon's TechBlog"}}},{"node":{"fields":{"slug":"/language","title":"언어"}}},{"node":{"fields":{"slug":"/infra","title":"인프라"}}},{"node":{"fields":{"slug":"/library","title":"라이브러리"}}},{"node":{"fields":{"slug":"/library/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/language/typescript","title":"Typescript"}}},{"node":{"fields":{"slug":"/library/nexusjs","title":"Nexus.JS"}}},{"node":{"fields":{"slug":"/library/graphql/ApolloGraphQLserver","title":"ApolloGraphQLserver"}}},{"node":{"fields":{"slug":"/library/graphql/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/framework/NextJs","title":"Next Js"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/3.queue","title":"큐(queue)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/4.stack","title":"스택(stack)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/1.datastructure&algorithm-tutorial","title":"자료구조 & 알고리즘 튜토리얼"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/5.linkedlist","title":"링크드리스트(LinkedList)"}}},{"node":{"fields":{"slug":"/framework/prisma/NoticePrisma","title":"Notice Prisma"}}},{"node":{"fields":{"slug":"/framework/prisma/prisma2","title":"Prisma 2"}}},{"node":{"fields":{"slug":"/infra/2.aws","title":"aws"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Basic","title":"AWS-Basic"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-S3","title":"AWS-S3"}}},{"node":{"fields":{"slug":"/infra/3.docker/docker","title":"Docker"}}},{"node":{"fields":{"slug":"/infra/3.docker","title":"Docker"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerbasic","title":"Docker Basic"}}},{"node":{"fields":{"slug":"/infra/1.BasicTheory","title":"Basic Theory"}}},{"node":{"fields":{"slug":"/testframework","title":"테스트 프레임워크"}}},{"node":{"fields":{"slug":"/testframework/1.mocha","title":"Mocha"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerawsdeploy","title":"Docker AWS EC2 Deploy"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-EC2","title":"AWS-EC2"}}},{"node":{"fields":{"slug":"/language/javascript","title":"Javascript"}}},{"node":{"fields":{"slug":"/language/javascript/class","title":"Class"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Route53","title":"AWS-Route 53"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-RDS","title":"AWS-RDS"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/7.HashTable","title":"해쉬 테이블"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/8.Tree","title":"트리"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/9.Heap","title":"힙"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/10.SpaceComplexity","title":"공간 복잡도"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/13.SelectionSort","title":"선택 정렬"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/14.RecursiveCall","title":"재귀 용법"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/15.DynamicProgramming","title":"동적 계획법과 분할 정복"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/16.QuickSort","title":"퀵 정렬"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/17.MergeSort","title":"병렬 정렬"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/18.SequentialSearch","title":"순차 탐색"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/19.BinarySearch","title":"탐색 알고리즘"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/20.Graph","title":"그래프"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/2.array","title":"배열"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/21.Depth-FirstSearch","title":"깊이 우선 탐색"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/22.Breadth-FirstSearch","title":"너비 우선 탐색"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/23.GreedyAlgorithm","title":"탐욕 알고리즘"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/24.DijkstraAlgorithm","title":"다익스트라 알고리즘"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/25.MinimumSpanningTree","title":"최소 신장 트리"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/26.BackTracking","title":"백트래킹"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/6.TimeComplexity","title":"시간 복잡도"}}},{"node":{"fields":{"slug":"/git","title":"깃 허브"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/11.BubbleSort","title":"버블 정렬"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/12.InsertionSort","title":"삽입 정렬"}}},{"node":{"fields":{"slug":"/git/gitforksync","title":"git fork & sync"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"ff08e6f6-331e-52ca-b6f8-9a3fd00abf2f"}}}