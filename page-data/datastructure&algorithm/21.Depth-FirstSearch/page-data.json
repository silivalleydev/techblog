{"componentChunkName":"component---src-templates-docs-js","path":"/datastructure&algorithm/21.Depth-FirstSearch","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"86376e98-5a27-511c-a47d-26c7b11a3854","title":"깊이 우선 탐색(Depth-FirstSearch)","slug":"/datastructure&algorithm/21.Depth-FirstSearch"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"깊이 우선 탐색(Depth-FirstSearch)\",\n  \"metaTitle\": \"깊이 우선 탐색(Depth-FirstSearch)\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"1. BFS \\uC640 DFS \\uB780?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB300\\uD45C\\uC801\\uC778 \\uADF8\\uB798\\uD504 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\\uD0D0\\uC0C9\"), \" \\uC54C\\uACE0\\uB9AC\\uC998\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB108\\uBE44 \\uC6B0\\uC120 \\uD0D0\\uC0C9 (Breadth First Search): \\uC815\\uC810\\uB4E4\\uACFC \\uAC19\\uC740 \\uB808\\uBCA8\\uC5D0 \\uC788\\uB294 \\uB178\\uB4DC\\uB4E4 (\\uD615\\uC81C \\uB178\\uB4DC\\uB4E4)\\uC744 \\uBA3C\\uC800 \\uD0D0\\uC0C9\\uD558\\uB294 \\uBC29\\uC2DD\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAE4A\\uC774 \\uC6B0\\uC120 \\uD0D0\\uC0C9 (Depth First Search): \\uC815\\uC810\\uC758 \\uC790\\uC2DD\\uB4E4\\uC744 \\uBA3C\\uC800 \\uD0D0\\uC0C9\\uD558\\uB294 \\uBC29\\uC2DD\")))), mdx(\"h4\", null, \"BFS/DFS \\uBC29\\uC2DD \\uC774\\uD574\\uB97C \\uC704\\uD55C \\uC608\\uC81C\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BFS \\uBC29\\uC2DD: A - B - C - D - G - H - I - E - F - J \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD55C \\uB2E8\\uACC4\\uC529 \\uB0B4\\uB824\\uAC00\\uBA74\\uC11C, \\uD574\\uB2F9 \\uB178\\uB4DC\\uC640 \\uAC19\\uC740 \\uB808\\uBCA8\\uC5D0 \\uC788\\uB294 \\uB178\\uB4DC\\uB4E4 (\\uD615\\uC81C \\uB178\\uB4DC\\uB4E4)\\uC744 \\uBA3C\\uC800 \\uC21C\\uD68C\\uD568\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DFS \\uBC29\\uC2DD: A - B - D - E - F - C - G - H - I - J \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD55C \\uB178\\uB4DC\\uC758 \\uC790\\uC2DD\\uC744 \\uD0C0\\uACE0 \\uB05D\\uAE4C\\uC9C0 \\uC21C\\uD68C\\uD55C \\uD6C4, \\uB2E4\\uC2DC \\uB3CC\\uC544\\uC640\\uC11C \\uB2E4\\uB978 \\uD615\\uC81C\\uB4E4\\uC758 \\uC790\\uC2DD\\uC744 \\uD0C0\\uACE0 \\uB0B4\\uB824\\uAC00\\uBA70 \\uC21C\\uD654\\uD568\")))), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/BFSDFS.png\",\n    \"alt\": \"dsc\"\n  }))), mdx(\"h3\", null, \"2. \\uD30C\\uC774\\uC36C\\uC73C\\uB85C \\uADF8\\uB798\\uD504\\uB97C \\uD45C\\uD604\\uD558\\uB294 \\uBC29\\uBC95\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD30C\\uC774\\uC36C\\uC5D0\\uC11C \\uC81C\\uACF5\\uD558\\uB294 \\uB515\\uC154\\uB108\\uB9AC\\uC640 \\uB9AC\\uC2A4\\uD2B8 \\uC790\\uB8CC \\uAD6C\\uC870\\uB97C \\uD65C\\uC6A9\\uD574\\uC11C \\uADF8\\uB798\\uD504\\uB97C \\uD45C\\uD604\\uD560 \\uC218 \\uC788\\uC74C\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"graph = dict()\\n\\ngraph['A'] = ['B', 'C']\\ngraph['B'] = ['A', 'D']\\ngraph['C'] = ['A', 'G', 'H', 'I']\\ngraph['D'] = ['B', 'E', 'F']\\ngraph['E'] = ['D']\\ngraph['F'] = ['D']\\ngraph['G'] = ['C']\\ngraph['H'] = ['C']\\ngraph['I'] = ['C', 'J']\\ngraph['J'] = ['I']\\n\\ngraph\\n\\n{'A': ['B', 'C'],\\n 'B': ['A', 'D'],\\n 'C': ['A', 'G', 'H', 'I'],\\n 'D': ['B', 'E', 'F'],\\n 'E': ['D'],\\n 'F': ['D'],\\n 'G': ['C'],\\n 'H': ['C'],\\n 'I': ['C', 'J'],\\n 'J': ['I']}\\n\")), mdx(\"h3\", null, \"\\uADF8\\uB798\\uD504 \\uC608\\uC640 \\uD30C\\uC774\\uC36C \\uD45C\\uD604\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/dfsgraph.png\",\n    \"alt\": \"cds\"\n  }))), mdx(\"h3\", null, \"3. DFS \\uC54C\\uACE0\\uB9AC\\uC998 \\uAD6C\\uD604\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC790\\uB8CC\\uAD6C\\uC870 \\uC2A4\\uD0DD\\uACFC \\uD050\\uB97C \\uD65C\\uC6A9\\uD568\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"need_visit \\uC2A4\\uD0DD\\uACFC visited \\uD050, \\uB450 \\uAC1C\\uC758 \\uC790\\uB8CC \\uAD6C\\uC870\\uB97C \\uC0DD\\uC131\")))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"BFS \\uC790\\uB8CC\\uAD6C\\uC870\\uB294 \\uB450 \\uAC1C\\uC758 \\uD050\\uB97C \\uD65C\\uC6A9\\uD558\\uB294\\uB370 \\uBC18\\uD574, DFS \\uB294 \\uC2A4\\uD0DD\\uACFC \\uD050\\uB97C \\uD65C\\uC6A9\\uD55C\\uB2E4\\uB294 \\uCC28\\uC774\\uAC00 \\uC788\\uC74C\\uC744 \\uC778\\uC9C0\\uD574\\uC57C \\uD568\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD050\\uC640 \\uC2A4\\uD0DD \\uAD6C\\uD604\\uC740 \\uBCC4\\uB3C4 \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC\\uB97C \\uD65C\\uC6A9\\uD560 \\uC218\\uB3C4 \\uC788\\uC9C0\\uB9CC, \\uAC04\\uB2E8\\uD788 \\uD30C\\uC774\\uC36C \\uB9AC\\uC2A4\\uD2B8\\uB97C \\uD65C\\uC6A9\\uD560 \\uC218\\uB3C4 \\uC788\\uC74C\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"def dfs(graph, start_node):\\n    visited, need_visit = list(), list()\\n    need_visit.append(start_node)\\n    \\n    while need_visit:\\n        node = need_visit.pop()\\n        if node not in visited:\\n            visited.append(node)\\n            need_visit.extend(graph[node])\\n    \\n    return visited\\n\\ndfs(graph, 'A')\\n\\n['A', 'C', 'I', 'J', 'H', 'G', 'B', 'D', 'F', 'E']\\n\\n\")), mdx(\"h3\", null, \"4. \\uC2DC\\uAC04 \\uBCF5\\uC7A1\\uB3C4\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC77C\\uBC18\\uC801\\uC778 DFS \\uC2DC\\uAC04 \\uBCF5\\uC7A1\\uB3C4\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB178\\uB4DC \\uC218: V\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC04\\uC120 \\uC218: E\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC704 \\uCF54\\uB4DC\\uC5D0\\uC11C while need_visit \\uC740 V + E \\uBC88 \\uB9CC\\uD07C \\uC218\\uD589\\uD568\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2DC\\uAC04 \\uBCF5\\uC7A1\\uB3C4: O(V + E)\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#1-bfs-와-dfs-란","title":"1. BFS 와 DFS 란?","items":[{"url":"#bfsdfs-방식-이해를-위한-예제","title":"BFS/DFS 방식 이해를 위한 예제"}]},{"url":"#2-파이썬으로-그래프를-표현하는-방법","title":"2. 파이썬으로 그래프를 표현하는 방법"},{"url":"#그래프-예와-파이썬-표현","title":"그래프 예와 파이썬 표현"},{"url":"#3-dfs-알고리즘-구현","title":"3. DFS 알고리즘 구현"},{"url":"#4-시간-복잡도","title":"4. 시간 복잡도"}]},"parent":{"relativePath":"datastructure&algorithm/21.Depth-FirstSearch.md"},"frontmatter":{"metaTitle":"깊이 우선 탐색(Depth-FirstSearch)","metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/framework/prisma","title":"Prisma"}}},{"node":{"fields":{"slug":"/datastructure&algorithm","title":"자료구조 & 알고리즘(Datastructure & Algorithm)"}}},{"node":{"fields":{"slug":"/framework","title":"프레임워크(Framework)"}}},{"node":{"fields":{"slug":"/git","title":"깃(Git)"}}},{"node":{"fields":{"slug":"/","title":"SuHyeon's TechBlog"}}},{"node":{"fields":{"slug":"/infra","title":"인프라(Infra)"}}},{"node":{"fields":{"slug":"/language","title":"언어(Language)"}}},{"node":{"fields":{"slug":"/library","title":"라이브러리(Library)"}}},{"node":{"fields":{"slug":"/tdd","title":"테스트 주도 개발(TDD)"}}},{"node":{"fields":{"slug":"/terminology","title":"용어정리(terminology)"}}},{"node":{"fields":{"slug":"/tdd/1.unit-test","title":"유닛 테스트(Unit Test)"}}},{"node":{"fields":{"slug":"/tdd/3.chai","title":"Chai Library"}}},{"node":{"fields":{"slug":"/tdd/2.mocha","title":"Mocha Framework"}}},{"node":{"fields":{"slug":"/terminology/web","title":"Web"}}},{"node":{"fields":{"slug":"/library/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/library/nexusjs","title":"Nexus.JS"}}},{"node":{"fields":{"slug":"/language/javascript","title":"Javascript"}}},{"node":{"fields":{"slug":"/language/python","title":"Python"}}},{"node":{"fields":{"slug":"/language/typescript","title":"Typescript"}}},{"node":{"fields":{"slug":"/infra/1.BasicTheory","title":"Basic Theory"}}},{"node":{"fields":{"slug":"/infra/2.aws","title":"aws"}}},{"node":{"fields":{"slug":"/infra/3.docker","title":"Docker"}}},{"node":{"fields":{"slug":"/git/basic-git-command","title":"Basic git command"}}},{"node":{"fields":{"slug":"/git/changing-default-branch","title":"Changing the Default Branch"}}},{"node":{"fields":{"slug":"/git/configuring-protected-branches","title":"Configure Branch Protection Rule"}}},{"node":{"fields":{"slug":"/library/graphql/ApolloGraphQLserver","title":"ApolloGraphQLserver"}}},{"node":{"fields":{"slug":"/git/gitforksync","title":"git fork & sync"}}},{"node":{"fields":{"slug":"/git/rebase","title":"Rebase"}}},{"node":{"fields":{"slug":"/library/graphql/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/framework/NextJs","title":"Next Js"}}},{"node":{"fields":{"slug":"/framework/electron","title":"일렉트론 학습"}}},{"node":{"fields":{"slug":"/language/javascript/class","title":"Class"}}},{"node":{"fields":{"slug":"/language/python/basic","title":"Basic"}}},{"node":{"fields":{"slug":"/infra/3.docker/docker","title":"Docker"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerbasic","title":"Docker Basic"}}},{"node":{"fields":{"slug":"/language/javascript/scope_this","title":"스코프 & 함수 호출 방식에 의해 결정되는 this"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerawsdeploy","title":"Docker AWS EC2 Deploy"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-EC2","title":"AWS-EC2"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Basic","title":"AWS-Basic"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-RDS","title":"AWS-RDS"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Route53","title":"AWS-Route 53"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-S3","title":"AWS-S3"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/10.SpaceComplexity","title":"공간 복잡도(Space Complexity)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/11.BubbleSort","title":"버블 정렬(Bubble Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/13.SelectionSort","title":"선택 정렬(Selection Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/12.InsertionSort","title":"삽입 정렬(Insertion Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/14.RecursiveCall","title":"재귀 용법(Recursive Call)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/15.DynamicProgramming","title":"동적 계획법과 분할 정복(Dynamic Programming & Divide and conquer"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/17.MergeSort","title":"병렬 정렬(Merge Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/18.SequentialSearch","title":"순차 탐색(Sequential Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/16.QuickSort","title":"퀵 정렬(Quick Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/19.BinarySearch","title":"탐색 알고리즘(Binary Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/2.array","title":"배열(Array)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/21.Depth-FirstSearch","title":"깊이 우선 탐색(Depth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/20.Graph","title":"그래프(Graph)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/22.Breadth-FirstSearch","title":"너비 우선 탐색(Breadth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/23.GreedyAlgorithm","title":"탐욕 알고리즘(Greedy Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/25.MinimumSpanningTree","title":"최소 신장 트리(Minimum Spanning Tree)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/24.DijkstraAlgorithm","title":"다익스트라 알고리즘(Dijkstra Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/3.queue","title":"큐(Queue)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/26.BackTracking","title":"백트래킹(BackTracking)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/4.stack","title":"스택(Stack)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/5.linkedlist","title":"링크드리스트(LinkedList)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/6.TimeComplexity","title":"시간 복잡도(Time Complexity)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/7.HashTable","title":"해쉬 테이블(HashTable)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/9.Heap","title":"힙(Heap)"}}},{"node":{"fields":{"slug":"/framework/prisma/NoticePrisma","title":"Notice Prisma"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/8.Tree","title":"트리(Tree)"}}},{"node":{"fields":{"slug":"/framework/electron/electronbasic","title":"Electron Basic"}}},{"node":{"fields":{"slug":"/framework/prisma/prisma2","title":"Prisma 2"}}},{"node":{"fields":{"slug":"/language/javascript/executionContext","title":"Execution Context(실행 컨텍스트)"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"86376e98-5a27-511c-a47d-26c7b11a3854"}}}