{"componentChunkName":"component---src-templates-docs-js","path":"/datastructure&algorithm/13.SelectionSort","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"62b8c3ca-cce3-517e-a974-846842c98185","title":"선택 정렬(Selection Sort)","slug":"/datastructure&algorithm/13.SelectionSort"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"선택 정렬(Selection Sort)\",\n  \"metaTitle\": \"선택 정렬(Selection Sort)\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"1. \\uC120\\uD0DD \\uC815\\uB82C (selection sort) \\uB780?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB2E4\\uC74C\\uACFC \\uAC19\\uC740 \\uC21C\\uC11C\\uB97C \\uBC18\\uBCF5\\uD558\\uBA70 \\uC815\\uB82C\\uD558\\uB294 \\uC54C\\uACE0\\uB9AC\\uC998\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uC8FC\\uC5B4\\uC9C4 \\uB370\\uC774\\uD130 \\uC911, \\uCD5C\\uC18C\\uAC12\\uC744 \\uCC3E\\uC74C <-- \\uBAA8\\uB4E0 \\uBC30\\uC5F4\\uC744 \\uAC80\\uC0C9\\uD558\\uC5EC \\uCD5C\\uC18C\\uAC12\\uC744 \\uCC3E\\uACE0 \\uCC3E\\uC558\\uC73C\\uBA74 \\uAC80\\uC0C9 \\uC2DC\\uC791\\uBC30\\uC5F4\\uACFC \\uCD5C\\uC18C\\uAC12 \\uBC30\\uC5F4\\uC744 \\uBC14\\uAFC8\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uD574\\uB2F9 \\uCD5C\\uC18C\\uAC12\\uC744 \\uB370\\uC774\\uD130 \\uB9E8 \\uC55E\\uC5D0 \\uC704\\uCE58\\uD55C \\uAC12\\uACFC \\uAD50\\uCCB4\\uD568\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uB9E8 \\uC55E\\uC758 \\uC704\\uCE58\\uB97C \\uBE80 \\uB098\\uBA38\\uC9C0 \\uB370\\uC774\\uD130\\uB97C \\uB3D9\\uC77C\\uD55C \\uBC29\\uBC95\\uC73C\\uB85C \\uBC18\\uBCF5\\uD568 <-- \\uCCAB\\uBC88\\uC9F8 \\uBC30\\uC5F4\\uC744 \\uCD5C\\uC18C\\uAC12\\uC744 \\uCC3E\\uC558\\uC73C\\uBA74 \\uB450\\uBC88\\uC9F8 \\uBC30\\uC5F4\\uC744 \\uAE30\\uC900\\uC73C\\uB85C \\uADF8\\uB2E4\\uC74C \\uCD5C\\uC18C\\uAC12\\uC744 \\uAC80\\uC0C9\\uD558\\uC5EC \\uBC14\\uAFD4\\uC8FC\\uB294 \\uAC78 \\uBC18\\uBCF5 \")))), mdx(\"h4\", null, \"\\uC9C1\\uC811 \\uB208\\uC73C\\uB85C \\uBCF4\\uBA74 \\uB354 \\uC774\\uD574\\uAC00 \\uC27D\\uB2E4\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://upload.wikimedia.org/wikipedia/commons/9/94/Selection-Sort-Animation.gif\",\n    \"alt\": \"ㅇㄴㅊ\"\n  }))), mdx(\"h3\", null, \"2. \\uC5B4\\uB5BB\\uAC8C \\uCF54\\uB4DC\\uB85C \\uB9CC\\uB4E4\\uAE4C?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB370\\uC774\\uD130\\uAC00 \\uB450 \\uAC1C \\uC77C\\uB54C\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC608: dataList = \", \"[9, 1]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"data\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"list\", \"[0]\", \" > data_list\", \"[1]\", \" \\uC774\\uBBC0\\uB85C data_list\", \"[0]\", \" \\uAC12\\uACFC data\"), \" list\", \"[1]\", \" \\uAC12\\uC744 \\uAD50\\uD658\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB370\\uC774\\uD130\\uAC00 \\uC138 \\uAC1C \\uC77C\\uB54C\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC608: data_list = \", \"[9, 1, 7]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCC98\\uC74C \\uD55C\\uBC88 \\uC2E4\\uD589\\uD558\\uBA74, 1, 9, 7 \\uC774 \\uB428\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB450 \\uBC88\\uC9F8 \\uC2E4\\uD589\\uD558\\uBA74, 1, 7, 9 \\uAC00 \\uB428\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB370\\uC774\\uD130\\uAC00 \\uB124 \\uAC1C \\uC77C\\uB54C\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC608: data_list = \", \"[9, 3, 2, 1]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCC98\\uC74C \\uD55C\\uBC88 \\uC2E4\\uD589\\uD558\\uBA74, 1, 3, 2, 9 \\uAC00 \\uB428\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB450 \\uBC88\\uC9F8 \\uC2E4\\uD589\\uD558\\uBA74, 1, 2, 3, 9 \\uAC00 \\uB428\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC138 \\uBC88\\uC9F8 \\uC2E4\\uD589\\uD558\\uBA74, \\uBCC0\\uD654 \\uC5C6\\uC74C\")))))), mdx(\"h4\", null, \"\\uD504\\uB85C\\uADF8\\uB798\\uBC0D \\uC5F0\\uC2B5\"), mdx(\"p\", null, \"\\uB370\\uC774\\uD130\\uAC00 \\uB450\\uAC1C \\uC77C\\uB54C \\uB3D9\\uC791\\uD558\\uB294 \\uC120\\uD0DD \\uC815\\uB82C \\uC54C\\uACE0\\uB9AC\\uC998\\uC744 \\uD568\\uC218\\uB85C \\uB9CC\\uB4E4\\uC5B4\\uBCF4\\uC138\\uC694  \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uB370\\uC774\\uD130\\uAC00 \\uB450 \\uAC1C \\uC77C\\uB54C\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC608: data_list = \", \"[9, 1]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"data\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"list\", \"[0]\", \" > data_list\", \"[1]\", \" \\uC774\\uBBC0\\uB85C data_list\", \"[0]\", \" \\uAC12\\uACFC data\"), \" list\", \"[1]\", \" \\uAC12\\uC744 \\uAD50\\uD658\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uB370\\uC774\\uD130\\uAC00 \\uC138 \\uAC1C \\uC77C\\uB54C\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC608: data_list = \", \"[9, 1, 7]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCC98\\uC74C \\uD55C\\uBC88 \\uC2E4\\uD589\\uD558\\uBA74, 1, 9, 7 \\uC774 \\uB428\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB450 \\uBC88\\uC9F8 \\uC2E4\\uD589\\uD558\\uBA74, 1, 7, 9 \\uAC00 \\uB428\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uB370\\uC774\\uD130\\uAC00 \\uB124 \\uAC1C \\uC77C\\uB54C\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC608: data_list = \", \"[9, 3, 2, 1]\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCC98\\uC74C \\uD55C\\uBC88 \\uC2E4\\uD589\\uD558\\uBA74, 1, 3, 2, 9 \\uAC00 \\uB428\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB450 \\uBC88\\uC9F8 \\uC2E4\\uD589\\uD558\\uBA74, 1, 2, 3, 9 \\uAC00 \\uB428\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC138 \\uBC88\\uC9F8 \\uC2E4\\uD589\\uD558\\uBA74, \\uBCC0\\uD654 \\uC5C6\\uC74C\")))))), mdx(\"h3\", null, \"3. \\uC54C\\uACE0\\uB9AC\\uC998 \\uAD6C\\uD604\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"for stand in range(len(data_list) - 1) \\uB85C \\uBC18\\uBCF5\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"lowest = stand \\uB85C \\uB193\\uACE0,\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"for num in range(stand, len(data_list)) stand \\uC774\\uD6C4\\uBD80\\uD130 \\uBC18\\uBCF5\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB0B4\\uBD80 \\uBC18\\uBCF5\\uBB38 \\uC548\\uC5D0\\uC11C data_list\", \"[lowest]\", \" > data_list\", \"[num]\", \" \\uC774\\uBA74, \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"lowest = num\"))))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"data_list\", \"[num]\", \", data_list\", \"[lowest]\", \" = data_list\", \"[lowest]\", \", data_list\", \"[num]\", \"   \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"arr = list()\\n\\narr.append(3)\\narr.append(2)\\narr.append(4)\\narr.append(1)\\n\\ndef selectionsort(arr):    \\n    for stand in range(len(arr) - 1):\\n        lowest = stand\\n        # stand + 1\\uBD80\\uD130 \\uC2DC\\uC791\\uD558\\uB294 \\uC774\\uC720\\uB294 0\\uBC88\\uC9F8 \\uBC88\\uD638\\uB97C \\uAE30\\uC900\\uC73C\\uB85C \\uC2DC\\uC791\\uD558\\uBA74 1\\uBC88\\uBD80\\uD130 \\uBE44\\uAD50\\uD574\\uB098\\uAC08 \\uAC83\\uC774\\uAE30 \\uB54C\\uBB38\\n        for index in range(stand + 1, len(arr)):\\n            # \\uBC30\\uC5F4\\uC758 lowest \\uC778\\uB371\\uC2A4\\uAC00 \\uCD5C\\uC18C\\uAC12\\uC774 \\uC544\\uB2C8\\uB77C\\uBA74 lowest\\uC5D0 \\uC778\\uB371\\uC2A4\\uB97C \\uB123\\uC5B4\\uC90C\\n            if arr[lowest] > arr[index]:\\n                lowest = index\\n        arr[stand],arr[lowest] = arr[lowest],arr[stand]\\n        \\nselectionsort(arr)\\n\\narr\\n\\n[1, 2, 3, 4]\\n\")), mdx(\"h3\", null, \"4. \\uC54C\\uACE0\\uB9AC\\uC998 \\uBD84\\uC11D\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC18\\uBCF5\\uBB38\\uC774 \\uB450 \\uAC1C O($n^2$)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2E4\\uC81C\\uB85C \\uC0C1\\uC138\\uD558\\uAC8C \\uACC4\\uC0B0\\uD558\\uBA74, { n * (n - 1)}{ 2 }\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#1-선택-정렬-selection-sort-란","title":"1. 선택 정렬 (selection sort) 란?","items":[{"url":"#직접-눈으로-보면-더-이해가-쉽다","title":"직접 눈으로 보면 더 이해가 쉽다"}]},{"url":"#2-어떻게-코드로-만들까","title":"2. 어떻게 코드로 만들까?","items":[{"url":"#프로그래밍-연습","title":"프로그래밍 연습"}]},{"url":"#3-알고리즘-구현","title":"3. 알고리즘 구현"},{"url":"#4-알고리즘-분석","title":"4. 알고리즘 분석"}]},"parent":{"__typename":"File","relativePath":"datastructure&algorithm/13.SelectionSort.md"},"frontmatter":{"metaTitle":"선택 정렬(Selection Sort)","metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/framework/prisma","title":"Prisma"}}},{"node":{"fields":{"slug":"/datastructure&algorithm","title":"자료구조 & 알고리즘(Datastructure & Algorithm)"}}},{"node":{"fields":{"slug":"/framework","title":"프레임워크(Framework)"}}},{"node":{"fields":{"slug":"/git","title":"깃(Git)"}}},{"node":{"fields":{"slug":"/","title":"SuHyeon's TechBlog"}}},{"node":{"fields":{"slug":"/infra","title":"인프라(Infra)"}}},{"node":{"fields":{"slug":"/library","title":"라이브러리(Library)"}}},{"node":{"fields":{"slug":"/language","title":"언어(Language)"}}},{"node":{"fields":{"slug":"/tdd","title":"테스트 주도 개발(TDD)"}}},{"node":{"fields":{"slug":"/terminology","title":"용어정리(terminology)"}}},{"node":{"fields":{"slug":"/terminology/web","title":"Web"}}},{"node":{"fields":{"slug":"/tdd/2.mocha","title":"Mocha Framework"}}},{"node":{"fields":{"slug":"/tdd/3.chai","title":"Chai Library"}}},{"node":{"fields":{"slug":"/tdd/1.unit-test","title":"유닛 테스트(Unit Test)"}}},{"node":{"fields":{"slug":"/library/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/library/graphql/ApolloGraphQLserver","title":"ApolloGraphQLserver"}}},{"node":{"fields":{"slug":"/library/graphql/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/language/javascript","title":"Javascript"}}},{"node":{"fields":{"slug":"/language/python","title":"Python"}}},{"node":{"fields":{"slug":"/language/python/basic","title":"Basic"}}},{"node":{"fields":{"slug":"/language/typescript","title":"Typescript"}}},{"node":{"fields":{"slug":"/library/nexusjs","title":"Nexus.JS"}}},{"node":{"fields":{"slug":"/language/javascript/class","title":"Class"}}},{"node":{"fields":{"slug":"/language/javascript/executionContext","title":"Execution Context(실행 컨텍스트)"}}},{"node":{"fields":{"slug":"/language/javascript/scope_this","title":"스코프 & 함수 호출 방식에 의해 결정되는 this"}}},{"node":{"fields":{"slug":"/infra/1.BasicTheory","title":"Basic Theory"}}},{"node":{"fields":{"slug":"/infra/2.aws","title":"aws"}}},{"node":{"fields":{"slug":"/infra/3.docker","title":"Docker"}}},{"node":{"fields":{"slug":"/infra/3.docker/docker","title":"Docker"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerawsdeploy","title":"Docker AWS EC2 Deploy"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerbasic","title":"Docker Basic"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Basic","title":"AWS-Basic"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-EC2","title":"AWS-EC2"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-RDS","title":"AWS-RDS"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-S3","title":"AWS-S3"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Route53","title":"AWS-Route 53"}}},{"node":{"fields":{"slug":"/git/changing-default-branch","title":"Changing the Default Branch"}}},{"node":{"fields":{"slug":"/git/configuring-protected-branches","title":"Configure Branch Protection Rule"}}},{"node":{"fields":{"slug":"/git/basic-git-command","title":"Basic git command"}}},{"node":{"fields":{"slug":"/git/gitforksync","title":"git fork & sync"}}},{"node":{"fields":{"slug":"/git/rebase","title":"Rebase"}}},{"node":{"fields":{"slug":"/framework/prisma/NoticePrisma","title":"Notice Prisma"}}},{"node":{"fields":{"slug":"/framework/electron","title":"일렉트론 학습"}}},{"node":{"fields":{"slug":"/framework/prisma/prisma2","title":"Prisma 2"}}},{"node":{"fields":{"slug":"/framework/electron/electronbasic","title":"Electron Basic"}}},{"node":{"fields":{"slug":"/framework/NextJs","title":"Next Js"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/10.SpaceComplexity","title":"공간 복잡도(Space Complexity)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/11.BubbleSort","title":"버블 정렬(Bubble Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/12.InsertionSort","title":"삽입 정렬(Insertion Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/13.SelectionSort","title":"선택 정렬(Selection Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/14.RecursiveCall","title":"재귀 용법(Recursive Call)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/15.DynamicProgramming","title":"동적 계획법과 분할 정복(Dynamic Programming & Divide and conquer"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/16.QuickSort","title":"퀵 정렬(Quick Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/17.MergeSort","title":"병렬 정렬(Merge Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/18.SequentialSearch","title":"순차 탐색(Sequential Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/2.array","title":"배열(Array)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/19.BinarySearch","title":"탐색 알고리즘(Binary Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/20.Graph","title":"그래프(Graph)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/21.Depth-FirstSearch","title":"깊이 우선 탐색(Depth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/22.Breadth-FirstSearch","title":"너비 우선 탐색(Breadth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/23.GreedyAlgorithm","title":"탐욕 알고리즘(Greedy Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/25.MinimumSpanningTree","title":"최소 신장 트리(Minimum Spanning Tree)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/24.DijkstraAlgorithm","title":"다익스트라 알고리즘(Dijkstra Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/26.BackTracking","title":"백트래킹(BackTracking)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/3.queue","title":"큐(Queue)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/4.stack","title":"스택(Stack)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/5.linkedlist","title":"링크드리스트(LinkedList)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/6.TimeComplexity","title":"시간 복잡도(Time Complexity)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/8.Tree","title":"트리(Tree)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/9.Heap","title":"힙(Heap)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/7.HashTable","title":"해쉬 테이블(HashTable)"}}}]}},"pageContext":{"id":"62b8c3ca-cce3-517e-a974-846842c98185"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}