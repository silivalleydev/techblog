{"componentChunkName":"component---src-templates-docs-js","path":"/datastructure&algorithm/26.BackTracking","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"01ec08ff-919d-5520-93e7-c9997316931b","title":"백트래킹(BackTracking)","slug":"/datastructure&algorithm/26.BackTracking"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"백트래킹(BackTracking)\",\n  \"metaTitle\": \"백트래킹(BackTracking)\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\uBC31 \\uD2B8\\uB798\\uD0B9 \\uAE30\\uBC95\\uC758 \\uC774\\uD574\"), mdx(\"h3\", null, \"1. \\uBC31 \\uD2B8\\uB798\\uD0B9 (backtracking)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC31\\uD2B8\\uB798\\uD0B9 (backtracking) \\uB610\\uB294 \\uD1F4\\uAC01 \\uAC80\\uC0C9 (backtrack)\\uC73C\\uB85C \\uBD80\\uB984\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC81C\\uC57D \\uC870\\uAC74 \\uB9CC\\uC871 \\uBB38\\uC81C (Constraint Satisfaction Problem) \\uC5D0\\uC11C \\uD574\\uB97C \\uCC3E\\uAE30 \\uC704\\uD55C \\uC804\\uB7B5\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD574\\uB97C \\uCC3E\\uAE30 \\uC704\\uD574, \\uD6C4\\uBCF4\\uAD70\\uC5D0 \\uC81C\\uC57D \\uC870\\uAC74\\uC744 \\uC810\\uC9C4\\uC801\\uC73C\\uB85C \\uCCB4\\uD06C\\uD558\\uB2E4\\uAC00, \\uD574\\uB2F9 \\uD6C4\\uBCF4\\uAD70\\uC774 \\uC81C\\uC57D \\uC870\\uAC74\\uC744 \\uB9CC\\uC871\\uD560 \\uC218 \\uC5C6\\uB2E4\\uACE0 \\uD310\\uB2E8\\uB418\\uB294 \\uC989\\uC2DC backtrack (\\uB2E4\\uC2DC\\uB294 \\uC774 \\uD6C4\\uBCF4\\uAD70\\uC744 \\uCCB4\\uD06C\\uD558\\uC9C0 \\uC54A\\uC744 \\uAC83\\uC744 \\uD45C\\uAE30)\\uD558\\uACE0, \\uBC14\\uB85C \\uB2E4\\uB978 \\uD6C4\\uBCF4\\uAD70\\uC73C\\uB85C \\uB118\\uC5B4\\uAC00\\uBA70, \\uACB0\\uAD6D \\uCD5C\\uC801\\uC758 \\uD574\\uB97C \\uCC3E\\uB294 \\uBC29\\uBC95\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2E4\\uC81C \\uAD6C\\uD604\\uC2DC, \\uACE0\\uB824\\uD560 \\uC218 \\uC788\\uB294 \\uBAA8\\uB4E0 \\uACBD\\uC6B0\\uC758 \\uC218 (\\uD6C4\\uBCF4\\uAD70)\\uB97C \\uC0C1\\uD0DC\\uACF5\\uAC04\\uD2B8\\uB9AC(State Space Tree)\\uB97C \\uD1B5\\uD574 \\uD45C\\uD604\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC01 \\uD6C4\\uBCF4\\uAD70\\uC744 DFS \\uBC29\\uC2DD\\uC73C\\uB85C \\uD655\\uC778\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC0C1\\uD0DC \\uACF5\\uAC04 \\uD2B8\\uB9AC\\uB97C \\uD0D0\\uC0C9\\uD558\\uBA74\\uC11C, \\uC81C\\uC57D\\uC774 \\uB9DE\\uC9C0 \\uC54A\\uC73C\\uBA74 \\uD574\\uC758 \\uD6C4\\uBCF4\\uAC00 \\uB420\\uB9CC\\uD55C \\uACF3\\uC73C\\uB85C \\uBC14\\uB85C \\uB118\\uC5B4\\uAC00\\uC11C \\uD0D0\\uC0C9\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Promising: \\uD574\\uB2F9 \\uB8E8\\uD2B8\\uAC00 \\uC870\\uAC74\\uC5D0 \\uB9DE\\uB294\\uC9C0\\uB97C \\uAC80\\uC0AC\\uD558\\uB294 \\uAE30\\uBC95\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pruning (\\uAC00\\uC9C0\\uCE58\\uAE30): \\uC870\\uAC74\\uC5D0 \\uB9DE\\uC9C0 \\uC54A\\uC73C\\uBA74 \\uD3EC\\uAE30\\uD558\\uACE0 \\uB2E4\\uB978 \\uB8E8\\uD2B8\\uB85C \\uBC14\\uB85C \\uB3CC\\uC544\\uC11C\\uC11C, \\uD0D0\\uC0C9\\uC758 \\uC2DC\\uAC04\\uC744 \\uC808\\uC57D\\uD558\\uB294 \\uAE30\\uBC95\")))))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uC989, \\uBC31\\uD2B8\\uB798\\uD0B9\\uC740 \\uD2B8\\uB9AC \\uAD6C\\uC870\\uB97C \\uAE30\\uBC18\\uC73C\\uB85C DFS\\uB85C \\uAE4A\\uC774 \\uD0D0\\uC0C9\\uC744 \\uC9C4\\uD589\\uD558\\uBA74\\uC11C \\uAC01 \\uB8E8\\uD2B8\\uC5D0 \\uB300\\uD574 \\uC870\\uAC74\\uC5D0 \\uBD80\\uD569\\uD558\\uB294\\uC9C0 \\uCCB4\\uD06C(Promising), \\uB9CC\\uC57D \\uD574\\uB2F9 \\uD2B8\\uB9AC(\\uB098\\uBB34)\\uC5D0\\uC11C \\uC870\\uAC74\\uC5D0 \\uB9DE\\uC9C0\\uC54A\\uB294 \\uB178\\uB4DC\\uB294 \\uB354 \\uC774\\uC0C1 DFS\\uB85C \\uAE4A\\uC774 \\uD0D0\\uC0C9\\uC744 \\uC9C4\\uD589\\uD558\\uC9C0 \\uC54A\\uACE0, \\uAC00\\uC9C0\\uB97C \\uCCD0\\uBC84\\uB9BC (Pruning)\")), mdx(\"h3\", null, \"\\uC0C1\\uD0DC \\uACF5\\uAC04 \\uD2B8\\uB9AC (State Space Tree)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBB38\\uC81C \\uD574\\uACB0 \\uACFC\\uC815\\uC758 \\uC911\\uAC04 \\uC0C1\\uD0DC\\uB97C \\uAC01\\uAC01\\uC758 \\uB178\\uB4DC\\uB85C \\uB098\\uD0C0\\uB0B8 \\uD2B8\\uB9AC\\n\", mdx(\"img\", _extends({\n    parentName: \"li\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/statespacetree.png\",\n    \"alt\": \"ㄴㅇㅊ\"\n  })))), mdx(\"h3\", null, \"2. N Queen \\uBB38\\uC81C \\uC774\\uD574\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB300\\uD45C\\uC801\\uC778 \\uBC31\\uD2B8\\uB798\\uD0B9 \\uBB38\\uC81C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NxN \\uD06C\\uAE30\\uC758 \\uCCB4\\uC2A4\\uD310\\uC5D0 N\\uAC1C\\uC758 \\uD038\\uC744 \\uC11C\\uB85C \\uACF5\\uACA9\\uD560 \\uC218 \\uC5C6\\uB3C4\\uB85D \\uBC30\\uCE58\\uD558\\uB294 \\uBB38\\uC81C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD038\\uC740 \\uB2E4\\uC74C\\uACFC \\uAC19\\uC774 \\uC774\\uB3D9\\uD560 \\uC218 \\uC788\\uC73C\\uBBC0\\uB85C, \\uBC30\\uCE58\\uB41C \\uD038 \\uAC04\\uC5D0 \\uACF5\\uACA9\\uD560 \\uC218 \\uC5C6\\uB294 \\uC704\\uCE58\\uB85C \\uBC30\\uCE58\\uD574\\uC57C \\uD568\\n\", mdx(\"img\", _extends({\n    parentName: \"li\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/queen_move.png\",\n    \"alt\": \"cs\"\n  })))), mdx(\"h3\", null, \"Pruning (\\uAC00\\uC9C0\\uCE58\\uAE30) for N Queen \\uBB38\\uC81C\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD55C \\uD589\\uC5D0\\uB294 \\uD558\\uB098\\uC758 \\uD038 \\uBC16\\uC5D0 \\uC704\\uCE58\\uD560 \\uC218 \\uC5C6\\uC74C (\\uD038\\uC740 \\uC218\\uD3C9 \\uC774\\uB3D9\\uC774 \\uAC00\\uB2A5\\uD558\\uBBC0\\uB85C)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB9E8 \\uC704\\uC5D0 \\uC788\\uB294 \\uD589\\uBD80\\uD130 \\uD038\\uC744 \\uBC30\\uCE58\\uD558\\uACE0, \\uB2E4\\uC74C \\uD589\\uC5D0 \\uD574\\uB2F9 \\uD038\\uC774 \\uC774\\uB3D9\\uD560 \\uC218 \\uC5C6\\uB294 \\uC704\\uCE58\\uB97C \\uCC3E\\uC544 \\uD038\\uC744 \\uBC30\\uCE58\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB9CC\\uC57D \\uC55E\\uC120 \\uD589\\uC5D0 \\uBC30\\uCE58\\uD55C \\uD038\\uC73C\\uB85C \\uC778\\uD574, \\uB2E4\\uC74C \\uD589\\uC5D0 \\uD574\\uB2F9 \\uD038\\uB4E4\\uC774 \\uC774\\uB3D9\\uD560 \\uC218 \\uC5C6\\uB294 \\uC704\\uCE58\\uAC00 \\uC5C6\\uC744 \\uACBD\\uC6B0\\uC5D0\\uB294, \\uB354 \\uC774\\uC0C1 \\uD038\\uC744 \\uBC30\\uCE58\\uD558\\uC9C0 \\uC54A\\uACE0, \\uC774\\uC804 \\uD589\\uC758 \\uD038\\uC758 \\uBC30\\uCE58\\uB97C \\uBC14\\uAFC8\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC989, \\uB9E8 \\uC704\\uC758 \\uD589\\uBD80\\uD130 \\uC804\\uCCB4 \\uD589\\uAE4C\\uC9C0 \\uD038\\uC758 \\uBC30\\uCE58\\uAC00 \\uAC00\\uB2A5\\uD55C \\uACBD\\uC6B0\\uC758 \\uC218\\uB97C \\uC0C1\\uD0DC \\uACF5\\uAC04 \\uD2B8\\uB9AC \\uD615\\uD0DC\\uB85C \\uB9CC\\uB4E0 \\uD6C4, \\uAC01 \\uACBD\\uC6B0\\uB97C \\uB9E8 \\uC704\\uC758 \\uD589\\uBD80\\uD130 DFS \\uBC29\\uC2DD\\uC73C\\uB85C \\uC811\\uADFC, \\uD574\\uB2F9 \\uACBD\\uC6B0\\uAC00 \\uC9C4\\uD589\\uC774 \\uC5B4\\uB824\\uC6B8 \\uACBD\\uC6B0, \\uB354 \\uC774\\uC0C1 \\uC9C4\\uD589\\uD558\\uC9C0 \\uC54A\\uACE0, \\uB2E4\\uB978 \\uACBD\\uC6B0\\uB97C \\uCCB4\\uD06C\\uD558\\uB294 \\uBC29\\uC2DD\\n\", mdx(\"img\", _extends({\n    parentName: \"li\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/backtracking.png\",\n    \"alt\": \"csd\"\n  })))))), mdx(\"h3\", null, \"Promising for N Queen \\uBB38\\uC81C\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD574\\uB2F9 \\uB8E8\\uD2B8\\uAC00 \\uC870\\uAC74\\uC5D0 \\uB9DE\\uB294\\uC9C0\\uB97C \\uAC80\\uC0AC\\uD558\\uB294 \\uAE30\\uBC95\\uC744 \\uD65C\\uC6A9\\uD558\\uC5EC,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD604\\uC7AC\\uAE4C\\uC9C0 \\uC55E\\uC120 \\uD589\\uC5D0\\uC11C \\uBC30\\uCE58\\uD55C \\uD038\\uC774 \\uC774\\uB3D9\\uD560 \\uC218 \\uC5C6\\uB294 \\uC704\\uCE58\\uAC00 \\uC788\\uB294\\uC9C0\\uB97C \\uB2E4\\uC74C\\uACFC \\uAC19\\uC740 \\uC870\\uAC74\\uC73C\\uB85C \\uD655\\uC778\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD55C \\uD589\\uC5D0 \\uC5B4\\uCC28\\uD53C \\uD558\\uB098\\uC758 \\uD038\\uB9CC \\uBC30\\uCE58 \\uAC00\\uB2A5\\uD558\\uBBC0\\uB85C \\uC218\\uD3C9 \\uCCB4\\uD06C\\uB294 \\uBCC4\\uB3C4\\uB85C \\uD544\\uC694\\uD558\\uC9C0 \\uC54A\\uC74C\\n\", mdx(\"img\", _extends({\n    parentName: \"li\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/nqueen.png\",\n    \"alt\": \"cds\"\n  })))))), mdx(\"h3\", null, \"3. N Queen \\uBB38\\uC81C \\uD30C\\uC774\\uC36C \\uCF54\\uB4DC \\uC791\\uC131\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"def is_available(candidate, current_col):\\n    current_row = len(candidate)\\n    for queen_row in range(current_row):    \\n        if candidate[queen_row] == current_col or abs(candidate[queen_row] - current_col) == current_row - queen_row:\\n            return False\\n    return True\\n\\n\\ndef DFS(N, current_row, current_candidate, final_result):\\n    if current_row == N:\\n        final_result.append(current_candidate[:])\\n        return\\n    \\n    for candidate_col in range(N):\\n        if is_available(current_candidate, candidate_col):\\n            current_candidate.append(candidate_col)\\n            DFS(N, current_row + 1, current_candidate, final_result)\\n            current_candidate.pop()\\n\\n\\ndef solve_n_queens(N):\\n    final_result = []\\n    DFS(N, 0, [], final_result)\\n    return final_result\\n\\nsolve_n_queens(4)\\n\\n[[1, 3, 0, 2], [2, 0, 3, 1]]\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#백-트래킹-기법의-이해","title":"백 트래킹 기법의 이해","items":[{"url":"#1-백-트래킹-backtracking","title":"1. 백 트래킹 (backtracking)"},{"url":"#상태-공간-트리-state-space-tree","title":"상태 공간 트리 (State Space Tree)"},{"url":"#2-n-queen-문제-이해","title":"2. N Queen 문제 이해"},{"url":"#pruning-가지치기-for-n-queen-문제","title":"Pruning (가지치기) for N Queen 문제"},{"url":"#promising-for-n-queen-문제","title":"Promising for N Queen 문제"},{"url":"#3-n-queen-문제-파이썬-코드-작성","title":"3. N Queen 문제 파이썬 코드 작성"}]}]},"parent":{"relativePath":"datastructure&algorithm/26.BackTracking.md"},"frontmatter":{"metaTitle":"백트래킹(BackTracking)","metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/framework/prisma","title":"Prisma"}}},{"node":{"fields":{"slug":"/datastructure&algorithm","title":"자료구조 & 알고리즘(Datastructure & Algorithm)"}}},{"node":{"fields":{"slug":"/git","title":"깃(Git)"}}},{"node":{"fields":{"slug":"/infra","title":"인프라(Infra)"}}},{"node":{"fields":{"slug":"/framework","title":"프레임워크(Framework)"}}},{"node":{"fields":{"slug":"/","title":"SuHyeon's TechBlog"}}},{"node":{"fields":{"slug":"/language","title":"언어(Language)"}}},{"node":{"fields":{"slug":"/library","title":"라이브러리(Library)"}}},{"node":{"fields":{"slug":"/terminology","title":"용어정리(terminology)"}}},{"node":{"fields":{"slug":"/tdd","title":"테스트 주도 개발(TDD)"}}},{"node":{"fields":{"slug":"/library/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/tdd/2.mocha","title":"Mocha Framework"}}},{"node":{"fields":{"slug":"/tdd/3.chai","title":"Chai Library"}}},{"node":{"fields":{"slug":"/tdd/1.unit-test","title":"유닛 테스트(Unit Test)"}}},{"node":{"fields":{"slug":"/library/nexusjs","title":"Nexus.JS"}}},{"node":{"fields":{"slug":"/language/javascript","title":"Javascript"}}},{"node":{"fields":{"slug":"/language/python","title":"Python"}}},{"node":{"fields":{"slug":"/language/typescript","title":"Typescript"}}},{"node":{"fields":{"slug":"/infra/3.docker","title":"Docker"}}},{"node":{"fields":{"slug":"/infra/2.aws","title":"aws"}}},{"node":{"fields":{"slug":"/git/changing-default-branch","title":"Changing the Default Branch"}}},{"node":{"fields":{"slug":"/git/basic-git-command","title":"Basic git command"}}},{"node":{"fields":{"slug":"/git/gitforksync","title":"git fork & sync"}}},{"node":{"fields":{"slug":"/git/configuring-protected-branches","title":"Configure Branch Protection Rule"}}},{"node":{"fields":{"slug":"/infra/1.BasicTheory","title":"Basic Theory"}}},{"node":{"fields":{"slug":"/git/rebase","title":"Rebase"}}},{"node":{"fields":{"slug":"/library/graphql/ApolloGraphQLserver","title":"ApolloGraphQLserver"}}},{"node":{"fields":{"slug":"/library/graphql/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/language/python/basic","title":"Basic"}}},{"node":{"fields":{"slug":"/language/javascript/class","title":"Class"}}},{"node":{"fields":{"slug":"/framework/electron","title":"일렉트론 학습"}}},{"node":{"fields":{"slug":"/framework/NextJs","title":"Next Js"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerawsdeploy","title":"Docker AWS EC2 Deploy"}}},{"node":{"fields":{"slug":"/infra/3.docker/docker","title":"Docker"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerbasic","title":"Docker Basic"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Basic","title":"AWS-Basic"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-RDS","title":"AWS-RDS"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-EC2","title":"AWS-EC2"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Route53","title":"AWS-Route 53"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-S3","title":"AWS-S3"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/10.SpaceComplexity","title":"공간 복잡도(Space Complexity)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/11.BubbleSort","title":"버블 정렬(Bubble Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/12.InsertionSort","title":"삽입 정렬(Insertion Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/15.DynamicProgramming","title":"동적 계획법과 분할 정복(Dynamic Programming & Divide and conquer"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/13.SelectionSort","title":"선택 정렬(Selection Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/14.RecursiveCall","title":"재귀 용법(Recursive Call)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/16.QuickSort","title":"퀵 정렬(Quick Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/17.MergeSort","title":"병렬 정렬(Merge Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/18.SequentialSearch","title":"순차 탐색(Sequential Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/19.BinarySearch","title":"탐색 알고리즘(Binary Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/20.Graph","title":"그래프(Graph)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/2.array","title":"배열(Array)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/23.GreedyAlgorithm","title":"탐욕 알고리즘(Greedy Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/22.Breadth-FirstSearch","title":"너비 우선 탐색(Breadth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/24.DijkstraAlgorithm","title":"다익스트라 알고리즘(Dijkstra Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/3.queue","title":"큐(Queue)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/21.Depth-FirstSearch","title":"깊이 우선 탐색(Depth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/25.MinimumSpanningTree","title":"최소 신장 트리(Minimum Spanning Tree)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/26.BackTracking","title":"백트래킹(BackTracking)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/4.stack","title":"스택(Stack)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/6.TimeComplexity","title":"시간 복잡도(Time Complexity)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/5.linkedlist","title":"링크드리스트(LinkedList)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/7.HashTable","title":"해쉬 테이블(HashTable)"}}},{"node":{"fields":{"slug":"/framework/prisma/NoticePrisma","title":"Notice Prisma"}}},{"node":{"fields":{"slug":"/framework/prisma/prisma2","title":"Prisma 2"}}},{"node":{"fields":{"slug":"/framework/electron/electronbasic","title":"Electron Basic"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/9.Heap","title":"힙(Heap)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/8.Tree","title":"트리(Tree)"}}},{"node":{"fields":{"slug":"/terminology/web","title":"Web"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"01ec08ff-919d-5520-93e7-c9997316931b"}}}