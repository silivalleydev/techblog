{"componentChunkName":"component---src-templates-docs-js","path":"/datastructure&algorithm/7.HashTable","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"2c260355-919e-5823-9739-1ee01853c478","title":"해쉬 테이블","slug":"/datastructure&algorithm/7.HashTable"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"해쉬 테이블\",\n  \"metaTitle\": \"해쉬 테이블\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\uB300\\uD45C\\uC801\\uC778 \\uB370\\uC774\\uD130 \\uAD6C\\uC8706: \\uD574\\uC26C \\uD14C\\uC774\\uBE14 (Hash Table)\"), mdx(\"h3\", null, \"1. \\uD574\\uC26C \\uAD6C\\uC870\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Hash Table: \\uD0A4(Key)\\uC5D0 \\uB370\\uC774\\uD130(Value)\\uB97C \\uC800\\uC7A5\\uD558\\uB294 \\uB370\\uC774\\uD130 \\uAD6C\\uC870\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Key\\uB97C \\uD1B5\\uD574 \\uBC14\\uB85C \\uB370\\uC774\\uD130\\uB97C \\uBC1B\\uC544\\uC62C \\uC218 \\uC788\\uC73C\\uBBC0\\uB85C, \\uC18D\\uB3C4\\uAC00 \\uD68D\\uAE30\\uC801\\uC73C\\uB85C \\uBE68\\uB77C\\uC9D0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD30C\\uC774\\uC36C \\uB515\\uC154\\uB108\\uB9AC(Dictionary) \\uD0C0\\uC785\\uC774 \\uD574\\uC26C \\uD14C\\uC774\\uBE14\\uC758 \\uC608: Key\\uB97C \\uAC00\\uC9C0\\uACE0 \\uBC14\\uB85C \\uB370\\uC774\\uD130(Value)\\uB97C \\uAEBC\\uB0C4\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBCF4\\uD1B5 \\uBC30\\uC5F4\\uB85C \\uBBF8\\uB9AC Hash Table\\xA0\\uC0AC\\uC774\\uC988\\uB9CC\\uD07C \\uC0DD\\uC131 \\uD6C4\\uC5D0 \\uC0AC\\uC6A9 (\\uACF5\\uAC04\\uACFC \\uD0D0\\uC0C9 \\uC2DC\\uAC04\\uC744 \\uB9DE\\uBC14\\uAFB8\\uB294 \\uAE30\\uBC95)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB2E8, \\uD30C\\uC774\\uC36C\\uC5D0\\uC11C\\uB294 \\uD574\\uC26C\\uB97C \\uBCC4\\uB3C4 \\uAD6C\\uD604\\uD560 \\uC774\\uC720\\uAC00 \\uC5C6\\uC74C - \\uB515\\uC154\\uB108\\uB9AC \\uD0C0\\uC785\\uC744 \\uC0AC\\uC6A9\\uD558\\uBA74 \\uB428\")), mdx(\"h3\", {\n    parentName: \"li\"\n  }, \"2. \\uC54C\\uC544\\uB458 \\uC6A9\\uC5B4\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD574\\uC26C(Hash): \\uC784\\uC758 \\uAC12\\uC744 \\uACE0\\uC815 \\uAE38\\uC774\\uB85C \\uBCC0\\uD658\\uD558\\uB294 \\uAC83\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD574\\uC26C \\uD14C\\uC774\\uBE14(Hash Table): \\uD0A4 \\uAC12\\uC758 \\uC5F0\\uC0B0\\uC5D0 \\uC758\\uD574 \\uC9C1\\uC811 \\uC811\\uADFC\\uC774 \\uAC00\\uB2A5\\uD55C \\uB370\\uC774\\uD130 \\uAD6C\\uC870\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD574\\uC2F1 \\uD568\\uC218(Hashing Function): Key\\uC5D0 \\uB300\\uD574 \\uC0B0\\uC220 \\uC5F0\\uC0B0\\uC744 \\uC774\\uC6A9\\uD574 \\uB370\\uC774\\uD130 \\uC704\\uCE58\\uB97C \\uCC3E\\uC744 \\uC218 \\uC788\\uB294 \\uD568\\uC218\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD574\\uC26C \\uAC12(Hash Value) \\uB610\\uB294 \\uD574\\uC26C \\uC8FC\\uC18C(Hash Address): Key\\uB97C \\uD574\\uC2F1 \\uD568\\uC218\\uB85C \\uC5F0\\uC0B0\\uD574\\uC11C, \\uD574\\uC26C \\uAC12\\uC744 \\uC54C\\uC544\\uB0B4\\uACE0, \\uC774\\uB97C \\uAE30\\uBC18\\uC73C\\uB85C \\uD574\\uC26C \\uD14C\\uC774\\uBE14\\uC5D0\\uC11C \\uD574\\uB2F9 Key\\uC5D0 \\uB300\\uD55C \\uB370\\uC774\\uD130 \\uC704\\uCE58\\uB97C \\uC77C\\uAD00\\uC131\\uC788\\uAC8C \\uCC3E\\uC744 \\uC218 \\uC788\\uC74C\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC2AC\\uB86F(Slot): \\uD55C \\uAC1C\\uC758 \\uB370\\uC774\\uD130\\uB97C \\uC800\\uC7A5\\uD560 \\uC218 \\uC788\\uB294 \\uACF5\\uAC04\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC800\\uC7A5\\uD560 \\uB370\\uC774\\uD130\\uC5D0 \\uB300\\uD574 Key\\uB97C \\uCD94\\uCD9C\\uD560 \\uC218 \\uC788\\uB294 \\uBCC4\\uB3C4 \\uD568\\uC218\\uB3C4 \\uC874\\uC7AC\\uD560 \\uC218 \\uC788\\uC74C\\n\", mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.fun-coding.org/00_Images/hash.png\",\n    \"alt\": \"ㅊㄴㅇ\"\n  }))))), mdx(\"h3\", null, \"3. \\uAC04\\uB2E8\\uD55C \\uD574\\uC26C \\uC608\"), mdx(\"h4\", null, \"3.1. hash table \\uB9CC\\uB4E4\\uAE30\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCC38\\uACE0: \\uD30C\\uC774\\uC36C list comprehension - \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.fun-coding.org/PL&OOP5-2.html\"\n  }), \"https://www.fun-coding.org/PL&OOP5-2.html\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"hash_table = list([i for i in range(10)])\\nhash_table\\n\\n# [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\\n\")), mdx(\"h4\", null, \"3.2. \\uC774\\uBC88\\uC5D4 \\uCD08\\uAC04\\uB2E8 \\uD574\\uC26C \\uD568\\uC218\\uB97C \\uB9CC\\uB4E4\\uC5B4\\uBD05\\uB2C8\\uB2E4.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB2E4\\uC591\\uD55C \\uD574\\uC26C \\uD568\\uC218 \\uACE0\\uC548 \\uAE30\\uBC95\\uC774 \\uC788\\uC73C\\uBA70, \\uAC00\\uC7A5 \\uAC04\\uB2E8\\uD55C \\uBC29\\uC2DD\\uC774 Division \\uBC95 (\\uB098\\uB204\\uAE30\\uB97C \\uD1B5\\uD55C \\uB098\\uBA38\\uC9C0 \\uAC12\\uC744 \\uC0AC\\uC6A9\\uD558\\uB294 \\uAE30\\uBC95)\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"def hash_func(key):\\n    return key % 5\\n\")), mdx(\"h4\", null, \"3.3. \\uD574\\uC26C \\uD14C\\uC774\\uBE14\\uC5D0 \\uC800\\uC7A5\\uD574\\uBCF4\\uACA0\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB370\\uC774\\uD130\\uC5D0 \\uB530\\uB77C \\uD544\\uC694\\uC2DC key \\uC0DD\\uC131 \\uBC29\\uBC95 \\uC815\\uC758\\uAC00 \\uD544\\uC694\\uD568\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"data1 = 'Andy'\\ndata2 = 'Dave'\\ndata3 = 'Trump'\\ndata4 = 'Anthor'\\n## ord(): \\uBB38\\uC790\\uC758 ASCII(\\uC544\\uC2A4\\uD0A4)\\uCF54\\uB4DC \\uB9AC\\uD134\\nprint (ord(data1[0]), ord(data2[0]), ord(data3[0]))\\nprint (ord(data1[0]), hash_func(ord(data1[0])))\\nprint (ord(data1[0]), ord(data4[0]))\\n\\n65 68 84\\n65 0\\n65 65\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"3.3.2. \\uD574\\uC26C \\uD14C\\uC774\\uBE14\\uC5D0 \\uAC12 \\uC800\\uC7A5 \\uC608\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"data:value \\uC640 \\uAC19\\uC774 data \\uC640 value\\uB97C \\uB123\\uC73C\\uBA74, \\uD574\\uB2F9 data\\uC5D0 \\uB300\\uD55C key\\uB97C \\uCC3E\\uC544\\uC11C, \\uD574\\uB2F9 key\\uC5D0 \\uB300\\uC751\\uD558\\uB294 \\uD574\\uC26C\\uC8FC\\uC18C\\uC5D0 value\\uB97C \\uC800\\uC7A5\\uD558\\uB294 \\uC608\")))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"def storage_data(data, value):\\n    key = ord(data[0])\\n    hash_address = hash_func(key)\\n    hash_table[hash_address] = value\\n\")), mdx(\"h4\", null, \"3.4. \\uD574\\uC26C \\uD14C\\uC774\\uBE14\\uC5D0\\uC11C \\uD2B9\\uC815 \\uC8FC\\uC18C\\uC758 \\uB370\\uC774\\uD130\\uB97C \\uAC00\\uC838\\uC624\\uB294 \\uD568\\uC218\\uB3C4 \\uB9CC\\uB4E4\\uC5B4\\uBD05\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"storage_data('Andy', '01055553333')\\nstorage_data('Dave', '01044443333')\\nstorage_data('Trump', '01022223333')\\n\")), mdx(\"h4\", null, \"3.5. \\uC2E4\\uC81C \\uB370\\uC774\\uD130\\uB97C \\uC800\\uC7A5\\uD558\\uACE0, \\uC77D\\uC5B4\\uBCF4\\uACA0\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"def get_data(data):\\n    key = ord(data[0])\\n    hash_address = hash_func(key)\\n    return hash_table[hash_address]\\n\\nget_data('Andy')\\n\\n# '01055553333'\\n\")), mdx(\"h3\", null, \"4. \\uC790\\uB8CC \\uAD6C\\uC870 \\uD574\\uC26C \\uD14C\\uC774\\uBE14\\uC758 \\uC7A5\\uB2E8\\uC810\\uACFC \\uC8FC\\uC694 \\uC6A9\\uB3C4\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC7A5\\uC810\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB370\\uC774\\uD130 \\uC800\\uC7A5/\\uC77D\\uAE30 \\uC18D\\uB3C4\\uAC00 \\uBE60\\uB974\\uB2E4. (\\uAC80\\uC0C9 \\uC18D\\uB3C4\\uAC00 \\uBE60\\uB974\\uB2E4.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD574\\uC26C\\uB294 \\uD0A4\\uC5D0 \\uB300\\uD55C \\uB370\\uC774\\uD130\\uAC00 \\uC788\\uB294\\uC9C0(\\uC911\\uBCF5) \\uD655\\uC778\\uC774 \\uC26C\\uC6C0\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB2E8\\uC810 \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC77C\\uBC18\\uC801\\uC73C\\uB85C \\uC800\\uC7A5\\uACF5\\uAC04\\uC774 \\uC880\\uB354 \\uB9CE\\uC774 \\uD544\\uC694\\uD558\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\\uC5EC\\uB7EC \\uD0A4\\uC5D0 \\uD574\\uB2F9\\uD558\\uB294 \\uC8FC\\uC18C\\uAC00 \\uB3D9\\uC77C\\uD560 \\uACBD\\uC6B0 \\uCDA9\\uB3CC\\uC744 \\uD574\\uACB0\\uD558\\uAE30 \\uC704\\uD55C \\uBCC4\\uB3C4 \\uC790\\uB8CC\\uAD6C\\uC870\\uAC00 \\uD544\\uC694\\uD568\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC8FC\\uC694 \\uC6A9\\uB3C4\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC80\\uC0C9\\uC774 \\uB9CE\\uC774 \\uD544\\uC694\\uD55C \\uACBD\\uC6B0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC800\\uC7A5, \\uC0AD\\uC81C, \\uC77D\\uAE30\\uAC00 \\uBE48\\uBC88\\uD55C \\uACBD\\uC6B0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCE90\\uC26C \\uAD6C\\uD604\\uC2DC (\\uC911\\uBCF5 \\uD655\\uC778\\uC774 \\uC27D\\uAE30 \\uB54C\\uBB38)\")))), mdx(\"h3\", null, \"5. \\uD504\\uB85C\\uADF8\\uB798\\uBC0D \\uC5F0\\uC2B5\"), mdx(\"p\", null, \"\\uC5F0\\uC2B51: \\uB9AC\\uC2A4\\uD2B8 \\uBCC0\\uC218\\uB97C \\uD65C\\uC6A9\\uD574\\uC11C \\uD574\\uC26C \\uD14C\\uC774\\uBE14 \\uAD6C\\uD604\\uD574\\uBCF4\\uAE30  \"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uD574\\uC26C \\uD568\\uC218: key % 8\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uD574\\uC26C \\uD0A4 \\uC0DD\\uC131: hash(data)\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"hash_table = list([0 for i in range(8)])\\n\\ndef get_key(data):\\n    return hash(data)\\n\\ndef hash_function(key):\\n    return key % 8\\n\\ndef save_data(data, value):\\n    hash_address = hash_function(get_key(data))\\n    hash_table[hash_address] = value\\n    \\ndef read_data(data):\\n    hash_address = hash_function(get_key(data))\\n    return hash_table[hash_address]\\n\\n\\nsave_data('Dave', '0102030200')\\nsave_data('Andy', '01033232200')\\nread_data('Dave')\\n\\n# '0102030200'\\n\\nhash_table\\n\\n# ['0102030200', 0, 0, 0, 0, 0, 0, '01033232200']\\n\\n\")), mdx(\"h3\", null, \"6. \\uCDA9\\uB3CC(Collision) \\uD574\\uACB0 \\uC54C\\uACE0\\uB9AC\\uC998 (\\uC88B\\uC740 \\uD574\\uC26C \\uD568\\uC218 \\uC0AC\\uC6A9\\uD558\\uAE30)\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uD574\\uC26C \\uD14C\\uC774\\uBE14\\uC758 \\uAC00\\uC7A5 \\uD070 \\uBB38\\uC81C\\uB294 \\uCDA9\\uB3CC(Collision)\\uC758 \\uACBD\\uC6B0\\uC785\\uB2C8\\uB2E4.\\n\\uC774 \\uBB38\\uC81C\\uB97C \\uCDA9\\uB3CC(Collision) \\uB610\\uB294 \\uD574\\uC26C \\uCDA9\\uB3CC(Hash Collision)\\uC774\\uB77C\\uACE0 \\uBD80\\uB985\\uB2C8\\uB2E4.\")), mdx(\"h4\", null, \"6.1. Chaining \\uAE30\\uBC95\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\\uAC1C\\uBC29 \\uD574\\uC281 \\uB610\\uB294 Open Hashing \\uAE30\\uBC95\"), \" \\uC911 \\uD558\\uB098: \\uD574\\uC26C \\uD14C\\uC774\\uBE14 \\uC800\\uC7A5\\uACF5\\uAC04 \\uC678\\uC758 \\uACF5\\uAC04\\uC744 \\uD65C\\uC6A9\\uD558\\uB294 \\uAE30\\uBC95\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCDA9\\uB3CC\\uC774 \\uC77C\\uC5B4\\uB098\\uBA74, \\uB9C1\\uD06C\\uB4DC \\uB9AC\\uC2A4\\uD2B8\\uB77C\\uB294 \\uC790\\uB8CC \\uAD6C\\uC870\\uB97C \\uC0AC\\uC6A9\\uD574\\uC11C, \\uB9C1\\uD06C\\uB4DC \\uB9AC\\uC2A4\\uD2B8\\uB85C \\uB370\\uC774\\uD130\\uB97C \\uCD94\\uAC00\\uB85C \\uB4A4\\uC5D0 \\uC5F0\\uACB0\\uC2DC\\uCF1C\\uC11C \\uC800\\uC7A5\\uD558\\uB294 \\uAE30\\uBC95  \")), mdx(\"p\", null, \"\\uC5F0\\uC2B52: \\uC5F0\\uC2B51\\uC758 \\uD574\\uC26C \\uD14C\\uC774\\uBE14 \\uCF54\\uB4DC\\uC5D0 Chaining \\uAE30\\uBC95\\uC73C\\uB85C \\uCDA9\\uB3CC\\uD574\\uACB0 \\uCF54\\uB4DC\\uB97C \\uCD94\\uAC00\\uD574\\uBCF4\\uAE30\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uD574\\uC26C \\uD568\\uC218: key % 8\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uD574\\uC26C \\uD0A4 \\uC0DD\\uC131: hash(data)\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"hash_table = list([0 for i in range(8)])\\n\\ndef get_key(data):\\n    return hash(data)\\n\\ndef hash_function(key):\\n    return key % 8\\n\\ndef save_data(data, value):\\n    index_key = get_key(data)\\n    hash_address = hash_function(index_key)\\n    if hash_table[hash_address] != 0:\\n        for index in range(len(hash_table[hash_address])):\\n            if hash_table[hash_address][index][0] == index_key:\\n                hash_table[hash_address][index][1] = value\\n                return\\n        hash_table[hash_address].append([index_key, value])\\n    else:\\n        hash_table[hash_address] = [[index_key, value]]\\n    \\ndef read_data(data):\\n    index_key = get_key(data)\\n    hash_address = hash_function(index_key)\\n\\n    if hash_table[hash_address] != 0:\\n        for index in range(len(hash_table[hash_address])):\\n            if hash_table[hash_address][index][0] == index_key:\\n                return hash_table[hash_address][index][1]\\n        return None\\n    else:\\n        return None\\n\\nprint (hash('Dave') % 8)\\nprint (hash('Dd') % 8)\\nprint (hash('Data') % 8)\\n\\n0\\n2\\n2\\n\\nsave_data('Dd', '1201023010')\\nsave_data('Data', '3301023010')\\nread_data('Dd')\\n\\n'1201023010'\\n\\nhash_table\\n\\n[0,\\n 0,\\n [[1341610532875195530, '1201023010'], [-9031202661634252870, '3301023010']],\\n 0,\\n 0,\\n 0,\\n 0,\\n 0]\\n\")), mdx(\"h4\", null, \"6.2. Linear Probing \\uAE30\\uBC95\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"\\uD3D0\\uC1C4 \\uD574\\uC281 \\uB610\\uB294 Close Hashing \\uAE30\\uBC95\"), \" \\uC911 \\uD558\\uB098: \\uD574\\uC26C \\uD14C\\uC774\\uBE14 \\uC800\\uC7A5\\uACF5\\uAC04 \\uC548\\uC5D0\\uC11C \\uCDA9\\uB3CC \\uBB38\\uC81C\\uB97C \\uD574\\uACB0\\uD558\\uB294 \\uAE30\\uBC95\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCDA9\\uB3CC\\uC774 \\uC77C\\uC5B4\\uB098\\uBA74, \\uD574\\uB2F9 hash address\\uC758 \\uB2E4\\uC74C address\\uBD80\\uD130 \\uB9E8 \\uCC98\\uC74C \\uB098\\uC624\\uB294 \\uBE48\\uACF5\\uAC04\\uC5D0 \\uC800\\uC7A5\\uD558\\uB294 \\uAE30\\uBC95\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC800\\uC7A5\\uACF5\\uAC04 \\uD65C\\uC6A9\\uB3C4\\uB97C \\uB192\\uC774\\uAE30 \\uC704\\uD55C \\uAE30\\uBC95 \")))), mdx(\"p\", null, \"\\uC5F0\\uC2B53: \\uC5F0\\uC2B51\\uC758 \\uD574\\uC26C \\uD14C\\uC774\\uBE14 \\uCF54\\uB4DC\\uC5D0 Linear Probling \\uAE30\\uBC95\\uC73C\\uB85C \\uCDA9\\uB3CC\\uD574\\uACB0 \\uCF54\\uB4DC\\uB97C \\uCD94\\uAC00\\uD574\\uBCF4\\uAE30\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uD574\\uC26C \\uD568\\uC218: key % 8\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uD574\\uC26C \\uD0A4 \\uC0DD\\uC131: hash(data)\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"hash_table = list([0 for i in range(8)])\\n\\ndef get_key(data):\\n    return hash(data)\\n\\ndef hash_function(key):\\n    return key % 8\\n\\ndef save_data(data, value):\\n    index_key = get_key(data)\\n    hash_address = hash_function(index_key)\\n    if hash_table[hash_address] != 0:\\n        for index in range(hash_address, len(hash_table)):\\n            if hash_table[index] == 0:\\n                hash_table[index] = [index_key, value]\\n                return\\n            elif hash_table[index][0] == index_key:\\n                hash_table[index][1] = value\\n                return\\n    else:\\n        hash_table[hash_address] = [index_key, value]\\n\\ndef read_data(data):\\n    index_key = get_key(data)\\n    hash_address = hash_function(index_key)\\n    \\n    if hash_table[hash_address] != 0:\\n        for index in range(hash_address, len(hash_table)):\\n            if hash_table[index] == 0:\\n                return None\\n            elif hash_table[index][0] == index_key:\\n                return hash_table[index][1]\\n    else:\\n        return None\\n\\nprint (hash('dk') % 8)\\nprint (hash('da') % 8)\\nprint (hash('dc') % 8)\\n\\n4\\n4\\n4\\n\\nsave_data('dk', '01200123123')\\nsave_data('da', '3333333333')\\nread_data('dc')\\n\")), mdx(\"h4\", null, \"6.3. \\uBE48\\uBC88\\uD55C \\uCDA9\\uB3CC\\uC744 \\uAC1C\\uC120\\uD558\\uB294 \\uAE30\\uBC95\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD574\\uC26C \\uD568\\uC218\\uC744 \\uC7AC\\uC815\\uC758 \\uBC0F \\uD574\\uC26C \\uD14C\\uC774\\uBE14 \\uC800\\uC7A5\\uACF5\\uAC04\\uC744 \\uD655\\uB300\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC608:\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"hash_table = list([None for i in range(16)])\\n\\ndef hash_function(key):\\n    return key % 16\\n\")), mdx(\"h3\", null, \"\\uCC38\\uACE0: \\uD574\\uC26C \\uD568\\uC218\\uC640 \\uD0A4 \\uC0DD\\uC131 \\uD568\\uC218\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD30C\\uC774\\uC36C\\uC758 hash() \\uD568\\uC218\\uB294 \\uC2E4\\uD589\\uD560 \\uB54C\\uB9C8\\uB2E4, \\uAC12\\uC774 \\uB2EC\\uB77C\\uC9C8 \\uC218 \\uC788\\uC74C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC720\\uBA85\\uD55C \\uD574\\uC26C \\uD568\\uC218\\uB4E4\\uC774 \\uC788\\uC74C: SHA(Secure Hash Algorithm, \\uC548\\uC804\\uD55C \\uD574\\uC2DC \\uC54C\\uACE0\\uB9AC\\uC998)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC5B4\\uB5A4 \\uB370\\uC774\\uD130\\uB3C4 \\uC720\\uC77C\\uD55C \\uACE0\\uC815\\uB41C \\uD06C\\uAE30\\uC758 \\uACE0\\uC815\\uAC12\\uC744 \\uB9AC\\uD134\\uD574\\uC8FC\\uBBC0\\uB85C, \\uD574\\uC26C \\uD568\\uC218\\uB85C \\uC720\\uC6A9\\uD558\\uAC8C \\uD65C\\uC6A9 \\uAC00\\uB2A5\")))), mdx(\"h4\", null, \"SHA-1\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"import hashlib\\n\\ndata = 'test'.encode()\\nhash_object = hashlib.sha1()\\nhash_object.update(data)\\nhex_dig = hash_object.hexdigest()\\nprint (hex_dig)\\n\\na94a8fe5ccb19ba61c4c0873d391e987982fbbd3\\n\")), mdx(\"h4\", null, \"SHA-256\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"import hashlib\\n\\ndata = 'test'.encode()\\nhash_object = hashlib.sha256()\\nhash_object.update(data)\\nhex_dig = hash_object.hexdigest()\\nprint (hex_dig)\\n\\n9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08\\n\")), mdx(\"p\", null, \"\\uC5F0\\uC2B54: \\uC5F0\\uC2B52\\uC758 Chaining \\uAE30\\uBC95\\uC744 \\uC801\\uC6A9\\uD55C \\uD574\\uC26C \\uD14C\\uC774\\uBE14 \\uCF54\\uB4DC\\uC5D0 \\uD0A4 \\uC0DD\\uC131 \\uD568\\uC218\\uB97C sha256 \\uD574\\uC26C \\uC54C\\uACE0\\uB9AC\\uC998\\uC744 \\uC0AC\\uC6A9\\uD558\\uB3C4\\uB85D \\uBCC0\\uACBD\\uD574\\uBCF4\\uAE30  \"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uD574\\uC26C \\uD568\\uC218: key % 8\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\uD574\\uC26C \\uD0A4 \\uC0DD\\uC131: hash(data)\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-py\"\n  }), \"import hashlib\\n\\nhash_table = list([0 for i in range(8)])\\n\\ndef get_key(data):\\n        hash_object = hashlib.sha256()\\n        hash_object.update(data.encode())\\n        hex_dig = hash_object.hexdigest()\\n        return int(hex_dig, 16)\\n\\ndef hash_function(key):\\n    return key % 8\\n\\ndef save_data(data, value):\\n    index_key = get_key(data)\\n    hash_address = hash_function(index_key)\\n    if hash_table[hash_address] != 0:\\n        for index in range(hash_address, len(hash_table)):\\n            if hash_table[index] == 0:\\n                hash_table[index] = [index_key, value]\\n                return\\n            elif hash_table[index][0] == index_key:\\n                hash_table[index][1] = value\\n                return\\n    else:\\n        hash_table[hash_address] = [index_key, value]\\n\\ndef read_data(data):\\n    index_key = get_key(data)\\n    hash_address = hash_function(index_key)\\n    \\n    if hash_table[hash_address] != 0:\\n        for index in range(hash_address, len(hash_table)):\\n            if hash_table[index] == 0:\\n                return None\\n            elif hash_table[index][0] == index_key:\\n                return hash_table[index][1]\\n    else:\\n        return None\\n\\nprint (get_key('db') % 8)\\nprint (get_key('da') % 8)\\nprint (get_key('dh') % 8)\\n\\n1\\n2\\n2\\n\\nsave_data('da', '01200123123')\\nsave_data('dh', '3333333333')\\nread_data('dh')\\n\\n'3333333333'\\n\\n\")), mdx(\"h3\", null, \"7. \\uC2DC\\uAC04 \\uBCF5\\uC7A1\\uB3C4\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC77C\\uBC18\\uC801\\uC778 \\uACBD\\uC6B0(Collision\\uC774 \\uC5C6\\uB294 \\uACBD\\uC6B0)\\uB294 O(1)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCD5C\\uC545\\uC758 \\uACBD\\uC6B0(Collision\\uC774 \\uBAA8\\uB450 \\uBC1C\\uC0DD\\uD558\\uB294 \\uACBD\\uC6B0)\\uB294 O(n)\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uD574\\uC26C \\uD14C\\uC774\\uBE14\\uC758 \\uACBD\\uC6B0, \\uC77C\\uBC18\\uC801\\uC778 \\uACBD\\uC6B0\\uB97C \\uAE30\\uB300\\uD558\\uACE0 \\uB9CC\\uB4E4\\uAE30 \\uB54C\\uBB38\\uC5D0, \\uC2DC\\uAC04 \\uBCF5\\uC7A1\\uB3C4\\uB294 O(1) \\uC774\\uB77C\\uACE0 \\uB9D0\\uD560 \\uC218 \\uC788\\uC74C\")), mdx(\"h3\", null, \"\\uAC80\\uC0C9\\uC5D0\\uC11C \\uD574\\uC26C \\uD14C\\uC774\\uBE14\\uC758 \\uC0AC\\uC6A9 \\uC608\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"16\\uAC1C\\uC758 \\uBC30\\uC5F4\\uC5D0 \\uB370\\uC774\\uD130\\uB97C \\uC800\\uC7A5\\uD558\\uACE0, \\uAC80\\uC0C9\\uD560 \\uB54C O(n)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"16\\uAC1C\\uC758 \\uB370\\uC774\\uD130 \\uC800\\uC7A5\\uACF5\\uAC04\\uC744 \\uAC00\\uC9C4 \\uC704\\uC758 \\uD574\\uC26C \\uD14C\\uC774\\uBE14\\uC5D0 \\uB370\\uC774\\uD130\\uB97C \\uC800\\uC7A5\\uD558\\uACE0, \\uAC80\\uC0C9\\uD560 \\uB54C O(1)\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#대표적인-데이터-구조6-해쉬-테이블-hash-table","title":"대표적인 데이터 구조6: 해쉬 테이블 (Hash Table)","items":[{"url":"#1-해쉬-구조","title":"1. 해쉬 구조"},{"url":"#3-간단한-해쉬-예","title":"3. 간단한 해쉬 예","items":[{"url":"#31-hash-table-만들기","title":"3.1. hash table 만들기"},{"url":"#32-이번엔-초간단-해쉬-함수를-만들어봅니다","title":"3.2. 이번엔 초간단 해쉬 함수를 만들어봅니다."},{"url":"#33-해쉬-테이블에-저장해보겠습니다","title":"3.3. 해쉬 테이블에 저장해보겠습니다."},{"url":"#34-해쉬-테이블에서-특정-주소의-데이터를-가져오는-함수도-만들어봅니다","title":"3.4. 해쉬 테이블에서 특정 주소의 데이터를 가져오는 함수도 만들어봅니다."},{"url":"#35-실제-데이터를-저장하고-읽어보겠습니다","title":"3.5. 실제 데이터를 저장하고, 읽어보겠습니다."}]},{"url":"#4-자료-구조-해쉬-테이블의-장단점과-주요-용도","title":"4. 자료 구조 해쉬 테이블의 장단점과 주요 용도"},{"url":"#5-프로그래밍-연습","title":"5. 프로그래밍 연습"},{"url":"#6-충돌collision-해결-알고리즘-좋은-해쉬-함수-사용하기","title":"6. 충돌(Collision) 해결 알고리즘 (좋은 해쉬 함수 사용하기)","items":[{"url":"#61-chaining-기법","title":"6.1. Chaining 기법"},{"url":"#62-linear-probing-기법","title":"6.2. Linear Probing 기법"},{"url":"#63-빈번한-충돌을-개선하는-기법","title":"6.3. 빈번한 충돌을 개선하는 기법"}]},{"url":"#참고-해쉬-함수와-키-생성-함수","title":"참고: 해쉬 함수와 키 생성 함수","items":[{"url":"#sha-1","title":"SHA-1"},{"url":"#sha-256","title":"SHA-256"}]},{"url":"#7-시간-복잡도","title":"7. 시간 복잡도"},{"url":"#검색에서-해쉬-테이블의-사용-예","title":"검색에서 해쉬 테이블의 사용 예"}]}]},"parent":{"relativePath":"datastructure&algorithm/7.HashTable.md"},"frontmatter":{"metaTitle":"해쉬 테이블","metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/framework/prisma","title":"Prisma"}}},{"node":{"fields":{"slug":"/datastructure&algorithm","title":"자료구조 & 알고리즘"}}},{"node":{"fields":{"slug":"/framework","title":"프레임워크"}}},{"node":{"fields":{"slug":"/","title":"SuHyeon's TechBlog"}}},{"node":{"fields":{"slug":"/language","title":"언어"}}},{"node":{"fields":{"slug":"/infra","title":"인프라"}}},{"node":{"fields":{"slug":"/library","title":"라이브러리"}}},{"node":{"fields":{"slug":"/library/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/language/typescript","title":"Typescript"}}},{"node":{"fields":{"slug":"/library/nexusjs","title":"Nexus.JS"}}},{"node":{"fields":{"slug":"/library/graphql/ApolloGraphQLserver","title":"ApolloGraphQLserver"}}},{"node":{"fields":{"slug":"/library/graphql/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/framework/NextJs","title":"Next Js"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/3.queue","title":"큐(queue)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/4.stack","title":"스택(stack)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/1.datastructure&algorithm-tutorial","title":"자료구조 & 알고리즘 튜토리얼"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/5.linkedlist","title":"링크드리스트(LinkedList)"}}},{"node":{"fields":{"slug":"/framework/prisma/NoticePrisma","title":"Notice Prisma"}}},{"node":{"fields":{"slug":"/framework/prisma/prisma2","title":"Prisma 2"}}},{"node":{"fields":{"slug":"/infra/2.aws","title":"aws"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Basic","title":"AWS-Basic"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-S3","title":"AWS-S3"}}},{"node":{"fields":{"slug":"/infra/3.docker/docker","title":"Docker"}}},{"node":{"fields":{"slug":"/infra/3.docker","title":"Docker"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerbasic","title":"Docker Basic"}}},{"node":{"fields":{"slug":"/infra/1.BasicTheory","title":"Basic Theory"}}},{"node":{"fields":{"slug":"/testframework","title":"테스트 프레임워크"}}},{"node":{"fields":{"slug":"/testframework/1.mocha","title":"Mocha"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerawsdeploy","title":"Docker AWS EC2 Deploy"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-EC2","title":"AWS-EC2"}}},{"node":{"fields":{"slug":"/language/javascript","title":"Javascript"}}},{"node":{"fields":{"slug":"/language/javascript/class","title":"Class"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Route53","title":"AWS-Route 53"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-RDS","title":"AWS-RDS"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/7.HashTable","title":"해쉬 테이블"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/8.Tree","title":"트리"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/9.Heap","title":"힙"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/10.SpaceComplexity","title":"공간 복잡도"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/13.SelectionSort","title":"선택 정렬"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/14.RecursiveCall","title":"재귀 용법"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/15.DynamicProgramming","title":"동적 계획법과 분할 정복"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/16.QuickSort","title":"퀵 정렬"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/17.MergeSort","title":"병렬 정렬"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/18.SequentialSearch","title":"순차 탐색"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/19.BinarySearch","title":"탐색 알고리즘"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/20.Graph","title":"그래프"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/2.array","title":"배열"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/21.Depth-FirstSearch","title":"깊이 우선 탐색"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/22.Breadth-FirstSearch","title":"너비 우선 탐색"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/23.GreedyAlgorithm","title":"탐욕 알고리즘"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/24.DijkstraAlgorithm","title":"다익스트라 알고리즘"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/25.MinimumSpanningTree","title":"최소 신장 트리"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/26.BackTracking","title":"백트래킹"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/6.TimeComplexity","title":"시간 복잡도"}}},{"node":{"fields":{"slug":"/git","title":"깃 허브"}}},{"node":{"fields":{"slug":"/git/gitfork","title":"git fork"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/11.BubbleSort","title":"버블 정렬"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/12.InsertionSort","title":"삽입 정렬"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"2c260355-919e-5823-9739-1ee01853c478"}}}