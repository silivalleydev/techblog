{"componentChunkName":"component---src-templates-docs-js","path":"/tdd/2.mocha","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"51455553-5965-557a-8f00-0aaa7ec43952","title":"Mocha Framework","slug":"/tdd/2.mocha"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Mocha Framework\",\n  \"metaTitle\": \"Mocha Framework\",\n  \"metaDescription\": \"This is the meta description\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\uBAA8\\uCE74(Mocha)\\uB780?\"), mdx(\"p\", null, \"Mocha(\\uBAA8\\uCE74)\\uB294 \\uD14C\\uC2A4\\uD2B8 \\uB7EC\\uB108\\uB97C \\uC9C0\\uC6D0\\uD558\\uB294 \\uD14C\\uC2A4\\uD2B8 \\uD504\\uB808\\uC784\\uC6CC\\uD06C \\uC785\\uB2C8\\uB2E4.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\uC790\\uCCB4 Assertion(\\uC5B4\\uC368\\uC158)\\uC740 \\uC9C0\\uC6D0\\uD558\\uC9C0 \\uC54A\\uC73C\\uBA70, \\uD544\\uC694\\uD55C Assertion \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC\\uB97C \\uAC00\\uC838\\uC640 \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Assertion\\uC740 \\uC5D0\\uB7EC\\uAC00 \\uC5C6\\uB294 \\uD504\\uB85C\\uADF8\\uB7A8\\uC744 \\uC791\\uC131\\uD558\\uAE30 \\uC704\\uD55C \\uD558\\uB098\\uC758 \\uC218\\uBC95\\uC744 \\uC758\\uBBF8\\uD569\\uB2C8\\uB2E4.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Node.js\\uC5D0\\uC11C \\uC9C0\\uC6D0\\uD558\\uB294 Assert \\uBAA8\\uB4C8\\uC744 \\uC0AC\\uC6A9\\uD560 \\uC218\\uB3C4 \\uC788\\uC73C\\uBA70,\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Chai\"), \"\\uB098 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Should.js\"), \" \\uAC19\\uC740 BDD, TDD \\uBC29\\uC2DD\\uC758 \\uB2E4\\uC591\\uD55C Assertion \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC\\uAC00 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"h2\", null, \"\\uBAA8\\uCE74\\uB85C \\uD0C0\\uC785\\uC2A4\\uD06C\\uB9BD\\uD2B8 \\uD14C\\uC2A4\\uD2B8\\uD558\\uAE30\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBA3C\\uC800 \\uAD00\\uB828 Dependencies\\uB97C \\uC124\\uCE58\\uD569\\uB2C8\\uB2E4.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"$ npm install --save-dev mocha @types/mocha chai @types/chai typescript ts-node\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD14C\\uC2A4\\uD2B8\\uB97C \\uC704\\uD574 \\uD14C\\uC2A4\\uD2B8 \\uD074\\uB798\\uC2A4\\uC778 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Calculator.ts\"), \"\\uB97C \\uC791\\uC131\\uD569\\uB2C8\\uB2E4.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"export class Calculator {\\n  add(a: number, b: number): number {\\n    return a + b;\\n  }\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"test\"), \" \\uD3F4\\uB354\\uB97C \\uB8E8\\uD2B8 \\uB514\\uB809\\uD1A0\\uB9AC\\uC5D0 \\uB9CC\\uB4E4\\uACE0 \\uD3F4\\uB354\\uC548\\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Calculator.test.ts\"), \"\\uB97C \\uB9CC\\uB4E4\\uC5B4 \\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uC791\\uC131\\uD569\\uB2C8\\uB2E4.\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"\\uBB38\\uBC95\\uC744 \\uC0B4\\uD3B4\\uBCF4\\uBA74 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"describe()\"), \"\\uB294 \\uD14C\\uC2A4\\uD2B8\\uC758 \\uBC94\\uC704\\uB97C \\uC124\\uC815\\uD558\\uACE0, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"it()\"), \"\\uB294 \\uB2E8\\uC704 \\uD14C\\uC2A4\\uD2B8\\uB97C \\uC124\\uC815\\uD569\\uB2C8\\uB2E4.\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"\\uC778\\uC218\\uB85C \\uC0AC\\uC6A9\\uD55C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"done\"), \"\\uC740 \\uBE44\\uB3D9\\uAE30 \\uB2E8\\uC704 \\uD14C\\uC2A4\\uD2B8\\uB97C \\uC644\\uB8CC\\uD560 \\uB54C \\uC720\\uC6A9\\uD569\\uB2C8\\uB2E4.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"describe('Calculator', () => {\\n  it('nothing', () => {\\n \\n  });\\n});\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"package.json\"), \"\\uC5D0 script\\uB97C \\uCD94\\uAC00\\uD558\\uC5EC \\uD14C\\uC2A4\\uD2B8\\uB97C \\uC9C4\\uD589\\uD574\\uBD05\\uB2C8\\uB2E4.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"{\\n  \\\"scripts\\\": {\\n    \\\"test\\\": \\\"mocha -r node_modules/ts-node/register ./**/**.test.ts\\\"\\n  }\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm run test\"), \"\\uB97C \\uCE58\\uBA74 \\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uACB0\\uACFC\\uAC00 \\uB098\\uC635\\uB2C8\\uB2E4.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"// \\uACB0\\uACFC\\n$ npm run test\\n\\n> mocha -r node_modules/ts-node/register ./**/**.test.ts\\n\\n  Calculator\\n    \\u2713 nothing\\n\\n\\n  1 passing (5ms)\\n\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC774\\uC81C \\uBCF8\\uACA9\\uC801\\uC778 \\uD14C\\uC2A4\\uD2B8\\uB97C \\uC704\\uD574 \\uB2E4\\uC74C\\uACFC \\uAC19\\uC774 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Calculator.test.ts\"), \"\\uB97C \\uC218\\uC815\\uD569\\uB2C8\\uB2E4.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { expect } from 'chai';\\n \\nimport { Calculator } from './Calculator';\\n \\ndescribe('Calculator', () => {\\n  it('should return sum of two number.', () => {\\n    const calculator = new Calculator();\\n    expect(calculator.add(10, 20)).to.equal(20);\\n  });\\n});\\n\")), mdx(\"p\", null, \"\\uC704\\uC758 \\uD14C\\uC2A4\\uD2B8 \\uCF00\\uC774\\uC2A4\\uB294 10+20 = 20\\uC774\\uAE38 \\uAE30\\uB300\\uD558\\uB294 \\uAC83\\uC774\\uB2C8 \\uD14C\\uC2A4\\uD2B8\\uB294 \\uC2E4\\uD328\\uD560 \\uAC83\\uC785\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"$ npm test\\n\\n> mocha -r node_modules/ts-node/register ./**/**.test.ts\\n\\n\\n\\n  Calculator\\n    1) should return sum of two number.\\n\\n  Other\\n    \\u2713 nothing\\n\\n\\n  1 passing (11ms)\\n  1 failing\\n\\n  1) Calculator\\n       should return sum of two number.:\\n\\n      AssertionError: expected 30 to equal 20\\n      + expected - actual\\n\\n      -30\\n      +20\\n      \\n      at Context.<anonymous> (test/Calculator.test.ts:8:39)\\n      at processImmediate (internal/timers.js:456:21)\\n\\n\\n\\nnpm ERR! Test failed.  See above for more details.\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"script\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"\\\"script\\\": env TS_NODE_PROJECT=\\\"tsconfig.testing.json\\\" mocha --exit --require node_modules/ts-node/register --require test/dom-mock.js test/folder/FolderModelTest_J.ts\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tsconfig.testing.json\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"// mocha\\uB294 \\\"commonjs\\\"\\uC5D0\\uC11C\\uB9CC \\uB3D9\\uC791\\uD55C\\uB2E4.\\n{\\n  \\\"compilerOptions\\\": {\\n    \\\"module\\\": \\\"commonjs\\\",\\n    \\\"target\\\": \\\"es5\\\",\\n    \\\"lib\\\": [\\\"es5\\\", \\\"dom\\\"],\\n    \\\"declaration\\\": false,\\n    \\\"noImplicitAny\\\": false,\\n    \\\"removeComments\\\": true,\\n    \\\"inlineSourceMap\\\": true,\\n    \\\"moduleResolution\\\": \\\"node\\\",\\n    \\\"allowJs\\\": true\\n  },\\n  \\\"include\\\": [\\\"./src/**/*\\\"],\\n  \\\"exclude\\\": [\\\"./api.spec.ts\\\"]\\n}\\n\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#모카mocha란","title":"모카(Mocha)란?"},{"url":"#모카로-타입스크립트-테스트하기","title":"모카로 타입스크립트 테스트하기"}]},"parent":{"__typename":"File","relativePath":"tdd/2.mocha.md"},"frontmatter":{"metaTitle":"Mocha Framework","metaDescription":"This is the meta description"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/framework/prisma","title":"Prisma"}}},{"node":{"fields":{"slug":"/datastructure&algorithm","title":"자료구조 & 알고리즘(Datastructure & Algorithm)"}}},{"node":{"fields":{"slug":"/framework","title":"프레임워크(Framework)"}}},{"node":{"fields":{"slug":"/git","title":"깃(Git)"}}},{"node":{"fields":{"slug":"/","title":"SuHyeon's TechBlog"}}},{"node":{"fields":{"slug":"/infra","title":"인프라(Infra)"}}},{"node":{"fields":{"slug":"/library","title":"라이브러리(Library)"}}},{"node":{"fields":{"slug":"/language","title":"언어(Language)"}}},{"node":{"fields":{"slug":"/tdd","title":"테스트 주도 개발(TDD)"}}},{"node":{"fields":{"slug":"/terminology","title":"용어정리(terminology)"}}},{"node":{"fields":{"slug":"/terminology/web","title":"Web"}}},{"node":{"fields":{"slug":"/tdd/2.mocha","title":"Mocha Framework"}}},{"node":{"fields":{"slug":"/tdd/3.chai","title":"Chai Library"}}},{"node":{"fields":{"slug":"/tdd/1.unit-test","title":"유닛 테스트(Unit Test)"}}},{"node":{"fields":{"slug":"/library/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/library/graphql/ApolloGraphQLserver","title":"ApolloGraphQLserver"}}},{"node":{"fields":{"slug":"/library/graphql/graphql","title":"GraphQL"}}},{"node":{"fields":{"slug":"/language/javascript","title":"Javascript"}}},{"node":{"fields":{"slug":"/language/python","title":"Python"}}},{"node":{"fields":{"slug":"/language/python/basic","title":"Basic"}}},{"node":{"fields":{"slug":"/language/typescript","title":"Typescript"}}},{"node":{"fields":{"slug":"/library/nexusjs","title":"Nexus.JS"}}},{"node":{"fields":{"slug":"/language/javascript/class","title":"Class"}}},{"node":{"fields":{"slug":"/language/javascript/executionContext","title":"Execution Context(실행 컨텍스트)"}}},{"node":{"fields":{"slug":"/language/javascript/scope_this","title":"스코프 & 함수 호출 방식에 의해 결정되는 this"}}},{"node":{"fields":{"slug":"/infra/1.BasicTheory","title":"Basic Theory"}}},{"node":{"fields":{"slug":"/infra/2.aws","title":"aws"}}},{"node":{"fields":{"slug":"/infra/3.docker","title":"Docker"}}},{"node":{"fields":{"slug":"/infra/3.docker/docker","title":"Docker"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerawsdeploy","title":"Docker AWS EC2 Deploy"}}},{"node":{"fields":{"slug":"/infra/3.docker/dockerbasic","title":"Docker Basic"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Basic","title":"AWS-Basic"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-EC2","title":"AWS-EC2"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-RDS","title":"AWS-RDS"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-S3","title":"AWS-S3"}}},{"node":{"fields":{"slug":"/infra/2.aws/AWS-Route53","title":"AWS-Route 53"}}},{"node":{"fields":{"slug":"/git/changing-default-branch","title":"Changing the Default Branch"}}},{"node":{"fields":{"slug":"/git/configuring-protected-branches","title":"Configure Branch Protection Rule"}}},{"node":{"fields":{"slug":"/git/basic-git-command","title":"Basic git command"}}},{"node":{"fields":{"slug":"/git/gitforksync","title":"git fork & sync"}}},{"node":{"fields":{"slug":"/git/rebase","title":"Rebase"}}},{"node":{"fields":{"slug":"/framework/prisma/NoticePrisma","title":"Notice Prisma"}}},{"node":{"fields":{"slug":"/framework/electron","title":"일렉트론 학습"}}},{"node":{"fields":{"slug":"/framework/prisma/prisma2","title":"Prisma 2"}}},{"node":{"fields":{"slug":"/framework/electron/electronbasic","title":"Electron Basic"}}},{"node":{"fields":{"slug":"/framework/NextJs","title":"Next Js"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/10.SpaceComplexity","title":"공간 복잡도(Space Complexity)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/11.BubbleSort","title":"버블 정렬(Bubble Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/12.InsertionSort","title":"삽입 정렬(Insertion Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/13.SelectionSort","title":"선택 정렬(Selection Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/14.RecursiveCall","title":"재귀 용법(Recursive Call)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/15.DynamicProgramming","title":"동적 계획법과 분할 정복(Dynamic Programming & Divide and conquer"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/16.QuickSort","title":"퀵 정렬(Quick Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/17.MergeSort","title":"병렬 정렬(Merge Sort)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/18.SequentialSearch","title":"순차 탐색(Sequential Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/2.array","title":"배열(Array)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/19.BinarySearch","title":"탐색 알고리즘(Binary Search)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/20.Graph","title":"그래프(Graph)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/21.Depth-FirstSearch","title":"깊이 우선 탐색(Depth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/22.Breadth-FirstSearch","title":"너비 우선 탐색(Breadth-FirstSearch)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/23.GreedyAlgorithm","title":"탐욕 알고리즘(Greedy Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/25.MinimumSpanningTree","title":"최소 신장 트리(Minimum Spanning Tree)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/24.DijkstraAlgorithm","title":"다익스트라 알고리즘(Dijkstra Algorithm)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/26.BackTracking","title":"백트래킹(BackTracking)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/3.queue","title":"큐(Queue)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/4.stack","title":"스택(Stack)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/5.linkedlist","title":"링크드리스트(LinkedList)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/6.TimeComplexity","title":"시간 복잡도(Time Complexity)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/8.Tree","title":"트리(Tree)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/9.Heap","title":"힙(Heap)"}}},{"node":{"fields":{"slug":"/datastructure&algorithm/7.HashTable","title":"해쉬 테이블(HashTable)"}}}]}},"pageContext":{"id":"51455553-5965-557a-8f00-0aaa7ec43952"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}